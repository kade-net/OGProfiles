
// ** Expanded prelude

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Basic theory for vectors using arrays. This version of vectors is not extensional.

datatype Vec<T> {
    Vec(v: [int]T, l: int)
}

function {:builtin "MapConst"} MapConstVec<T>(T): [int]T;
function DefaultVecElem<T>(): T;
function {:inline} DefaultVecMap<T>(): [int]T { MapConstVec(DefaultVecElem()) }

function {:inline} EmptyVec<T>(): Vec T {
    Vec(DefaultVecMap(), 0)
}

function {:inline} MakeVec1<T>(v: T): Vec T {
    Vec(DefaultVecMap()[0 := v], 1)
}

function {:inline} MakeVec2<T>(v1: T, v2: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2], 2)
}

function {:inline} MakeVec3<T>(v1: T, v2: T, v3: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3], 3)
}

function {:inline} MakeVec4<T>(v1: T, v2: T, v3: T, v4: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3][3 := v4], 4)
}

function {:inline} ExtendVec<T>(v: Vec T, elem: T): Vec T {
    (var l := v->l;
    Vec(v->v[l := elem], l + 1))
}

function {:inline} ReadVec<T>(v: Vec T, i: int): T {
    v->v[i]
}

function {:inline} LenVec<T>(v: Vec T): int {
    v->l
}

function {:inline} IsEmptyVec<T>(v: Vec T): bool {
    v->l == 0
}

function {:inline} RemoveVec<T>(v: Vec T): Vec T {
    (var l := v->l - 1;
    Vec(v->v[l := DefaultVecElem()], l))
}

function {:inline} RemoveAtVec<T>(v: Vec T, i: int): Vec T {
    (var l := v->l - 1;
    Vec(
        (lambda j: int ::
           if j >= 0 && j < l then
               if j < i then v->v[j] else v->v[j+1]
           else DefaultVecElem()),
        l))
}

function {:inline} ConcatVec<T>(v1: Vec T, v2: Vec T): Vec T {
    (var l1, m1, l2, m2 := v1->l, v1->v, v2->l, v2->v;
    Vec(
        (lambda i: int ::
          if i >= 0 && i < l1 + l2 then
            if i < l1 then m1[i] else m2[i - l1]
          else DefaultVecElem()),
        l1 + l2))
}

function {:inline} ReverseVec<T>(v: Vec T): Vec T {
    (var l := v->l;
    Vec(
        (lambda i: int :: if 0 <= i && i < l then v->v[l - i - 1] else DefaultVecElem()),
        l))
}

function {:inline} SliceVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(
        (lambda k:int ::
          if 0 <= k && k < j - i then
            m[i + k]
          else
            DefaultVecElem()),
        (if j - i < 0 then 0 else j - i)))
}


function {:inline} UpdateVec<T>(v: Vec T, i: int, elem: T): Vec T {
    Vec(v->v[i := elem], v->l)
}

function {:inline} SwapVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(m[i := m[j]][j := m[i]], v->l))
}

function {:inline} ContainsVec<T>(v: Vec T, e: T): bool {
    (var l := v->l;
    (exists i: int :: InRangeVec(v, i) && v->v[i] == e))
}

function IndexOfVec<T>(v: Vec T, e: T): int;
axiom {:ctor "Vec"} (forall<T> v: Vec T, e: T :: {IndexOfVec(v, e)}
    (var i := IndexOfVec(v,e);
     if (!ContainsVec(v, e)) then i == -1
     else InRangeVec(v, i) && ReadVec(v, i) == e &&
        (forall j: int :: j >= 0 && j < i ==> ReadVec(v, j) != e)));

// This function should stay non-inlined as it guards many quantifiers
// over vectors. It appears important to have this uninterpreted for
// quantifier triggering.
function InRangeVec<T>(v: Vec T, i: int): bool {
    i >= 0 && i < LenVec(v)
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Boogie model for multisets, based on Boogie arrays. This theory assumes extensional equality for element types.

datatype Multiset<T> {
    Multiset(v: [T]int, l: int)
}

function {:builtin "MapConst"} MapConstMultiset<T>(l: int): [T]int;

function {:inline} EmptyMultiset<T>(): Multiset T {
    Multiset(MapConstMultiset(0), 0)
}

function {:inline} LenMultiset<T>(s: Multiset T): int {
    s->l
}

function {:inline} ExtendMultiset<T>(s: Multiset T, v: T): Multiset T {
    (var len := s->l;
    (var cnt := s->v[v];
    Multiset(s->v[v := (cnt + 1)], len + 1)))
}

// This function returns (s1 - s2). This function assumes that s2 is a subset of s1.
function {:inline} SubtractMultiset<T>(s1: Multiset T, s2: Multiset T): Multiset T {
    (var len1 := s1->l;
    (var len2 := s2->l;
    Multiset((lambda v:T :: s1->v[v]-s2->v[v]), len1-len2)))
}

function {:inline} IsEmptyMultiset<T>(s: Multiset T): bool {
    (s->l == 0) &&
    (forall v: T :: s->v[v] == 0)
}

function {:inline} IsSubsetMultiset<T>(s1: Multiset T, s2: Multiset T): bool {
    (s1->l <= s2->l) &&
    (forall v: T :: s1->v[v] <= s2->v[v])
}

function {:inline} ContainsMultiset<T>(s: Multiset T, v: T): bool {
    s->v[v] > 0
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Theory for tables.

// v is the SMT array holding the key-value assignment. e is an array which
// independently determines whether a key is valid or not. l is the length.
//
// Note that even though the program cannot reflect over existence of a key,
// we want the specification to be able to do this, so it can express
// verification conditions like "key has been inserted".
datatype Table <K, V> {
    Table(v: [K]V, e: [K]bool, l: int)
}

// Functions for default SMT arrays. For the table values, we don't care and
// use an uninterpreted function.
function DefaultTableArray<K, V>(): [K]V;
function DefaultTableKeyExistsArray<K>(): [K]bool;
axiom DefaultTableKeyExistsArray() == (lambda i: int :: false);

function {:inline} EmptyTable<K, V>(): Table K V {
    Table(DefaultTableArray(), DefaultTableKeyExistsArray(), 0)
}

function {:inline} GetTable<K,V>(t: Table K V, k: K): V {
    // Notice we do not check whether key is in the table. The result is undetermined if it is not.
    t->v[k]
}

function {:inline} LenTable<K,V>(t: Table K V): int {
    t->l
}


function {:inline} ContainsTable<K,V>(t: Table K V, k: K): bool {
    t->e[k]
}

function {:inline} UpdateTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    Table(t->v[k := v], t->e, t->l)
}

function {:inline} AddTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    // This function has an undetermined result if the key is already in the table
    // (all specification functions have this "partial definiteness" behavior). Thus we can
    // just increment the length.
    Table(t->v[k := v], t->e[k := true], t->l + 1)
}

function {:inline} RemoveTable<K,V>(t: Table K V, k: K): Table K V {
    // Similar as above, we only need to consider the case where the key is in the table.
    Table(t->v, t->e[k := false], t->l - 1)
}

axiom {:ctor "Table"} (forall<K,V> t: Table K V :: {LenTable(t)}
    (exists k: K :: {ContainsTable(t, k)} ContainsTable(t, k)) ==> LenTable(t) >= 1
);
// TODO: we might want to encoder a stronger property that the length of table
// must be more than N given a set of N items. Currently we don't see a need here
// and the above axiom seems to be sufficient.
// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

// ==================================================================================
// Native object::exists_at

// ==================================================================================
// Intrinsic implementation of aggregator and aggregator factory

datatype $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle: int, $key: int, $limit: int, $val: int)
}
function {:inline} $Update'$1_aggregator_Aggregator'_handle(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(x, s->$key, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_key(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, x, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_limit(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, x, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_val(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, s->$limit, x)
}
function $IsValid'$1_aggregator_Aggregator'(s: $1_aggregator_Aggregator): bool {
    $IsValid'address'(s->$handle)
      && $IsValid'address'(s->$key)
      && $IsValid'u128'(s->$limit)
      && $IsValid'u128'(s->$val)
}
function {:inline} $IsEqual'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): bool {
    s1 == s2
}
function {:inline} $1_aggregator_spec_get_limit(s: $1_aggregator_Aggregator): int {
    s->$limit
}
function {:inline} $1_aggregator_spec_get_handle(s: $1_aggregator_Aggregator): int {
    s->$handle
}
function {:inline} $1_aggregator_spec_get_key(s: $1_aggregator_Aggregator): int {
    s->$key
}
function {:inline} $1_aggregator_spec_get_val(s: $1_aggregator_Aggregator): int {
    s->$val
}

function $1_aggregator_spec_read(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_spec_aggregator_set_val(agg: $1_aggregator_Aggregator, val: int): $1_aggregator_Aggregator {
    $Update'$1_aggregator_Aggregator'_val(agg, val)
}

function $1_aggregator_spec_aggregator_get_val(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_factory_spec_new_aggregator(limit: int) : $1_aggregator_Aggregator;

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
    (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_get_limit(agg) == limit));

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
     (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_aggregator_get_val(agg) == 0));


// ============================================================================================
// Primitive Types

const $MAX_U8: int;
axiom $MAX_U8 == 255;
const $MAX_U16: int;
axiom $MAX_U16 == 65535;
const $MAX_U32: int;
axiom $MAX_U32 == 4294967295;
const $MAX_U64: int;
axiom $MAX_U64 == 18446744073709551615;
const $MAX_U128: int;
axiom $MAX_U128 == 340282366920938463463374607431768211455;
const $MAX_U256: int;
axiom $MAX_U256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935;

// Templates for bitvector operations

function {:bvbuiltin "bvand"} $And'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvor"} $Or'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvxor"} $Xor'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvadd"} $Add'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvsub"} $Sub'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvmul"} $Mul'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvudiv"} $Div'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvurem"} $Mod'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvshl"} $Shl'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvlshr"} $Shr'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvult"} $Lt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv8'(bv8,bv8) returns(bool);

procedure {:inline 1} $AddBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Add'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $AddBv8_unchecked(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $SubBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv8'(src1, src2);
}

procedure {:inline 1} $MulBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Mul'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv8'(src1, src2);
}

procedure {:inline 1} $DivBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv8'(src1, src2);
}

procedure {:inline 1} $ModBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv8'(src1, src2);
}

procedure {:inline 1} $AndBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $And'Bv8'(src1,src2);
}

procedure {:inline 1} $OrBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Or'Bv8'(src1,src2);
}

procedure {:inline 1} $XorBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Xor'Bv8'(src1,src2);
}

procedure {:inline 1} $LtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Lt'Bv8'(src1,src2);
}

procedure {:inline 1} $LeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Le'Bv8'(src1,src2);
}

procedure {:inline 1} $GtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Gt'Bv8'(src1,src2);
}

procedure {:inline 1} $GeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Ge'Bv8'(src1,src2);
}

function $IsValid'bv8'(v: bv8): bool {
  $Ge'Bv8'(v,0bv8) && $Le'Bv8'(v,255bv8)
}

function {:inline} $IsEqual'bv8'(x: bv8, y: bv8): bool {
    x == y
}

procedure {:inline 1} $int2bv8(src: int) returns (dst: bv8)
{
    if (src > 255) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.8(src);
}

procedure {:inline 1} $bv2int8(src: bv8) returns (dst: int)
{
    dst := $bv2int.8(src);
}

function {:builtin "(_ int2bv 8)"} $int2bv.8(i: int) returns (bv8);
function {:builtin "bv2nat"} $bv2int.8(i: bv8) returns (int);

function {:bvbuiltin "bvand"} $And'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvor"} $Or'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvxor"} $Xor'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvadd"} $Add'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvsub"} $Sub'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvmul"} $Mul'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvudiv"} $Div'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvurem"} $Mod'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvshl"} $Shl'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvlshr"} $Shr'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvult"} $Lt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv16'(bv16,bv16) returns(bool);

procedure {:inline 1} $AddBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Add'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $AddBv16_unchecked(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $SubBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv16'(src1, src2);
}

procedure {:inline 1} $MulBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Mul'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv16'(src1, src2);
}

procedure {:inline 1} $DivBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv16'(src1, src2);
}

procedure {:inline 1} $ModBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv16'(src1, src2);
}

procedure {:inline 1} $AndBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $And'Bv16'(src1,src2);
}

procedure {:inline 1} $OrBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Or'Bv16'(src1,src2);
}

procedure {:inline 1} $XorBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Xor'Bv16'(src1,src2);
}

procedure {:inline 1} $LtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Lt'Bv16'(src1,src2);
}

procedure {:inline 1} $LeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Le'Bv16'(src1,src2);
}

procedure {:inline 1} $GtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Gt'Bv16'(src1,src2);
}

procedure {:inline 1} $GeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Ge'Bv16'(src1,src2);
}

function $IsValid'bv16'(v: bv16): bool {
  $Ge'Bv16'(v,0bv16) && $Le'Bv16'(v,65535bv16)
}

function {:inline} $IsEqual'bv16'(x: bv16, y: bv16): bool {
    x == y
}

procedure {:inline 1} $int2bv16(src: int) returns (dst: bv16)
{
    if (src > 65535) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.16(src);
}

procedure {:inline 1} $bv2int16(src: bv16) returns (dst: int)
{
    dst := $bv2int.16(src);
}

function {:builtin "(_ int2bv 16)"} $int2bv.16(i: int) returns (bv16);
function {:builtin "bv2nat"} $bv2int.16(i: bv16) returns (int);

function {:bvbuiltin "bvand"} $And'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvor"} $Or'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvxor"} $Xor'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvadd"} $Add'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvsub"} $Sub'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvmul"} $Mul'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvudiv"} $Div'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvurem"} $Mod'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvshl"} $Shl'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvlshr"} $Shr'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvult"} $Lt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv32'(bv32,bv32) returns(bool);

procedure {:inline 1} $AddBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Add'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $AddBv32_unchecked(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $SubBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv32'(src1, src2);
}

procedure {:inline 1} $MulBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Mul'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv32'(src1, src2);
}

procedure {:inline 1} $DivBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv32'(src1, src2);
}

procedure {:inline 1} $ModBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv32'(src1, src2);
}

procedure {:inline 1} $AndBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $And'Bv32'(src1,src2);
}

procedure {:inline 1} $OrBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Or'Bv32'(src1,src2);
}

procedure {:inline 1} $XorBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Xor'Bv32'(src1,src2);
}

procedure {:inline 1} $LtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Lt'Bv32'(src1,src2);
}

procedure {:inline 1} $LeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Le'Bv32'(src1,src2);
}

procedure {:inline 1} $GtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Gt'Bv32'(src1,src2);
}

procedure {:inline 1} $GeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Ge'Bv32'(src1,src2);
}

function $IsValid'bv32'(v: bv32): bool {
  $Ge'Bv32'(v,0bv32) && $Le'Bv32'(v,2147483647bv32)
}

function {:inline} $IsEqual'bv32'(x: bv32, y: bv32): bool {
    x == y
}

procedure {:inline 1} $int2bv32(src: int) returns (dst: bv32)
{
    if (src > 2147483647) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.32(src);
}

procedure {:inline 1} $bv2int32(src: bv32) returns (dst: int)
{
    dst := $bv2int.32(src);
}

function {:builtin "(_ int2bv 32)"} $int2bv.32(i: int) returns (bv32);
function {:builtin "bv2nat"} $bv2int.32(i: bv32) returns (int);

function {:bvbuiltin "bvand"} $And'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvor"} $Or'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvxor"} $Xor'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvadd"} $Add'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsub"} $Sub'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvmul"} $Mul'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvudiv"} $Div'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvurem"} $Mod'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvshl"} $Shl'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvlshr"} $Shr'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvult"} $Lt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv64'(bv64,bv64) returns(bool);

procedure {:inline 1} $AddBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Add'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $AddBv64_unchecked(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $SubBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv64'(src1, src2);
}

procedure {:inline 1} $MulBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Mul'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv64'(src1, src2);
}

procedure {:inline 1} $DivBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv64'(src1, src2);
}

procedure {:inline 1} $ModBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv64'(src1, src2);
}

procedure {:inline 1} $AndBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $And'Bv64'(src1,src2);
}

procedure {:inline 1} $OrBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Or'Bv64'(src1,src2);
}

procedure {:inline 1} $XorBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Xor'Bv64'(src1,src2);
}

procedure {:inline 1} $LtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Lt'Bv64'(src1,src2);
}

procedure {:inline 1} $LeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Le'Bv64'(src1,src2);
}

procedure {:inline 1} $GtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Gt'Bv64'(src1,src2);
}

procedure {:inline 1} $GeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Ge'Bv64'(src1,src2);
}

function $IsValid'bv64'(v: bv64): bool {
  $Ge'Bv64'(v,0bv64) && $Le'Bv64'(v,18446744073709551615bv64)
}

function {:inline} $IsEqual'bv64'(x: bv64, y: bv64): bool {
    x == y
}

procedure {:inline 1} $int2bv64(src: int) returns (dst: bv64)
{
    if (src > 18446744073709551615) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.64(src);
}

procedure {:inline 1} $bv2int64(src: bv64) returns (dst: int)
{
    dst := $bv2int.64(src);
}

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: int) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (int);

function {:bvbuiltin "bvand"} $And'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvor"} $Or'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvxor"} $Xor'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvadd"} $Add'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvsub"} $Sub'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvmul"} $Mul'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvudiv"} $Div'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvurem"} $Mod'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvshl"} $Shl'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvlshr"} $Shr'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvult"} $Lt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv128'(bv128,bv128) returns(bool);

procedure {:inline 1} $AddBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Add'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $AddBv128_unchecked(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $SubBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv128'(src1, src2);
}

procedure {:inline 1} $MulBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Mul'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv128'(src1, src2);
}

procedure {:inline 1} $DivBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv128'(src1, src2);
}

procedure {:inline 1} $ModBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv128'(src1, src2);
}

procedure {:inline 1} $AndBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $And'Bv128'(src1,src2);
}

procedure {:inline 1} $OrBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Or'Bv128'(src1,src2);
}

procedure {:inline 1} $XorBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Xor'Bv128'(src1,src2);
}

procedure {:inline 1} $LtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Lt'Bv128'(src1,src2);
}

procedure {:inline 1} $LeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Le'Bv128'(src1,src2);
}

procedure {:inline 1} $GtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Gt'Bv128'(src1,src2);
}

procedure {:inline 1} $GeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Ge'Bv128'(src1,src2);
}

function $IsValid'bv128'(v: bv128): bool {
  $Ge'Bv128'(v,0bv128) && $Le'Bv128'(v,340282366920938463463374607431768211455bv128)
}

function {:inline} $IsEqual'bv128'(x: bv128, y: bv128): bool {
    x == y
}

procedure {:inline 1} $int2bv128(src: int) returns (dst: bv128)
{
    if (src > 340282366920938463463374607431768211455) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.128(src);
}

procedure {:inline 1} $bv2int128(src: bv128) returns (dst: int)
{
    dst := $bv2int.128(src);
}

function {:builtin "(_ int2bv 128)"} $int2bv.128(i: int) returns (bv128);
function {:builtin "bv2nat"} $bv2int.128(i: bv128) returns (int);

function {:bvbuiltin "bvand"} $And'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvor"} $Or'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvxor"} $Xor'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvadd"} $Add'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvsub"} $Sub'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvmul"} $Mul'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvudiv"} $Div'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvurem"} $Mod'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvshl"} $Shl'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvlshr"} $Shr'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvult"} $Lt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv256'(bv256,bv256) returns(bool);

procedure {:inline 1} $AddBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Add'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $AddBv256_unchecked(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $SubBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv256'(src1, src2);
}

procedure {:inline 1} $MulBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Mul'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv256'(src1, src2);
}

procedure {:inline 1} $DivBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv256'(src1, src2);
}

procedure {:inline 1} $ModBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv256'(src1, src2);
}

procedure {:inline 1} $AndBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $And'Bv256'(src1,src2);
}

procedure {:inline 1} $OrBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Or'Bv256'(src1,src2);
}

procedure {:inline 1} $XorBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Xor'Bv256'(src1,src2);
}

procedure {:inline 1} $LtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Lt'Bv256'(src1,src2);
}

procedure {:inline 1} $LeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Le'Bv256'(src1,src2);
}

procedure {:inline 1} $GtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Gt'Bv256'(src1,src2);
}

procedure {:inline 1} $GeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Ge'Bv256'(src1,src2);
}

function $IsValid'bv256'(v: bv256): bool {
  $Ge'Bv256'(v,0bv256) && $Le'Bv256'(v,115792089237316195423570985008687907853269984665640564039457584007913129639935bv256)
}

function {:inline} $IsEqual'bv256'(x: bv256, y: bv256): bool {
    x == y
}

procedure {:inline 1} $int2bv256(src: int) returns (dst: bv256)
{
    if (src > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.256(src);
}

procedure {:inline 1} $bv2int256(src: bv256) returns (dst: int)
{
    dst := $bv2int.256(src);
}

function {:builtin "(_ int2bv 256)"} $int2bv.256(i: int) returns (bv256);
function {:builtin "bv2nat"} $bv2int.256(i: bv256) returns (int);

datatype $Range {
    $Range(lb: int, ub: int)
}

function {:inline} $IsValid'bool'(v: bool): bool {
  true
}

function $IsValid'u8'(v: int): bool {
  v >= 0 && v <= $MAX_U8
}

function $IsValid'u16'(v: int): bool {
  v >= 0 && v <= $MAX_U16
}

function $IsValid'u32'(v: int): bool {
  v >= 0 && v <= $MAX_U32
}

function $IsValid'u64'(v: int): bool {
  v >= 0 && v <= $MAX_U64
}

function $IsValid'u128'(v: int): bool {
  v >= 0 && v <= $MAX_U128
}

function $IsValid'u256'(v: int): bool {
  v >= 0 && v <= $MAX_U256
}

function $IsValid'num'(v: int): bool {
  true
}

function $IsValid'address'(v: int): bool {
  // TODO: restrict max to representable addresses?
  v >= 0
}

function {:inline} $IsValidRange(r: $Range): bool {
   $IsValid'u64'(r->lb) &&  $IsValid'u64'(r->ub)
}

// Intentionally not inlined so it serves as a trigger in quantifiers.
function $InRange(r: $Range, i: int): bool {
   r->lb <= i && i < r->ub
}


function {:inline} $IsEqual'u8'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u16'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u32'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u64'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u128'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u256'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'num'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'address'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'bool'(x: bool, y: bool): bool {
    x == y
}

// ============================================================================================
// Memory

datatype $Location {
    // A global resource location within the statically known resource type's memory,
    // where `a` is an address.
    $Global(a: int),
    // A local location. `i` is the unique index of the local.
    $Local(i: int),
    // The location of a reference outside of the verification scope, for example, a `&mut` parameter
    // of the function being verified. References with these locations don't need to be written back
    // when mutation ends.
    $Param(i: int),
    // The location of an uninitialized mutation. Using this to make sure that the location
    // will not be equal to any valid mutation locations, i.e., $Local, $Global, or $Param.
    $Uninitialized()
}

// A mutable reference which also carries its current value. Since mutable references
// are single threaded in Move, we can keep them together and treat them as a value
// during mutation until the point they are stored back to their original location.
datatype $Mutation<T> {
    $Mutation(l: $Location, p: Vec int, v: T)
}

// Representation of memory for a given type.
datatype $Memory<T> {
    $Memory(domain: [int]bool, contents: [int]T)
}

function {:builtin "MapConst"} $ConstMemoryDomain(v: bool): [int]bool;
function {:builtin "MapConst"} $ConstMemoryContent<T>(v: T): [int]T;
axiom $ConstMemoryDomain(false) == (lambda i: int :: false);
axiom $ConstMemoryDomain(true) == (lambda i: int :: true);


// Dereferences a mutation.
function {:inline} $Dereference<T>(ref: $Mutation T): T {
    ref->v
}

// Update the value of a mutation.
function {:inline} $UpdateMutation<T>(m: $Mutation T, v: T): $Mutation T {
    $Mutation(m->l, m->p, v)
}

function {:inline} $ChildMutation<T1, T2>(m: $Mutation T1, offset: int, v: T2): $Mutation T2 {
    $Mutation(m->l, ExtendVec(m->p, offset), v)
}

// Return true if two mutations share the location and path
function {:inline} $IsSameMutation<T1, T2>(parent: $Mutation T1, child: $Mutation T2 ): bool {
    parent->l == child->l && parent->p == child->p
}

// Return true if the mutation is a parent of a child which was derived with the given edge offset. This
// is used to implement write-back choices.
function {:inline} $IsParentMutation<T1, T2>(parent: $Mutation T1, edge: int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
     cl == pl + 1 &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) ==  ReadVec(cp, i)) &&
     $EdgeMatches(ReadVec(cp, pl), edge)
    ))))
}

// Return true if the mutation is a parent of a child, for hyper edge.
function {:inline} $IsParentMutationHyper<T1, T2>(parent: $Mutation T1, hyper_edge: Vec int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
    (var el := LenVec(hyper_edge);
     cl == pl + el &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) == ReadVec(cp, i)) &&
     (forall i: int:: i >= 0 && i < el ==> $EdgeMatches(ReadVec(cp, pl + i), ReadVec(hyper_edge, i)))
    )))))
}

function {:inline} $EdgeMatches(edge: int, edge_pattern: int): bool {
    edge_pattern == -1 // wildcard
    || edge_pattern == edge
}



function {:inline} $SameLocation<T1, T2>(m1: $Mutation T1, m2: $Mutation T2): bool {
    m1->l == m2->l
}

function {:inline} $HasGlobalLocation<T>(m: $Mutation T): bool {
    (m->l) is $Global
}

function {:inline} $HasLocalLocation<T>(m: $Mutation T, idx: int): bool {
    m->l == $Local(idx)
}

function {:inline} $GlobalLocationAddress<T>(m: $Mutation T): int {
    (m->l)->a
}



// Tests whether resource exists.
function {:inline} $ResourceExists<T>(m: $Memory T, addr: int): bool {
    m->domain[addr]
}

// Obtains Value of given resource.
function {:inline} $ResourceValue<T>(m: $Memory T, addr: int): T {
    m->contents[addr]
}

// Update resource.
function {:inline} $ResourceUpdate<T>(m: $Memory T, a: int, v: T): $Memory T {
    $Memory(m->domain[a := true], m->contents[a := v])
}

// Remove resource.
function {:inline} $ResourceRemove<T>(m: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := false], m->contents)
}

// Copies resource from memory s to m.
function {:inline} $ResourceCopy<T>(m: $Memory T, s: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := s->domain[a]],
            m->contents[a := s->contents[a]])
}



// ============================================================================================
// Abort Handling

var $abort_flag: bool;
var $abort_code: int;

function {:inline} $process_abort_code(code: int): int {
    code
}

const $EXEC_FAILURE_CODE: int;
axiom $EXEC_FAILURE_CODE == -1;

// TODO(wrwg): currently we map aborts of native functions like those for vectors also to
//   execution failure. This may need to be aligned with what the runtime actually does.

procedure {:inline 1} $ExecFailureAbort() {
    $abort_flag := true;
    $abort_code := $EXEC_FAILURE_CODE;
}

procedure {:inline 1} $Abort(code: int) {
    $abort_flag := true;
    $abort_code := code;
}

function {:inline} $StdError(cat: int, reason: int): int {
    reason * 256 + cat
}

procedure {:inline 1} $InitVerification() {
    // Set abort_flag to false, and havoc abort_code
    $abort_flag := false;
    havoc $abort_code;
    // Initialize event store
    call $InitEventStore();
}

// ============================================================================================
// Instructions


procedure {:inline 1} $CastU8(src: int) returns (dst: int)
{
    if (src > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU16(src: int) returns (dst: int)
{
    if (src > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU32(src: int) returns (dst: int)
{
    if (src > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU64(src: int) returns (dst: int)
{
    if (src > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU128(src: int) returns (dst: int)
{
    if (src > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU256(src: int) returns (dst: int)
{
    if (src > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $AddU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $Sub(src1: int, src2: int) returns (dst: int)
{
    if (src1 < src2) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 - src2;
}

// uninterpreted function to return an undefined value.
function $undefined_int(): int;

// Recursive exponentiation function
// Undefined unless e >=0.  $pow(0,0) is also undefined.
function $pow(n: int, e: int): int {
    if n != 0 && e == 0 then 1
    else if e > 0 then n * $pow(n, e - 1)
    else $undefined_int()
}

function $shl(src1: int, p: int): int {
    src1 * $pow(2, p)
}

function $shlU8(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 256
}

function $shlU16(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 65536
}

function $shlU32(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 4294967296
}

function $shlU64(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 18446744073709551616
}

function $shlU128(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 340282366920938463463374607431768211456
}

function $shlU256(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 115792089237316195423570985008687907853269984665640564039457584007913129639936
}

function $shr(src1: int, p: int): int {
    src1 div $pow(2, p)
}

// We need to know the size of the destination in order to drop bits
// that have been shifted left more than that, so we have $ShlU8/16/32/64/128/256
procedure {:inline 1} $ShlU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU8(src1, src2);
}

// Template for cast and shift operations of bitvector types

procedure {:inline 1} $CastBv8to8(src: bv8) returns (dst: bv8)
{
    dst := src;
}


function $shlBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shl'Bv8'(src1, src2)
}

procedure {:inline 1} $ShlBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2);
}

function $shrBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shr'Bv8'(src1, src2)
}

procedure {:inline 1} $ShrBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2);
}

procedure {:inline 1} $CastBv16to8(src: bv16) returns (dst: bv8)
{
    if ($Gt'Bv16'(src, 255bv16)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv32to8(src: bv32) returns (dst: bv8)
{
    if ($Gt'Bv32'(src, 255bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv64to8(src: bv64) returns (dst: bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv128to8(src: bv128) returns (dst: bv8)
{
    if ($Gt'Bv128'(src, 255bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv256to8(src: bv256) returns (dst: bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv8to16(src: bv8) returns (dst: bv16)
{
    dst := 0bv8 ++ src;
}


function $shlBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shl'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShlBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, 0bv8 ++ src2);
}

function $shrBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shr'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShrBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, 0bv8 ++ src2);
}

procedure {:inline 1} $CastBv16to16(src: bv16) returns (dst: bv16)
{
    dst := src;
}


function $shlBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shl'Bv16'(src1, src2)
}

procedure {:inline 1} $ShlBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2);
}

function $shrBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shr'Bv16'(src1, src2)
}

procedure {:inline 1} $ShrBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2);
}

procedure {:inline 1} $CastBv32to16(src: bv32) returns (dst: bv16)
{
    if ($Gt'Bv32'(src, 65535bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv64to16(src: bv64) returns (dst: bv16)
{
    if ($Gt'Bv64'(src, 65535bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv128to16(src: bv128) returns (dst: bv16)
{
    if ($Gt'Bv128'(src, 65535bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv256to16(src: bv256) returns (dst: bv16)
{
    if ($Gt'Bv256'(src, 65535bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv8to32(src: bv8) returns (dst: bv32)
{
    dst := 0bv24 ++ src;
}


function $shlBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShlBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv24 ++ src2);
}

function $shrBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShrBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv24 ++ src2);
}

procedure {:inline 1} $CastBv16to32(src: bv16) returns (dst: bv32)
{
    dst := 0bv16 ++ src;
}


function $shlBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShlBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv16 ++ src2);
}

function $shrBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShrBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv16 ++ src2);
}

procedure {:inline 1} $CastBv32to32(src: bv32) returns (dst: bv32)
{
    dst := src;
}


function $shlBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shl'Bv32'(src1, src2)
}

procedure {:inline 1} $ShlBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2);
}

function $shrBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shr'Bv32'(src1, src2)
}

procedure {:inline 1} $ShrBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2);
}

procedure {:inline 1} $CastBv64to32(src: bv64) returns (dst: bv32)
{
    if ($Gt'Bv64'(src, 2147483647bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv128to32(src: bv128) returns (dst: bv32)
{
    if ($Gt'Bv128'(src, 2147483647bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv256to32(src: bv256) returns (dst: bv32)
{
    if ($Gt'Bv256'(src, 2147483647bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv8to64(src: bv8) returns (dst: bv64)
{
    dst := 0bv56 ++ src;
}


function $shlBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShlBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv56 ++ src2);
}

function $shrBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShrBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv56 ++ src2);
}

procedure {:inline 1} $CastBv16to64(src: bv16) returns (dst: bv64)
{
    dst := 0bv48 ++ src;
}


function $shlBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShlBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv48 ++ src2);
}

function $shrBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShrBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv48 ++ src2);
}

procedure {:inline 1} $CastBv32to64(src: bv32) returns (dst: bv64)
{
    dst := 0bv32 ++ src;
}


function $shlBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShlBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv32 ++ src2);
}

function $shrBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShrBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv32 ++ src2);
}

procedure {:inline 1} $CastBv64to64(src: bv64) returns (dst: bv64)
{
    dst := src;
}


function $shlBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shl'Bv64'(src1, src2)
}

procedure {:inline 1} $ShlBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2);
}

function $shrBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shr'Bv64'(src1, src2)
}

procedure {:inline 1} $ShrBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2);
}

procedure {:inline 1} $CastBv128to64(src: bv128) returns (dst: bv64)
{
    if ($Gt'Bv128'(src, 18446744073709551615bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv256to64(src: bv256) returns (dst: bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv8to128(src: bv8) returns (dst: bv128)
{
    dst := 0bv120 ++ src;
}


function $shlBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShlBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv120 ++ src2);
}

function $shrBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShrBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv120 ++ src2);
}

procedure {:inline 1} $CastBv16to128(src: bv16) returns (dst: bv128)
{
    dst := 0bv112 ++ src;
}


function $shlBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShlBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv112 ++ src2);
}

function $shrBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShrBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv112 ++ src2);
}

procedure {:inline 1} $CastBv32to128(src: bv32) returns (dst: bv128)
{
    dst := 0bv96 ++ src;
}


function $shlBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShlBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv96 ++ src2);
}

function $shrBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShrBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv96 ++ src2);
}

procedure {:inline 1} $CastBv64to128(src: bv64) returns (dst: bv128)
{
    dst := 0bv64 ++ src;
}


function $shlBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShlBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv64 ++ src2);
}

function $shrBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShrBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv64 ++ src2);
}

procedure {:inline 1} $CastBv128to128(src: bv128) returns (dst: bv128)
{
    dst := src;
}


function $shlBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shl'Bv128'(src1, src2)
}

procedure {:inline 1} $ShlBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2);
}

function $shrBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shr'Bv128'(src1, src2)
}

procedure {:inline 1} $ShrBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2);
}

procedure {:inline 1} $CastBv256to128(src: bv256) returns (dst: bv128)
{
    if ($Gt'Bv256'(src, 340282366920938463463374607431768211455bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[128:0];
}


function $shlBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shl'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShlBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2[128:0]);
}

function $shrBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shr'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShrBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2[128:0]);
}

procedure {:inline 1} $CastBv8to256(src: bv8) returns (dst: bv256)
{
    dst := 0bv248 ++ src;
}


function $shlBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShlBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv248 ++ src2);
}

function $shrBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShrBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv248 ++ src2);
}

procedure {:inline 1} $CastBv16to256(src: bv16) returns (dst: bv256)
{
    dst := 0bv240 ++ src;
}


function $shlBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShlBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv240 ++ src2);
}

function $shrBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShrBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv240 ++ src2);
}

procedure {:inline 1} $CastBv32to256(src: bv32) returns (dst: bv256)
{
    dst := 0bv224 ++ src;
}


function $shlBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShlBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv224 ++ src2);
}

function $shrBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShrBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv224 ++ src2);
}

procedure {:inline 1} $CastBv64to256(src: bv64) returns (dst: bv256)
{
    dst := 0bv192 ++ src;
}


function $shlBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShlBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv192 ++ src2);
}

function $shrBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShrBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv192 ++ src2);
}

procedure {:inline 1} $CastBv128to256(src: bv128) returns (dst: bv256)
{
    dst := 0bv128 ++ src;
}


function $shlBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShlBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv128 ++ src2);
}

function $shrBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShrBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv128 ++ src2);
}

procedure {:inline 1} $CastBv256to256(src: bv256) returns (dst: bv256)
{
    dst := src;
}


function $shlBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shl'Bv256'(src1, src2)
}

procedure {:inline 1} $ShlBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, src2);
}

function $shrBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shr'Bv256'(src1, src2)
}

procedure {:inline 1} $ShrBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, src2);
}

procedure {:inline 1} $ShlU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU16(src1, src2);
}

procedure {:inline 1} $ShlU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU32(src1, src2);
}

procedure {:inline 1} $ShlU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
       call $ExecFailureAbort();
       return;
    }
    dst := $shlU64(src1, src2);
}

procedure {:inline 1} $ShlU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU128(src1, src2);
}

procedure {:inline 1} $ShlU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shlU256(src1, src2);
}

procedure {:inline 1} $Shr(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $MulU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $Div(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 div src2;
}

procedure {:inline 1} $Mod(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 mod src2;
}

procedure {:inline 1} $ArithBinaryUnimplemented(src1: int, src2: int) returns (dst: int);

procedure {:inline 1} $Lt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 < src2;
}

procedure {:inline 1} $Gt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 > src2;
}

procedure {:inline 1} $Le(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 <= src2;
}

procedure {:inline 1} $Ge(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 >= src2;
}

procedure {:inline 1} $And(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 && src2;
}

procedure {:inline 1} $Or(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 || src2;
}

procedure {:inline 1} $Not(src: bool) returns (dst: bool)
{
    dst := !src;
}

// Pack and Unpack are auto-generated for each type T


// ==================================================================================
// Native Vector

function {:inline} $SliceVecByRange<T>(v: Vec T, r: $Range): Vec T {
    SliceVec(v, r->lb, r->ub)
}

// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `#0`

// Not inlined. It appears faster this way.
function $IsEqual'vec'#0''(v1: Vec (#0), v2: Vec (#0)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'#0'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'#0''(v: Vec (#0), prefix: Vec (#0)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'#0'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'#0''(v: Vec (#0), suffix: Vec (#0)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'#0'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'#0''(v: Vec (#0)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'#0'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'#0'(v: Vec (#0), e: #0): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e))
}

function $IndexOfVec'#0'(v: Vec (#0), e: #0): int;
axiom (forall v: Vec (#0), e: #0:: {$IndexOfVec'#0'(v, e)}
    (var i := $IndexOfVec'#0'(v, e);
     if (!$ContainsVec'#0'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'#0'(ReadVec(v, j), e))));


function {:inline} $RangeVec'#0'(v: Vec (#0)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'#0'() returns (v: Vec (#0)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'#0'(v: Vec (#0)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'#0'(m: $Mutation (Vec (#0)), val: #0) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'#0'(v: Vec (#0), val: #0): Vec (#0) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'#0'(m: $Mutation (Vec (#0))) returns (e: #0, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'#0'(m: $Mutation (Vec (#0))) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'#0'(m: $Mutation (Vec (#0)), left: int, right: int) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'#0'(m: $Mutation (Vec (#0)), rot: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'#0'(m: $Mutation (Vec (#0)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var mid_left_vec: Vec (#0);
    var mid_right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'#0'(m: $Mutation (Vec (#0)), i: int, e: #0) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'#0'(v: Vec (#0)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'#0'(v: Vec (#0)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'#0'(v: Vec (#0), i: int) returns (dst: #0) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'#0'(m: $Mutation (Vec (#0)), index: int)
returns (dst: $Mutation (#0), m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'#0'(v: Vec (#0)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'#0'(m: $Mutation (Vec (#0)), i: int, j: int) returns (m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'#0'(v: Vec (#0), i: int, j: int): Vec (#0) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var len: int;
    var v: Vec (#0);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'#0'(v: Vec (#0), e: #0) returns (res: bool)  {
    res := $ContainsVec'#0'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'#0'(v: Vec (#0), e: #0) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'#0'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_aggregator_Aggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_aggregator_Aggregator''(v1: Vec ($1_aggregator_Aggregator), v2: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), prefix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), suffix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_aggregator_Aggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): int;
axiom (forall v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator:: {$IndexOfVec'$1_aggregator_Aggregator'(v, e)}
    (var i := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
     if (!$ContainsVec'$1_aggregator_Aggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_aggregator_Aggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_aggregator_Aggregator'() returns (v: Vec ($1_aggregator_Aggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), val: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), val: $1_aggregator_Aggregator): Vec ($1_aggregator_Aggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var mid_left_vec: Vec ($1_aggregator_Aggregator);
    var mid_right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, e: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int) returns (dst: $1_aggregator_Aggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), index: int)
returns (dst: $Mutation ($1_aggregator_Aggregator), m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int, j: int): Vec ($1_aggregator_Aggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var len: int;
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res: bool)  {
    res := $ContainsVec'$1_aggregator_Aggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_Integer`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_Integer''(v1: Vec ($1_optional_aggregator_Integer), v2: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), prefix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), suffix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_Integer'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): int;
axiom (forall v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer:: {$IndexOfVec'$1_optional_aggregator_Integer'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_Integer'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_Integer'() returns (v: Vec ($1_optional_aggregator_Integer)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), val: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), val: $1_optional_aggregator_Integer): Vec ($1_optional_aggregator_Integer) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var mid_left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, e: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int) returns (dst: $1_optional_aggregator_Integer) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_Integer), m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int, j: int): Vec ($1_optional_aggregator_Integer) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_Integer'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_OptionalAggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''(v1: Vec ($1_optional_aggregator_OptionalAggregator), v2: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), prefix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), suffix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): int;
axiom (forall v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator:: {$IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_OptionalAggregator'() returns (v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), val: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), val: $1_optional_aggregator_OptionalAggregator): Vec ($1_optional_aggregator_OptionalAggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, e: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int) returns (dst: $1_optional_aggregator_OptionalAggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_OptionalAggregator), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int, j: int): Vec ($1_optional_aggregator_OptionalAggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_simple_map_Element'address_$1_string_String'`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_simple_map_Element'address_$1_string_String'''(v1: Vec ($1_simple_map_Element'address_$1_string_String'), v2: Vec ($1_simple_map_Element'address_$1_string_String')): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_simple_map_Element'address_$1_string_String''(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_simple_map_Element'address_$1_string_String'''(v: Vec ($1_simple_map_Element'address_$1_string_String'), prefix: Vec ($1_simple_map_Element'address_$1_string_String')): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_simple_map_Element'address_$1_string_String''(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_simple_map_Element'address_$1_string_String'''(v: Vec ($1_simple_map_Element'address_$1_string_String'), suffix: Vec ($1_simple_map_Element'address_$1_string_String')): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_simple_map_Element'address_$1_string_String''(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_simple_map_Element'address_$1_string_String'''(v: Vec ($1_simple_map_Element'address_$1_string_String')): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_simple_map_Element'address_$1_string_String''(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String'), e: $1_simple_map_Element'address_$1_string_String'): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_simple_map_Element'address_$1_string_String''(ReadVec(v, i), e))
}

function $IndexOfVec'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String'), e: $1_simple_map_Element'address_$1_string_String'): int;
axiom (forall v: Vec ($1_simple_map_Element'address_$1_string_String'), e: $1_simple_map_Element'address_$1_string_String':: {$IndexOfVec'$1_simple_map_Element'address_$1_string_String''(v, e)}
    (var i := $IndexOfVec'$1_simple_map_Element'address_$1_string_String''(v, e);
     if (!$ContainsVec'$1_simple_map_Element'address_$1_string_String''(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_simple_map_Element'address_$1_string_String''(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_simple_map_Element'address_$1_string_String''(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String')): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_simple_map_Element'address_$1_string_String''(): Vec ($1_simple_map_Element'address_$1_string_String') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_simple_map_Element'address_$1_string_String''() returns (v: Vec ($1_simple_map_Element'address_$1_string_String')) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_simple_map_Element'address_$1_string_String''(): Vec ($1_simple_map_Element'address_$1_string_String') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String')) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')), val: $1_simple_map_Element'address_$1_string_String') returns (m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String'))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String'), val: $1_simple_map_Element'address_$1_string_String'): Vec ($1_simple_map_Element'address_$1_string_String') {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String'))) returns (e: $1_simple_map_Element'address_$1_string_String', m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String'))) {
    var v: Vec ($1_simple_map_Element'address_$1_string_String');
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')), other: Vec ($1_simple_map_Element'address_$1_string_String')) returns (m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String'))) returns (m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String'))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')), other: Vec ($1_simple_map_Element'address_$1_string_String')) returns (m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')), new_len: int) returns (v: (Vec ($1_simple_map_Element'address_$1_string_String')), m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')), new_len: int) returns (v: (Vec ($1_simple_map_Element'address_$1_string_String')), m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')), left: int, right: int) returns (m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String'))) {
    var left_vec: Vec ($1_simple_map_Element'address_$1_string_String');
    var mid_vec: Vec ($1_simple_map_Element'address_$1_string_String');
    var right_vec: Vec ($1_simple_map_Element'address_$1_string_String');
    var v: Vec ($1_simple_map_Element'address_$1_string_String');
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')), rot: int) returns (n: int, m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String'))) {
    var v: Vec ($1_simple_map_Element'address_$1_string_String');
    var len: int;
    var left_vec: Vec ($1_simple_map_Element'address_$1_string_String');
    var right_vec: Vec ($1_simple_map_Element'address_$1_string_String');
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String'))) {
    var left_vec: Vec ($1_simple_map_Element'address_$1_string_String');
    var mid_vec: Vec ($1_simple_map_Element'address_$1_string_String');
    var right_vec: Vec ($1_simple_map_Element'address_$1_string_String');
    var mid_left_vec: Vec ($1_simple_map_Element'address_$1_string_String');
    var mid_right_vec: Vec ($1_simple_map_Element'address_$1_string_String');
    var v: Vec ($1_simple_map_Element'address_$1_string_String');
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')), i: int, e: $1_simple_map_Element'address_$1_string_String') returns (m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String'))) {
    var left_vec: Vec ($1_simple_map_Element'address_$1_string_String');
    var right_vec: Vec ($1_simple_map_Element'address_$1_string_String');
    var v: Vec ($1_simple_map_Element'address_$1_string_String');
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String')) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String')): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String'), i: int) returns (dst: $1_simple_map_Element'address_$1_string_String') {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String'), i: int): $1_simple_map_Element'address_$1_string_String' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')), index: int)
returns (dst: $Mutation ($1_simple_map_Element'address_$1_string_String'), m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')))
{
    var v: Vec ($1_simple_map_Element'address_$1_string_String');
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String'), i: int): $1_simple_map_Element'address_$1_string_String' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String')) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')), i: int, j: int) returns (m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')))
{
    var v: Vec ($1_simple_map_Element'address_$1_string_String');
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String'), i: int, j: int): Vec ($1_simple_map_Element'address_$1_string_String') {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')), i: int) returns (e: $1_simple_map_Element'address_$1_string_String', m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')))
{
    var v: Vec ($1_simple_map_Element'address_$1_string_String');

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_simple_map_Element'address_$1_string_String''(m: $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')), i: int) returns (e: $1_simple_map_Element'address_$1_string_String', m': $Mutation (Vec ($1_simple_map_Element'address_$1_string_String')))
{
    var len: int;
    var v: Vec ($1_simple_map_Element'address_$1_string_String');

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String'), e: $1_simple_map_Element'address_$1_string_String') returns (res: bool)  {
    res := $ContainsVec'$1_simple_map_Element'address_$1_string_String''(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_simple_map_Element'address_$1_string_String''(v: Vec ($1_simple_map_Element'address_$1_string_String'), e: $1_simple_map_Element'address_$1_string_String') returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_simple_map_Element'address_$1_string_String''(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_string_String`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_string_String''(v1: Vec ($1_string_String), v2: Vec ($1_string_String)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_string_String'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_string_String''(v: Vec ($1_string_String), prefix: Vec ($1_string_String)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_string_String'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_string_String''(v: Vec ($1_string_String), suffix: Vec ($1_string_String)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_string_String'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_string_String''(v: Vec ($1_string_String)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_string_String'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_string_String'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String): int;
axiom (forall v: Vec ($1_string_String), e: $1_string_String:: {$IndexOfVec'$1_string_String'(v, e)}
    (var i := $IndexOfVec'$1_string_String'(v, e);
     if (!$ContainsVec'$1_string_String'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_string_String'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_string_String'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_string_String'(v: Vec ($1_string_String)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_string_String'(): Vec ($1_string_String) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_string_String'() returns (v: Vec ($1_string_String)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_string_String'(): Vec ($1_string_String) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_string_String'(v: Vec ($1_string_String)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_string_String'(m: $Mutation (Vec ($1_string_String)), val: $1_string_String) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_string_String'(v: Vec ($1_string_String), val: $1_string_String): Vec ($1_string_String) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_string_String'(m: $Mutation (Vec ($1_string_String))) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String))) {
    var v: Vec ($1_string_String);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_string_String'(m: $Mutation (Vec ($1_string_String)), other: Vec ($1_string_String)) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_string_String'(m: $Mutation (Vec ($1_string_String))) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_string_String'(m: $Mutation (Vec ($1_string_String)), other: Vec ($1_string_String)) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_string_String'(m: $Mutation (Vec ($1_string_String)), new_len: int) returns (v: (Vec ($1_string_String)), m': $Mutation (Vec ($1_string_String))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_string_String'(m: $Mutation (Vec ($1_string_String)), new_len: int) returns (v: (Vec ($1_string_String)), m': $Mutation (Vec ($1_string_String))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_string_String'(m: $Mutation (Vec ($1_string_String)), left: int, right: int) returns (m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var mid_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_string_String'(m: $Mutation (Vec ($1_string_String)), rot: int) returns (n: int, m': $Mutation (Vec ($1_string_String))) {
    var v: Vec ($1_string_String);
    var len: int;
    var left_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_string_String'(m: $Mutation (Vec ($1_string_String)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var mid_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var mid_left_vec: Vec ($1_string_String);
    var mid_right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int, e: $1_string_String) returns (m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_string_String'(v: Vec ($1_string_String)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_string_String'(v: Vec ($1_string_String)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_string_String'(v: Vec ($1_string_String), i: int) returns (dst: $1_string_String) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_string_String'(v: Vec ($1_string_String), i: int): $1_string_String {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_string_String'(m: $Mutation (Vec ($1_string_String)), index: int)
returns (dst: $Mutation ($1_string_String), m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_string_String'(v: Vec ($1_string_String), i: int): $1_string_String {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_string_String'(v: Vec ($1_string_String)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int, j: int) returns (m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_string_String'(v: Vec ($1_string_String), i: int, j: int): Vec ($1_string_String) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String)))
{
    var len: int;
    var v: Vec ($1_string_String);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String) returns (res: bool)  {
    res := $ContainsVec'$1_string_String'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_string_String'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$4_collection_UnlimitedSupply`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$4_collection_UnlimitedSupply''(v1: Vec ($4_collection_UnlimitedSupply), v2: Vec ($4_collection_UnlimitedSupply)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$4_collection_UnlimitedSupply'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$4_collection_UnlimitedSupply''(v: Vec ($4_collection_UnlimitedSupply), prefix: Vec ($4_collection_UnlimitedSupply)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$4_collection_UnlimitedSupply'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$4_collection_UnlimitedSupply''(v: Vec ($4_collection_UnlimitedSupply), suffix: Vec ($4_collection_UnlimitedSupply)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$4_collection_UnlimitedSupply'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$4_collection_UnlimitedSupply''(v: Vec ($4_collection_UnlimitedSupply)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$4_collection_UnlimitedSupply'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), e: $4_collection_UnlimitedSupply): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_collection_UnlimitedSupply'(ReadVec(v, i), e))
}

function $IndexOfVec'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), e: $4_collection_UnlimitedSupply): int;
axiom (forall v: Vec ($4_collection_UnlimitedSupply), e: $4_collection_UnlimitedSupply:: {$IndexOfVec'$4_collection_UnlimitedSupply'(v, e)}
    (var i := $IndexOfVec'$4_collection_UnlimitedSupply'(v, e);
     if (!$ContainsVec'$4_collection_UnlimitedSupply'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_collection_UnlimitedSupply'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$4_collection_UnlimitedSupply'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$4_collection_UnlimitedSupply'(): Vec ($4_collection_UnlimitedSupply) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$4_collection_UnlimitedSupply'() returns (v: Vec ($4_collection_UnlimitedSupply)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$4_collection_UnlimitedSupply'(): Vec ($4_collection_UnlimitedSupply) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), val: $4_collection_UnlimitedSupply) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), val: $4_collection_UnlimitedSupply): Vec ($4_collection_UnlimitedSupply) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply))) returns (e: $4_collection_UnlimitedSupply, m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var v: Vec ($4_collection_UnlimitedSupply);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), other: Vec ($4_collection_UnlimitedSupply)) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply))) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), other: Vec ($4_collection_UnlimitedSupply)) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), new_len: int) returns (v: (Vec ($4_collection_UnlimitedSupply)), m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), new_len: int) returns (v: (Vec ($4_collection_UnlimitedSupply)), m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), left: int, right: int) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var left_vec: Vec ($4_collection_UnlimitedSupply);
    var mid_vec: Vec ($4_collection_UnlimitedSupply);
    var right_vec: Vec ($4_collection_UnlimitedSupply);
    var v: Vec ($4_collection_UnlimitedSupply);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), rot: int) returns (n: int, m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var v: Vec ($4_collection_UnlimitedSupply);
    var len: int;
    var left_vec: Vec ($4_collection_UnlimitedSupply);
    var right_vec: Vec ($4_collection_UnlimitedSupply);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var left_vec: Vec ($4_collection_UnlimitedSupply);
    var mid_vec: Vec ($4_collection_UnlimitedSupply);
    var right_vec: Vec ($4_collection_UnlimitedSupply);
    var mid_left_vec: Vec ($4_collection_UnlimitedSupply);
    var mid_right_vec: Vec ($4_collection_UnlimitedSupply);
    var v: Vec ($4_collection_UnlimitedSupply);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), i: int, e: $4_collection_UnlimitedSupply) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var left_vec: Vec ($4_collection_UnlimitedSupply);
    var right_vec: Vec ($4_collection_UnlimitedSupply);
    var v: Vec ($4_collection_UnlimitedSupply);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), i: int) returns (dst: $4_collection_UnlimitedSupply) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), i: int): $4_collection_UnlimitedSupply {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), index: int)
returns (dst: $Mutation ($4_collection_UnlimitedSupply), m': $Mutation (Vec ($4_collection_UnlimitedSupply)))
{
    var v: Vec ($4_collection_UnlimitedSupply);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), i: int): $4_collection_UnlimitedSupply {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), i: int, j: int) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply)))
{
    var v: Vec ($4_collection_UnlimitedSupply);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), i: int, j: int): Vec ($4_collection_UnlimitedSupply) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), i: int) returns (e: $4_collection_UnlimitedSupply, m': $Mutation (Vec ($4_collection_UnlimitedSupply)))
{
    var v: Vec ($4_collection_UnlimitedSupply);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), i: int) returns (e: $4_collection_UnlimitedSupply, m': $Mutation (Vec ($4_collection_UnlimitedSupply)))
{
    var len: int;
    var v: Vec ($4_collection_UnlimitedSupply);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), e: $4_collection_UnlimitedSupply) returns (res: bool)  {
    res := $ContainsVec'$4_collection_UnlimitedSupply'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), e: $4_collection_UnlimitedSupply) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$4_collection_UnlimitedSupply'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$4_royalty_Royalty`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$4_royalty_Royalty''(v1: Vec ($4_royalty_Royalty), v2: Vec ($4_royalty_Royalty)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$4_royalty_Royalty'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$4_royalty_Royalty''(v: Vec ($4_royalty_Royalty), prefix: Vec ($4_royalty_Royalty)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$4_royalty_Royalty'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$4_royalty_Royalty''(v: Vec ($4_royalty_Royalty), suffix: Vec ($4_royalty_Royalty)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$4_royalty_Royalty'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$4_royalty_Royalty''(v: Vec ($4_royalty_Royalty)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$4_royalty_Royalty'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_royalty_Royalty'(ReadVec(v, i), e))
}

function $IndexOfVec'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty): int;
axiom (forall v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty:: {$IndexOfVec'$4_royalty_Royalty'(v, e)}
    (var i := $IndexOfVec'$4_royalty_Royalty'(v, e);
     if (!$ContainsVec'$4_royalty_Royalty'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_royalty_Royalty'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$4_royalty_Royalty'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$4_royalty_Royalty'(): Vec ($4_royalty_Royalty) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$4_royalty_Royalty'() returns (v: Vec ($4_royalty_Royalty)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$4_royalty_Royalty'(): Vec ($4_royalty_Royalty) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), val: $4_royalty_Royalty) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), val: $4_royalty_Royalty): Vec ($4_royalty_Royalty) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty))) returns (e: $4_royalty_Royalty, m': $Mutation (Vec ($4_royalty_Royalty))) {
    var v: Vec ($4_royalty_Royalty);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), other: Vec ($4_royalty_Royalty)) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty))) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), other: Vec ($4_royalty_Royalty)) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), new_len: int) returns (v: (Vec ($4_royalty_Royalty)), m': $Mutation (Vec ($4_royalty_Royalty))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), new_len: int) returns (v: (Vec ($4_royalty_Royalty)), m': $Mutation (Vec ($4_royalty_Royalty))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), left: int, right: int) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    var left_vec: Vec ($4_royalty_Royalty);
    var mid_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    var v: Vec ($4_royalty_Royalty);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), rot: int) returns (n: int, m': $Mutation (Vec ($4_royalty_Royalty))) {
    var v: Vec ($4_royalty_Royalty);
    var len: int;
    var left_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($4_royalty_Royalty))) {
    var left_vec: Vec ($4_royalty_Royalty);
    var mid_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    var mid_left_vec: Vec ($4_royalty_Royalty);
    var mid_right_vec: Vec ($4_royalty_Royalty);
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int, e: $4_royalty_Royalty) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    var left_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int) returns (dst: $4_royalty_Royalty) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int): $4_royalty_Royalty {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), index: int)
returns (dst: $Mutation ($4_royalty_Royalty), m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int): $4_royalty_Royalty {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int, j: int) returns (m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int, j: int): Vec ($4_royalty_Royalty) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int) returns (e: $4_royalty_Royalty, m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var v: Vec ($4_royalty_Royalty);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int) returns (e: $4_royalty_Royalty, m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var len: int;
    var v: Vec ($4_royalty_Royalty);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty) returns (res: bool)  {
    res := $ContainsVec'$4_royalty_Royalty'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$4_royalty_Royalty'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `address`

// Not inlined. It appears faster this way.
function $IsEqual'vec'address''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'address'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'address''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'address'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'address''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'address'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'address''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'address'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'address'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e))
}

function $IndexOfVec'address'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'address'(v, e)}
    (var i := $IndexOfVec'address'(v, e);
     if (!$ContainsVec'address'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'address'(ReadVec(v, j), e))));


function {:inline} $RangeVec'address'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'address'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'address'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'address'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'address'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'address'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'address'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'address'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'address'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'address'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'address'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'address'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'address'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'address'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'address'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'address'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'address'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'address'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'address'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'address'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'address'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'address'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u64''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u64''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u64''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u64''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u64'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e))
}

function $IndexOfVec'u64'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u64'(v, e)}
    (var i := $IndexOfVec'u64'(v, e);
     if (!$ContainsVec'u64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u64'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u64'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u64'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u64'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u64'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u64'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u64'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u64'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u64'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u64'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u64'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u64'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u64'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u64'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u64'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u64'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u64'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u64'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u64'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u64'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u8''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u8''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u8''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u8''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u8'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e))
}

function $IndexOfVec'u8'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u8'(v, e)}
    (var i := $IndexOfVec'u8'(v, e);
     if (!$ContainsVec'u8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u8'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u8'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u8'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u8'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u8'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u8'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u8'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u8'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u8'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u8'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u8'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u8'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u8'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u8'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u8'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u8'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u8'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u8'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u8'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u8'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv64''(v1: Vec (bv64), v2: Vec (bv64)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv64''(v: Vec (bv64), prefix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv64''(v: Vec (bv64), suffix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv64''(v: Vec (bv64)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv64'(v: Vec (bv64), e: bv64): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e))
}

function $IndexOfVec'bv64'(v: Vec (bv64), e: bv64): int;
axiom (forall v: Vec (bv64), e: bv64:: {$IndexOfVec'bv64'(v, e)}
    (var i := $IndexOfVec'bv64'(v, e);
     if (!$ContainsVec'bv64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv64'(v: Vec (bv64)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv64'() returns (v: Vec (bv64)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv64'(v: Vec (bv64)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv64'(m: $Mutation (Vec (bv64)), val: bv64) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv64'(v: Vec (bv64), val: bv64): Vec (bv64) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv64'(m: $Mutation (Vec (bv64))) returns (e: bv64, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv64'(m: $Mutation (Vec (bv64))) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, right: int) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv64'(m: $Mutation (Vec (bv64)), rot: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var mid_left_vec: Vec (bv64);
    var mid_right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv64'(m: $Mutation (Vec (bv64)), i: int, e: bv64) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv64'(v: Vec (bv64)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv64'(v: Vec (bv64)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv64'(v: Vec (bv64), i: int) returns (dst: bv64) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv64'(m: $Mutation (Vec (bv64)), index: int)
returns (dst: $Mutation (bv64), m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv64'(v: Vec (bv64)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv64'(m: $Mutation (Vec (bv64)), i: int, j: int) returns (m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv64'(v: Vec (bv64), i: int, j: int): Vec (bv64) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var len: int;
    var v: Vec (bv64);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv64'(v: Vec (bv64), e: bv64) returns (res: bool)  {
    res := $ContainsVec'bv64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv64'(v: Vec (bv64), e: bv64) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv8''(v1: Vec (bv8), v2: Vec (bv8)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv8''(v: Vec (bv8), prefix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv8''(v: Vec (bv8), suffix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv8''(v: Vec (bv8)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv8'(v: Vec (bv8), e: bv8): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e))
}

function $IndexOfVec'bv8'(v: Vec (bv8), e: bv8): int;
axiom (forall v: Vec (bv8), e: bv8:: {$IndexOfVec'bv8'(v, e)}
    (var i := $IndexOfVec'bv8'(v, e);
     if (!$ContainsVec'bv8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv8'(v: Vec (bv8)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv8'() returns (v: Vec (bv8)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv8'(v: Vec (bv8)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv8'(m: $Mutation (Vec (bv8)), val: bv8) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv8'(v: Vec (bv8), val: bv8): Vec (bv8) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv8'(m: $Mutation (Vec (bv8))) returns (e: bv8, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv8'(m: $Mutation (Vec (bv8))) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, right: int) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv8'(m: $Mutation (Vec (bv8)), rot: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var mid_left_vec: Vec (bv8);
    var mid_right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv8'(m: $Mutation (Vec (bv8)), i: int, e: bv8) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv8'(v: Vec (bv8)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv8'(v: Vec (bv8)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv8'(v: Vec (bv8), i: int) returns (dst: bv8) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv8'(m: $Mutation (Vec (bv8)), index: int)
returns (dst: $Mutation (bv8), m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv8'(v: Vec (bv8)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv8'(m: $Mutation (Vec (bv8)), i: int, j: int) returns (m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv8'(v: Vec (bv8), i: int, j: int): Vec (bv8) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var len: int;
    var v: Vec (bv8);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv8'(v: Vec (bv8), e: bv8) returns (res: bool)  {
    res := $ContainsVec'bv8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv8'(v: Vec (bv8), e: bv8) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ==================================================================================
// Native Table

// ----------------------------------------------------------------------------------
// Native Table key encoding for type `address`

function $EncodeKey'address'(k: int): int;
axiom (
  forall k1, k2: int :: {$EncodeKey'address'(k1), $EncodeKey'address'(k2)}
    $IsEqual'address'(k1, k2) <==> $EncodeKey'address'(k1) == $EncodeKey'address'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table implementation for type `(address,address)`

function $IsEqual'$1_simple_map_SimpleMap'address_address''(t1: Table int (int), t2: Table int (int)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_simple_map_SimpleMap'address_address''(t: Table int (int)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'address'(GetTable(t, i)))
}
procedure {:inline 2} $1_simple_map_create'address_address'() returns (v: Table int (int)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_simple_map_destroy_empty'address_address'(t: Table int (int)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_simple_map_length'address_address'(t: (Table int (int))) returns (l: int) {
    l := LenTable(t);
}
procedure {:inline 2} $1_simple_map_contains_key'address_address'(t: (Table int (int)), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'address'(k));
}
procedure {:inline 2} $1_simple_map_add'address_address'(m: $Mutation (Table int (int)), k: int, v: int) returns (m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_simple_map_remove'address_address'(m: $Mutation (Table int (int)), k: int)
returns (k': int, v: int, m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        k' := k;
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_simple_map_borrow'address_address'(t: Table int (int), k: int) returns (v: int) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
procedure {:inline 2} $1_simple_map_borrow_mut'address_address'(m: $Mutation (Table int (int)), k: int)
returns (dst: $Mutation (int), m': $Mutation (Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_simple_map_spec_len'address_address'(t: (Table int (int))): int {
    LenTable(t)
}
function {:inline} $1_simple_map_spec_contains_key'address_address'(t: (Table int (int)), k: int): bool {
    ContainsTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_simple_map_spec_set'address_address'(t: Table int (int), k: int, v: int): Table int (int) {
    (var enc_k := $EncodeKey'address'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_simple_map_spec_remove'address_address'(t: Table int (int), k: int): Table int (int) {
    RemoveTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_simple_map_spec_get'address_address'(t: Table int (int), k: int): int {
    GetTable(t, $EncodeKey'address'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `(address,$1_string_String)`

function $IsEqual'$1_simple_map_SimpleMap'address_$1_string_String''(t1: Table int ($1_string_String), t2: Table int ($1_string_String)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_simple_map_SimpleMap'address_$1_string_String''(t: Table int ($1_string_String)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$1_string_String'(GetTable(t, i)))
}
procedure {:inline 2} $1_simple_map_create'address_$1_string_String'() returns (v: Table int ($1_string_String)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_simple_map_destroy_empty'address_$1_string_String'(t: Table int ($1_string_String)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_simple_map_length'address_$1_string_String'(t: (Table int ($1_string_String))) returns (l: int) {
    l := LenTable(t);
}
procedure {:inline 2} $1_simple_map_contains_key'address_$1_string_String'(t: (Table int ($1_string_String)), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'address'(k));
}
procedure {:inline 2} $1_simple_map_add'address_$1_string_String'(m: $Mutation (Table int ($1_string_String)), k: int, v: $1_string_String) returns (m': $Mutation(Table int ($1_string_String))) {
    var enc_k: int;
    var t: Table int ($1_string_String);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_simple_map_remove'address_$1_string_String'(m: $Mutation (Table int ($1_string_String)), k: int)
returns (k': int, v: $1_string_String, m': $Mutation(Table int ($1_string_String))) {
    var enc_k: int;
    var t: Table int ($1_string_String);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        k' := k;
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_simple_map_borrow'address_$1_string_String'(t: Table int ($1_string_String), k: int) returns (v: $1_string_String) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
procedure {:inline 2} $1_simple_map_borrow_mut'address_$1_string_String'(m: $Mutation (Table int ($1_string_String)), k: int)
returns (dst: $Mutation ($1_string_String), m': $Mutation (Table int ($1_string_String))) {
    var enc_k: int;
    var t: Table int ($1_string_String);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_simple_map_spec_len'address_$1_string_String'(t: (Table int ($1_string_String))): int {
    LenTable(t)
}
function {:inline} $1_simple_map_spec_contains_key'address_$1_string_String'(t: (Table int ($1_string_String)), k: int): bool {
    ContainsTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_simple_map_spec_set'address_$1_string_String'(t: Table int ($1_string_String), k: int, v: $1_string_String): Table int ($1_string_String) {
    (var enc_k := $EncodeKey'address'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_simple_map_spec_remove'address_$1_string_String'(t: Table int ($1_string_String), k: int): Table int ($1_string_String) {
    RemoveTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_simple_map_spec_get'address_$1_string_String'(t: Table int ($1_string_String), k: int): $1_string_String {
    GetTable(t, $EncodeKey'address'(k))
}



// ==================================================================================
// Native Hash

// Hash is modeled as an otherwise uninterpreted injection.
// In truth, it is not an injection since the domain has greater cardinality
// (arbitrary length vectors) than the co-domain (vectors of length 32).  But it is
// common to assume in code there are no hash collisions in practice.  Fortunately,
// Boogie is not smart enough to recognized that there is an inconsistency.
// FIXME: If we were using a reliable extensional theory of arrays, and if we could use ==
// instead of $IsEqual, we might be able to avoid so many quantified formulas by
// using a sha2_inverse function in the ensures conditions of Hash_sha2_256 to
// assert that sha2/3 are injections without using global quantified axioms.


function $1_hash_sha2(val: Vec int): Vec int;

// This says that Hash_sha2 is bijective.
axiom (forall v1,v2: Vec int :: {$1_hash_sha2(v1), $1_hash_sha2(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha2(v1), $1_hash_sha2(v2)));

procedure $1_hash_sha2_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha2(val);     // returns Hash_sha2 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha2_256(val: Vec int): Vec int {
    $1_hash_sha2(val)
}

// similarly for Hash_sha3
function $1_hash_sha3(val: Vec int): Vec int;

axiom (forall v1,v2: Vec int :: {$1_hash_sha3(v1), $1_hash_sha3(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha3(v1), $1_hash_sha3(v2)));

procedure $1_hash_sha3_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha3(val);     // returns Hash_sha3 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha3_256(val: Vec int): Vec int {
    $1_hash_sha3(val)
}

// ==================================================================================
// Native string

// TODO: correct implementation of strings

procedure {:inline 1} $1_string_internal_check_utf8(x: Vec int) returns (r: bool) {
}

procedure {:inline 1} $1_string_internal_sub_string(x: Vec int, i: int, j: int) returns (r: Vec int) {
}

procedure {:inline 1} $1_string_internal_index_of(x: Vec int, y: Vec int) returns (r: int) {
}

procedure {:inline 1} $1_string_internal_is_char_boundary(x: Vec int, i: int) returns (r: bool) {
}




// ==================================================================================
// Native diem_account

procedure {:inline 1} $1_DiemAccount_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

procedure {:inline 1} $1_DiemAccount_destroy_signer(
  signer: $signer
) {
  return;
}

// ==================================================================================
// Native account

procedure {:inline 1} $1_Account_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

// ==================================================================================
// Native Signer

datatype $signer {
    $signer($addr: int)
}
function {:inline} $IsValid'signer'(s: $signer): bool {
    $IsValid'address'(s->$addr)
}
function {:inline} $IsEqual'signer'(s1: $signer, s2: $signer): bool {
    s1 == s2
}

procedure {:inline 1} $1_signer_borrow_address(signer: $signer) returns (res: int) {
    res := signer->$addr;
}

function {:inline} $1_signer_$borrow_address(signer: $signer): int
{
    signer->$addr
}

function $1_signer_is_txn_signer(s: $signer): bool;

function $1_signer_is_txn_signer_addr(a: int): bool;


// ==================================================================================
// Native signature

// Signature related functionality is handled via uninterpreted functions. This is sound
// currently because we verify every code path based on signature verification with
// an arbitrary interpretation.

function $1_Signature_$ed25519_validate_pubkey(public_key: Vec int): bool;
function $1_Signature_$ed25519_verify(signature: Vec int, public_key: Vec int, message: Vec int): bool;

// Needed because we do not have extensional equality:
axiom (forall k1, k2: Vec int ::
    {$1_Signature_$ed25519_validate_pubkey(k1), $1_Signature_$ed25519_validate_pubkey(k2)}
    $IsEqual'vec'u8''(k1, k2) ==> $1_Signature_$ed25519_validate_pubkey(k1) == $1_Signature_$ed25519_validate_pubkey(k2));
axiom (forall s1, s2, k1, k2, m1, m2: Vec int ::
    {$1_Signature_$ed25519_verify(s1, k1, m1), $1_Signature_$ed25519_verify(s2, k2, m2)}
    $IsEqual'vec'u8''(s1, s2) && $IsEqual'vec'u8''(k1, k2) && $IsEqual'vec'u8''(m1, m2)
    ==> $1_Signature_$ed25519_verify(s1, k1, m1) == $1_Signature_$ed25519_verify(s2, k2, m2));


procedure {:inline 1} $1_Signature_ed25519_validate_pubkey(public_key: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_validate_pubkey(public_key);
}

procedure {:inline 1} $1_Signature_ed25519_verify(
        signature: Vec int, public_key: Vec int, message: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_verify(signature, public_key, message);
}


// ==================================================================================
// Native bcs::serialize

// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `address`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'address'(v: int): Vec int;

axiom (forall v1, v2: int :: {$1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)}
   $IsEqual'address'(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'address'(v: int) returns (res: Vec int);
ensures res == $1_bcs_serialize'address'(v);

function {:inline} $1_bcs_$to_bytes'address'(v: int): Vec int {
    $1_bcs_serialize'address'(v)
}

// Serialized addresses should have the same length.
const $serialized_address_len: int;
// Serialized addresses should have the same length
axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); LenVec(r) == $serialized_address_len));




// ==================================================================================
// Native Event module



procedure {:inline 1} $InitEventStore() {
}

// ============================================================================================
// Type Reflection on Type Parameters

datatype $TypeParamInfo {
    $TypeParamBool(),
    $TypeParamU8(),
    $TypeParamU16(),
    $TypeParamU32(),
    $TypeParamU64(),
    $TypeParamU128(),
    $TypeParamU256(),
    $TypeParamAddress(),
    $TypeParamSigner(),
    $TypeParamVector(e: $TypeParamInfo),
    $TypeParamStruct(a: int, m: Vec int, s: Vec int)
}



//==================================
// Begin Translation

function $TypeName(t: $TypeParamInfo): Vec int;
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamBool ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)) ==> t is $TypeParamBool);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU8 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)) ==> t is $TypeParamU8);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU16 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)) ==> t is $TypeParamU16);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU32 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)) ==> t is $TypeParamU32);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU64 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)) ==> t is $TypeParamU64);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU128 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)) ==> t is $TypeParamU128);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU256 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)) ==> t is $TypeParamU256);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamAddress ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)) ==> t is $TypeParamAddress);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamSigner ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)) ==> t is $TypeParamSigner);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamVector ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7), $TypeName(t->e)), Vec(DefaultVecMap()[0 := 62], 1))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} ($IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7)) && $IsSuffix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 62], 1))) ==> t is $TypeParamVector);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamStruct ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 48][1 := 120], 2), MakeVec1(t->a)), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->m), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->s)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 48][1 := 120], 2)) ==> t is $TypeParamVector);


// Given Types for Type Parameters

type #0;
function {:inline} $IsEqual'#0'(x1: #0, x2: #0): bool { x1 == x2 }
function {:inline} $IsValid'#0'(x: #0): bool { true }
var #0_info: $TypeParamInfo;
var #0_$memory: $Memory #0;

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'bool'(b1), $1_from_bcs_deserializable'bool'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u8'(b1), $1_from_bcs_deserializable'u8'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u64'(b1), $1_from_bcs_deserializable'u64'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u128'(b1), $1_from_bcs_deserializable'u128'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u256'(b1), $1_from_bcs_deserializable'u256'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'address'(b1), $1_from_bcs_deserializable'address'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'signer'(b1), $1_from_bcs_deserializable'signer'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u8''(b1), $1_from_bcs_deserializable'vec'u8''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u64''(b1), $1_from_bcs_deserializable'vec'u64''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'address''(b1), $1_from_bcs_deserializable'vec'address''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_string_String''(b1), $1_from_bcs_deserializable'vec'$1_string_String''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<simple_map::Element<address, string::String>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_simple_map_Element'address_$1_string_String'''(b1), $1_from_bcs_deserializable'vec'$1_simple_map_Element'address_$1_string_String'''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$4_royalty_Royalty''(b1), $1_from_bcs_deserializable'vec'$4_royalty_Royalty''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<collection::UnlimitedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$4_collection_UnlimitedSupply''(b1), $1_from_bcs_deserializable'vec'$4_collection_UnlimitedSupply''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'#0''(b1), $1_from_bcs_deserializable'vec'#0''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'u64''(b1), $1_from_bcs_deserializable'$1_option_Option'u64''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'address''(b1), $1_from_bcs_deserializable'$1_option_Option'address''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_string_String''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_string_String''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(b1), $1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<collection::UnlimitedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$4_collection_UnlimitedSupply''(b1), $1_from_bcs_deserializable'$1_option_Option'$4_collection_UnlimitedSupply''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_String'(b1), $1_from_bcs_deserializable'$1_string_String'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserializable'$1_type_info_TypeInfo'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_GUID'(b1), $1_from_bcs_deserializable'$1_guid_GUID'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_ID'(b1), $1_from_bcs_deserializable'$1_guid_ID'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<collection::BurnEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<collection::MintEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<collection::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<token::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<OGProfilesTest2::ClaimUsernameEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<OGProfilesTest2::ProfileMintEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_Account'(b1), $1_from_bcs_deserializable'$1_account_Account'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::CoinRegisterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(b1), $1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_SignerCapability'(b1), $1_from_bcs_deserializable'$1_account_SignerCapability'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserializable'$1_aggregator_Aggregator'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::Coin<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::CoinInfo<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::CoinStore<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::Ghost$supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <simple_map::Element<address, string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_simple_map_Element'address_$1_string_String''(b1), $1_from_bcs_deserializable'$1_simple_map_Element'address_$1_string_String''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <simple_map::SimpleMap<address, address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_address''(b1), $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_address''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <simple_map::SimpleMap<address, string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_$1_string_String''(b1), $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_$1_string_String''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::NIL>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(b1), $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <string_utils::Cons<string::String, string_utils::NIL>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(b1), $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <string_utils::NIL>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_utils_NIL'(b1), $1_from_bcs_deserializable'$1_string_utils_NIL'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ConstructorRef'(b1), $1_from_bcs_deserializable'$1_object_ConstructorRef'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::Object<collection::Collection>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(b1), $1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ObjectCore'(b1), $1_from_bcs_deserializable'$1_object_ObjectCore'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferEvent'(b1), $1_from_bcs_deserializable'$1_object_TransferEvent'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferRef'(b1), $1_from_bcs_deserializable'$1_object_TransferRef'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <royalty::Royalty>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_royalty_Royalty'(b1), $1_from_bcs_deserializable'$4_royalty_Royalty'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <collection::Collection>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_Collection'(b1), $1_from_bcs_deserializable'$4_collection_Collection'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <collection::FixedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_FixedSupply'(b1), $1_from_bcs_deserializable'$4_collection_FixedSupply'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <collection::MintEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_MintEvent'(b1), $1_from_bcs_deserializable'$4_collection_MintEvent'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <collection::UnlimitedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(b1), $1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <token::Token>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_token_Token'(b1), $1_from_bcs_deserializable'$4_token_Token'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <OGProfilesTest2::ClaimUsernameEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(b1), $1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <OGProfilesTest2::Profile>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'(b1), $1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <OGProfilesTest2::ProfileMintEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(b1), $1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <OGProfilesTest2::State>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'(b1), $1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'#0'(b1), $1_from_bcs_deserializable'#0'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u128'($1_from_bcs_deserialize'u128'(b1), $1_from_bcs_deserialize'u128'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u64''($1_from_bcs_deserialize'vec'u64''(b1), $1_from_bcs_deserialize'vec'u64''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'address''($1_from_bcs_deserialize'vec'address''(b1), $1_from_bcs_deserialize'vec'address''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_string_String''($1_from_bcs_deserialize'vec'$1_string_String''(b1), $1_from_bcs_deserialize'vec'$1_string_String''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_aggregator_Aggregator''($1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<simple_map::Element<address, string::String>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_simple_map_Element'address_$1_string_String'''($1_from_bcs_deserialize'vec'$1_simple_map_Element'address_$1_string_String'''(b1), $1_from_bcs_deserialize'vec'$1_simple_map_Element'address_$1_string_String'''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$4_royalty_Royalty''($1_from_bcs_deserialize'vec'$4_royalty_Royalty''(b1), $1_from_bcs_deserialize'vec'$4_royalty_Royalty''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<collection::UnlimitedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$4_collection_UnlimitedSupply''($1_from_bcs_deserialize'vec'$4_collection_UnlimitedSupply''(b1), $1_from_bcs_deserialize'vec'$4_collection_UnlimitedSupply''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'u64''($1_from_bcs_deserialize'$1_option_Option'u64''(b1), $1_from_bcs_deserialize'$1_option_Option'u64''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'address''($1_from_bcs_deserialize'$1_option_Option'address''(b1), $1_from_bcs_deserialize'$1_option_Option'address''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_string_String''($1_from_bcs_deserialize'$1_option_Option'$1_string_String''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_string_String''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_aggregator_Aggregator''($1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$4_royalty_Royalty''($1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(b1), $1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<collection::UnlimitedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$4_collection_UnlimitedSupply''($1_from_bcs_deserialize'$1_option_Option'$4_collection_UnlimitedSupply''(b1), $1_from_bcs_deserialize'$1_option_Option'$4_collection_UnlimitedSupply''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_type_info_TypeInfo'($1_from_bcs_deserialize'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserialize'$1_type_info_TypeInfo'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<collection::BurnEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_collection_BurnEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<collection::MintEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_collection_MintEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<collection::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_collection_MutationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<token::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_token_MutationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<OGProfilesTest2::ClaimUsernameEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<OGProfilesTest2::ProfileMintEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_Account'($1_from_bcs_deserialize'$1_account_Account'(b1), $1_from_bcs_deserialize'$1_account_Account'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::CoinRegisterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CoinRegisterEvent'($1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(b1), $1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_SignerCapability'($1_from_bcs_deserialize'$1_account_SignerCapability'(b1), $1_from_bcs_deserialize'$1_account_SignerCapability'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_Aggregator'($1_from_bcs_deserialize'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserialize'$1_aggregator_Aggregator'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_Integer'($1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'($1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::Coin<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::CoinInfo<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::CoinStore<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::Ghost$supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aptos_coin_AptosCoin'($1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_chain_status_GenesisEndMarker'($1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_timestamp_CurrentTimeMicroseconds'($1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <simple_map::Element<address, string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_simple_map_Element'address_$1_string_String''($1_from_bcs_deserialize'$1_simple_map_Element'address_$1_string_String''(b1), $1_from_bcs_deserialize'$1_simple_map_Element'address_$1_string_String''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <simple_map::SimpleMap<address, address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_simple_map_SimpleMap'address_address''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_address''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_address''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <simple_map::SimpleMap<address, string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_simple_map_SimpleMap'address_$1_string_String''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_$1_string_String''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_$1_string_String''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_reconfiguration_Configuration'($1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::NIL>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''($1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(b1), $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <string_utils::Cons<string::String, string_utils::NIL>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''($1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(b1), $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <string_utils::NIL>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_utils_NIL'($1_from_bcs_deserialize'$1_string_utils_NIL'(b1), $1_from_bcs_deserialize'$1_string_utils_NIL'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ConstructorRef'($1_from_bcs_deserialize'$1_object_ConstructorRef'(b1), $1_from_bcs_deserialize'$1_object_ConstructorRef'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::Object<collection::Collection>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$4_collection_Collection''($1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(b1), $1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ObjectCore'($1_from_bcs_deserialize'$1_object_ObjectCore'(b1), $1_from_bcs_deserialize'$1_object_ObjectCore'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferEvent'($1_from_bcs_deserialize'$1_object_TransferEvent'(b1), $1_from_bcs_deserialize'$1_object_TransferEvent'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferRef'($1_from_bcs_deserialize'$1_object_TransferRef'(b1), $1_from_bcs_deserialize'$1_object_TransferRef'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <royalty::Royalty>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_royalty_Royalty'($1_from_bcs_deserialize'$4_royalty_Royalty'(b1), $1_from_bcs_deserialize'$4_royalty_Royalty'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <collection::Collection>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_Collection'($1_from_bcs_deserialize'$4_collection_Collection'(b1), $1_from_bcs_deserialize'$4_collection_Collection'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <collection::FixedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_FixedSupply'($1_from_bcs_deserialize'$4_collection_FixedSupply'(b1), $1_from_bcs_deserialize'$4_collection_FixedSupply'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <collection::MintEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_MintEvent'($1_from_bcs_deserialize'$4_collection_MintEvent'(b1), $1_from_bcs_deserialize'$4_collection_MintEvent'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <collection::UnlimitedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_UnlimitedSupply'($1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(b1), $1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <token::Token>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_token_Token'($1_from_bcs_deserialize'$4_token_Token'(b1), $1_from_bcs_deserialize'$4_token_Token'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <OGProfilesTest2::ClaimUsernameEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'($1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(b1), $1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <OGProfilesTest2::Profile>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'($1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'(b1), $1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <OGProfilesTest2::ProfileMintEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'($1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(b1), $1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <OGProfilesTest2::State>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'($1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'(b1), $1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:8:9+113
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_keccak256(b1), $1_aptos_hash_spec_keccak256(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:13:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha2_512_internal(b1), $1_aptos_hash_spec_sha2_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:18:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha3_512_internal(b1), $1_aptos_hash_spec_sha3_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:23:9+131
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_ripemd160_internal(b1), $1_aptos_hash_spec_ripemd160_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:28:9+135
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_blake2b_256_internal(b1), $1_aptos_hash_spec_blake2b_256_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:146:5+86
function {:inline} $1_vector_$is_empty'u64'(v: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'u64'(v), 0)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:146:5+86
function {:inline} $1_vector_$is_empty'address'(v: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'address'(v), 0)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$1_string_String'(v: Vec ($1_string_String)): bool {
    $IsEqual'u64'($1_vector_$length'$1_string_String'(v), 0)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): bool {
    $IsEqual'u64'($1_vector_$length'$1_aggregator_Aggregator'(v), 0)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): bool {
    $IsEqual'u64'($1_vector_$length'$1_optional_aggregator_Integer'(v), 0)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)): bool {
    $IsEqual'u64'($1_vector_$length'$4_royalty_Royalty'(v), 0)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply)): bool {
    $IsEqual'u64'($1_vector_$length'$4_collection_UnlimitedSupply'(v), 0)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+145
function {:inline} $1_option_$borrow'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): $1_aggregator_Aggregator {
    $1_vector_$borrow'$1_aggregator_Aggregator'(t->$vec, 0)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+145
function {:inline} $1_option_$borrow'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_Integer {
    $1_vector_$borrow'$1_optional_aggregator_Integer'(t->$vec, 0)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+95
function {:inline} $1_option_$is_none'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $1_vector_$is_empty'$1_aggregator_Aggregator'(t->$vec)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+95
function {:inline} $1_option_$is_none'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $1_vector_$is_empty'$1_optional_aggregator_Integer'(t->$vec)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+96
function {:inline} $1_option_$is_some'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): bool {
    !$1_vector_$is_empty'$1_aggregator_Aggregator'(t->$vec)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+96
function {:inline} $1_option_$is_some'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_Integer'(t->$vec)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'u64'(): $1_option_Option'u64' {
    $1_option_Option'u64'($EmptyVec'u64'())
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'address'(): $1_option_Option'address' {
    $1_option_Option'address'($EmptyVec'address'())
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'$1_string_String'(): $1_option_Option'$1_string_String' {
    $1_option_Option'$1_string_String'($EmptyVec'$1_string_String'())
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'$4_royalty_Royalty'(): $1_option_Option'$4_royalty_Royalty' {
    $1_option_Option'$4_royalty_Royalty'($EmptyVec'$4_royalty_Royalty'())
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'u64'(e: int): $1_option_Option'u64' {
    $1_option_Option'u64'(MakeVec1(e))
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'address'(e: int): $1_option_Option'address' {
    $1_option_Option'address'(MakeVec1(e))
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'$4_collection_UnlimitedSupply'(e: $4_collection_UnlimitedSupply): $1_option_Option'$4_collection_UnlimitedSupply' {
    $1_option_Option'$4_collection_UnlimitedSupply'(MakeVec1(e))
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+91
function {:inline} $1_option_spec_is_none'address'(t: $1_option_Option'address'): bool {
    $1_vector_$is_empty'address'(t->$vec)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+91
function {:inline} $1_option_spec_is_none'$1_string_String'(t: $1_option_Option'$1_string_String'): bool {
    $1_vector_$is_empty'$1_string_String'(t->$vec)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+91
function {:inline} $1_option_spec_is_none'$4_royalty_Royalty'(t: $1_option_Option'$4_royalty_Royalty'): bool {
    $1_vector_$is_empty'$4_royalty_Royalty'(t->$vec)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+91
function {:inline} $1_option_spec_is_none'$4_collection_UnlimitedSupply'(t: $1_option_Option'$4_collection_UnlimitedSupply'): bool {
    $1_vector_$is_empty'$4_collection_UnlimitedSupply'(t->$vec)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+92
function {:inline} $1_option_spec_is_some'u64'(t: $1_option_Option'u64'): bool {
    !$1_vector_$is_empty'u64'(t->$vec)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+92
function {:inline} $1_option_spec_is_some'$1_string_String'(t: $1_option_Option'$1_string_String'): bool {
    !$1_vector_$is_empty'$1_string_String'(t->$vec)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+92
function {:inline} $1_option_spec_is_some'$4_royalty_Royalty'(t: $1_option_Option'$4_royalty_Royalty'): bool {
    !$1_vector_$is_empty'$4_royalty_Royalty'(t->$vec)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+92
function {:inline} $1_option_spec_is_some'$4_collection_UnlimitedSupply'(t: $1_option_Option'$4_collection_UnlimitedSupply'): bool {
    !$1_vector_$is_empty'$4_collection_UnlimitedSupply'(t->$vec)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+78
function {:inline} $1_option_spec_borrow'u64'(t: $1_option_Option'u64'): int {
    ReadVec(t->$vec, 0)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+78
function {:inline} $1_option_spec_borrow'$1_string_String'(t: $1_option_Option'$1_string_String'): $1_string_String {
    ReadVec(t->$vec, 0)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+78
function {:inline} $1_option_spec_borrow'$4_royalty_Royalty'(t: $1_option_Option'$4_royalty_Royalty'): $4_royalty_Royalty {
    ReadVec(t->$vec, 0)
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+78
function {:inline} $1_option_spec_borrow'$4_collection_UnlimitedSupply'(t: $1_option_Option'$4_collection_UnlimitedSupply'): $4_collection_UnlimitedSupply {
    ReadVec(t->$vec, 0)
}

// struct option::Option<u64> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'u64' {
    $1_option_Option'u64'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'u64''_vec(s: $1_option_Option'u64', x: Vec (int)): $1_option_Option'u64' {
    $1_option_Option'u64'(x)
}
function $IsValid'$1_option_Option'u64''(s: $1_option_Option'u64'): bool {
    $IsValid'vec'u64''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'u64''(s1: $1_option_Option'u64', s2: $1_option_Option'u64'): bool {
    $IsEqual'vec'u64''(s1->$vec, s2->$vec)}

// struct option::Option<address> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'address' {
    $1_option_Option'address'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'address''_vec(s: $1_option_Option'address', x: Vec (int)): $1_option_Option'address' {
    $1_option_Option'address'(x)
}
function $IsValid'$1_option_Option'address''(s: $1_option_Option'address'): bool {
    $IsValid'vec'address''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'address''(s1: $1_option_Option'address', s2: $1_option_Option'address'): bool {
    $IsEqual'vec'address''(s1->$vec, s2->$vec)}

// struct option::Option<string::String> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_string_String' {
    $1_option_Option'$1_string_String'($vec: Vec ($1_string_String))
}
function {:inline} $Update'$1_option_Option'$1_string_String''_vec(s: $1_option_Option'$1_string_String', x: Vec ($1_string_String)): $1_option_Option'$1_string_String' {
    $1_option_Option'$1_string_String'(x)
}
function $IsValid'$1_option_Option'$1_string_String''(s: $1_option_Option'$1_string_String'): bool {
    $IsValid'vec'$1_string_String''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_string_String''(s1: $1_option_Option'$1_string_String', s2: $1_option_Option'$1_string_String'): bool {
    $IsEqual'vec'$1_string_String''(s1->$vec, s2->$vec)}

// struct option::Option<aggregator::Aggregator> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_aggregator_Aggregator' {
    $1_option_Option'$1_aggregator_Aggregator'($vec: Vec ($1_aggregator_Aggregator))
}
function {:inline} $Update'$1_option_Option'$1_aggregator_Aggregator''_vec(s: $1_option_Option'$1_aggregator_Aggregator', x: Vec ($1_aggregator_Aggregator)): $1_option_Option'$1_aggregator_Aggregator' {
    $1_option_Option'$1_aggregator_Aggregator'(x)
}
function $IsValid'$1_option_Option'$1_aggregator_Aggregator''(s: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsValid'vec'$1_aggregator_Aggregator''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_aggregator_Aggregator''(s1: $1_option_Option'$1_aggregator_Aggregator', s2: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsEqual'vec'$1_aggregator_Aggregator''(s1->$vec, s2->$vec)}

// struct option::Option<optional_aggregator::Integer> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_optional_aggregator_Integer' {
    $1_option_Option'$1_optional_aggregator_Integer'($vec: Vec ($1_optional_aggregator_Integer))
}
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec(s: $1_option_Option'$1_optional_aggregator_Integer', x: Vec ($1_optional_aggregator_Integer)): $1_option_Option'$1_optional_aggregator_Integer' {
    $1_option_Option'$1_optional_aggregator_Integer'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_Integer''(s: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsValid'vec'$1_optional_aggregator_Integer''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''(s1: $1_option_Option'$1_optional_aggregator_Integer', s2: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsEqual'vec'$1_optional_aggregator_Integer''(s1->$vec, s2->$vec)}

// struct option::Option<optional_aggregator::OptionalAggregator> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_optional_aggregator_OptionalAggregator' {
    $1_option_Option'$1_optional_aggregator_OptionalAggregator'($vec: Vec ($1_optional_aggregator_OptionalAggregator))
}
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator', x: Vec ($1_optional_aggregator_OptionalAggregator)): $1_option_Option'$1_optional_aggregator_OptionalAggregator' {
    $1_option_Option'$1_optional_aggregator_OptionalAggregator'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsValid'vec'$1_optional_aggregator_OptionalAggregator''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1: $1_option_Option'$1_optional_aggregator_OptionalAggregator', s2: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''(s1->$vec, s2->$vec)}

// struct option::Option<royalty::Royalty> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$4_royalty_Royalty' {
    $1_option_Option'$4_royalty_Royalty'($vec: Vec ($4_royalty_Royalty))
}
function {:inline} $Update'$1_option_Option'$4_royalty_Royalty''_vec(s: $1_option_Option'$4_royalty_Royalty', x: Vec ($4_royalty_Royalty)): $1_option_Option'$4_royalty_Royalty' {
    $1_option_Option'$4_royalty_Royalty'(x)
}
function $IsValid'$1_option_Option'$4_royalty_Royalty''(s: $1_option_Option'$4_royalty_Royalty'): bool {
    $IsValid'vec'$4_royalty_Royalty''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$4_royalty_Royalty''(s1: $1_option_Option'$4_royalty_Royalty', s2: $1_option_Option'$4_royalty_Royalty'): bool {
    $IsEqual'vec'$4_royalty_Royalty''(s1->$vec, s2->$vec)}

// struct option::Option<collection::UnlimitedSupply> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$4_collection_UnlimitedSupply' {
    $1_option_Option'$4_collection_UnlimitedSupply'($vec: Vec ($4_collection_UnlimitedSupply))
}
function {:inline} $Update'$1_option_Option'$4_collection_UnlimitedSupply''_vec(s: $1_option_Option'$4_collection_UnlimitedSupply', x: Vec ($4_collection_UnlimitedSupply)): $1_option_Option'$4_collection_UnlimitedSupply' {
    $1_option_Option'$4_collection_UnlimitedSupply'(x)
}
function $IsValid'$1_option_Option'$4_collection_UnlimitedSupply''(s: $1_option_Option'$4_collection_UnlimitedSupply'): bool {
    $IsValid'vec'$4_collection_UnlimitedSupply''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$4_collection_UnlimitedSupply''(s1: $1_option_Option'$4_collection_UnlimitedSupply', s2: $1_option_Option'$4_collection_UnlimitedSupply'): bool {
    $IsEqual'vec'$4_collection_UnlimitedSupply''(s1->$vec, s2->$vec)}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.spec.move:28:9+50
function  $1_string_spec_internal_check_utf8(v: Vec (int)): bool;
axiom (forall v: Vec (int) ::
(var $$res := $1_string_spec_internal_check_utf8(v);
$IsValid'bool'($$res)));

// struct string::String at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:13:5+70
datatype $1_string_String {
    $1_string_String($bytes: Vec (int))
}
function {:inline} $Update'$1_string_String'_bytes(s: $1_string_String, x: Vec (int)): $1_string_String {
    $1_string_String(x)
}
function $IsValid'$1_string_String'(s: $1_string_String): bool {
    $IsValid'vec'u8''(s->$bytes)
}
function {:inline} $IsEqual'$1_string_String'(s1: $1_string_String, s2: $1_string_String): bool {
    $IsEqual'vec'u8''(s1->$bytes, s2->$bytes)}

// fun string::append [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:48:5+98
procedure {:inline 1} $1_string_append(_$t0: $Mutation ($1_string_String), _$t1: $1_string_String) returns ($ret0: $Mutation ($1_string_String))
{
    // declare local variables
    var $t2: $Mutation (Vec (int));
    var $t3: Vec (int);
    var $t4: int;
    var $t0: $Mutation ($1_string_String);
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[s]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:48:5+1
    assume {:print "$at(14,1402,1403)"} true;
    $temp_0'$1_string_String' := $Dereference($t0);
    assume {:print "$track_local(2,0,0):", $temp_0'$1_string_String'} $temp_0'$1_string_String' == $temp_0'$1_string_String';

    // trace_local[r]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:48:5+1
    assume {:print "$track_local(2,0,1):", $t1} $t1 == $t1;

    // $t2 := borrow_field<string::String>.bytes($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:49:24+12
    assume {:print "$at(14,1472,1484)"} true;
    $t2 := $ChildMutation($t0, 0, $Dereference($t0)->$bytes);

    // $t3 := get_field<string::String>.bytes($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:49:38+7
    $t3 := $t1->$bytes;

    // vector::append<u8>($t2, $t3) on_abort goto L2 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:49:9+37
    call $t2 := $1_vector_append'u8'($t2, $t3);
    if ($abort_flag) {
        assume {:print "$at(14,1457,1494)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(2,0):", $t4} $t4 == $t4;
        goto L2;
    }

    // write_back[Reference($t0).bytes (vector<u8>)]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:49:9+37
    $t0 := $UpdateMutation($t0, $Update'$1_string_String'_bytes($Dereference($t0), $Dereference($t2)));

    // trace_local[s]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:49:9+37
    $temp_0'$1_string_String' := $Dereference($t0);
    assume {:print "$track_local(2,0,0):", $temp_0'$1_string_String'} $temp_0'$1_string_String' == $temp_0'$1_string_String';

    // trace_local[s]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:49:9+37
    $temp_0'$1_string_String' := $Dereference($t0);
    assume {:print "$track_local(2,0,0):", $temp_0'$1_string_String'} $temp_0'$1_string_String' == $temp_0'$1_string_String';

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:50:5+1
    assume {:print "$at(14,1499,1500)"} true;
L1:

    // return () at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:50:5+1
    assume {:print "$at(14,1499,1500)"} true;
    $ret0 := $t0;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:50:5+1
L2:

    // abort($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:50:5+1
    assume {:print "$at(14,1499,1500)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun string::length [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:43:5+75
procedure {:inline 1} $1_string_length(_$t0: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: int;
    var $t3: int;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:43:5+1
    assume {:print "$at(14,1295,1296)"} true;
    assume {:print "$track_local(2,10,0):", $t0} $t0 == $t0;

    // $t1 := get_field<string::String>.bytes($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:24+8
    assume {:print "$at(14,1355,1363)"} true;
    $t1 := $t0->$bytes;

    // $t2 := vector::length<u8>($t1) on_abort goto L2 with $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:9+24
    call $t2 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(14,1340,1364)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(2,10):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:9+24
    assume {:print "$track_return(2,10,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:45:5+1
    assume {:print "$at(14,1369,1370)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:45:5+1
    assume {:print "$at(14,1369,1370)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:45:5+1
L2:

    // abort($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:45:5+1
    assume {:print "$at(14,1369,1370)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun string::bytes [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:33:5+66
procedure {:inline 1} $1_string_bytes(_$t0: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: Vec (int);
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:33:5+1
    assume {:print "$at(14,1039,1040)"} true;
    assume {:print "$track_local(2,2,0):", $t0} $t0 == $t0;

    // $t1 := get_field<string::String>.bytes($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:34:9+8
    assume {:print "$at(14,1091,1099)"} true;
    $t1 := $t0->$bytes;

    // trace_return[0]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:34:9+8
    assume {:print "$track_return(2,2,0):", $t1} $t1 == $t1;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:35:5+1
    assume {:print "$at(14,1104,1105)"} true;
L1:

    // return $t1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:35:5+1
    assume {:print "$at(14,1104,1105)"} true;
    $ret0 := $t1;
    return;

}

// fun string::utf8 [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:5+133
procedure {:inline 1} $1_string_utf8(_$t0: Vec (int)) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: $1_string_String;
    var $t0: Vec (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[bytes]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:5+1
    assume {:print "$at(14,573,574)"} true;
    assume {:print "$track_local(2,13,0):", $t0} $t0 == $t0;

    // $t1 := opaque begin: string::internal_check_utf8($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27
    assume {:print "$at(14,634,661)"} true;

    // assume WellFormed($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, string::spec_internal_check_utf8($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27
    assume $IsEqual'bool'($t1, $1_string_spec_internal_check_utf8($t0));

    // $t1 := opaque end: string::internal_check_utf8($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27

    // if ($t1) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
L1:

    // goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    assume {:print "$at(14,626,677)"} true;
    goto L2;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:46+13
L0:

    // $t2 := 1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:46+13
    assume {:print "$at(14,663,676)"} true;
    $t2 := 1;
    assume $IsValid'u64'($t2);

    // trace_abort($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    assume {:print "$at(14,626,677)"} true;
    assume {:print "$track_abort(2,13):", $t2} $t2 == $t2;

    // goto L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    goto L4;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:16+5
    assume {:print "$at(14,694,699)"} true;
L2:

    // $t3 := pack string::String($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:9+13
    assume {:print "$at(14,687,700)"} true;
    $t3 := $1_string_String($t0);

    // trace_return[0]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:9+13
    assume {:print "$track_return(2,13,0):", $t3} $t3 == $t3;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
    assume {:print "$at(14,705,706)"} true;
L3:

    // return $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
    assume {:print "$at(14,705,706)"} true;
    $ret0 := $t3;
    return;

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
L4:

    // abort($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
    assume {:print "$at(14,705,706)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+77
function {:inline} $1_signer_$address_of(s: $signer): int {
    $1_signer_$borrow_address(s)
}

// fun signer::address_of [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+77
procedure {:inline 1} $1_signer_address_of(_$t0: $signer) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+1
    assume {:print "$at(13,396,397)"} true;
    assume {:print "$track_local(3,0,0):", $t0} $t0 == $t0;

    // $t1 := signer::borrow_address($t0) on_abort goto L2 with $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:13:10+17
    assume {:print "$at(13,450,467)"} true;
    call $t1 := $1_signer_borrow_address($t0);
    if ($abort_flag) {
        assume {:print "$at(13,450,467)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(3,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:13:9+18
    assume {:print "$track_return(3,0,0):", $t1} $t1 == $t1;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(13,472,473)"} true;
L1:

    // return $t1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(13,472,473)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
L2:

    // abort($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(13,472,473)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun error::already_exists [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+71
procedure {:inline 1} $1_error_already_exists(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+1
    assume {:print "$at(9,3585,3586)"} true;
    assume {:print "$track_local(4,1,0):", $t0} $t0 == $t0;

    // $t1 := 8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:54+14
    $t1 := 8;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$at(9,3626,3654)"} true;

    // assume WellFormed($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28

    // trace_return[0]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$track_return(4,1,0):", $t3} $t3 == $t3;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
L1:

    // return $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
    assume {:print "$at(9,3655,3656)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_argument [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+76
procedure {:inline 1} $1_error_invalid_argument(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+1
    assume {:print "$at(9,3082,3083)"} true;
    assume {:print "$track_local(4,4,0):", $t0} $t0 == $t0;

    // $t1 := 1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:57+16
    $t1 := 1;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$at(9,3126,3156)"} true;

    // assume WellFormed($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30

    // trace_return[0]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$track_return(4,4,0):", $t3} $t3 == $t3;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
L1:

    // return $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
    assume {:print "$at(9,3157,3158)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_state [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+70
procedure {:inline 1} $1_error_invalid_state(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+1
    assume {:print "$at(9,3232,3233)"} true;
    assume {:print "$track_local(4,5,0):", $t0} $t0 == $t0;

    // $t1 := 3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:54+13
    $t1 := 3;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$at(9,3273,3300)"} true;

    // assume WellFormed($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27

    // trace_return[0]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$track_return(4,5,0):", $t3} $t3 == $t3;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
L1:

    // return $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
    assume {:print "$at(9,3301,3302)"} true;
    $ret0 := $t3;
    return;

}

// fun error::not_found [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+61
procedure {:inline 1} $1_error_not_found(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+1
    assume {:print "$at(9,3461,3462)"} true;
    assume {:print "$track_local(4,6,0):", $t0} $t0 == $t0;

    // $t1 := 6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:49+9
    $t1 := 6;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$at(9,3497,3520)"} true;

    // assume WellFormed($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23

    // trace_return[0]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$track_return(4,6,0):", $t3} $t3 == $t3;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
L1:

    // return $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
    assume {:print "$at(9,3521,3522)"} true;
    $ret0 := $t3;
    return;

}

// fun error::out_of_range [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+68
procedure {:inline 1} $1_error_out_of_range(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+1
    assume {:print "$at(9,3161,3162)"} true;
    assume {:print "$track_local(4,8,0):", $t0} $t0 == $t0;

    // $t1 := 2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:53+12
    $t1 := 2;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$at(9,3201,3227)"} true;

    // assume WellFormed($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26

    // trace_return[0]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$track_return(4,8,0):", $t3} $t3 == $t3;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
L1:

    // return $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
    assume {:print "$at(9,3228,3229)"} true;
    $ret0 := $t3;
    return;

}

// fun error::permission_denied [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+77
procedure {:inline 1} $1_error_permission_denied(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+1
    assume {:print "$at(9,3381,3382)"} true;
    assume {:print "$track_local(4,9,0):", $t0} $t0 == $t0;

    // $t1 := 5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:57+17
    $t1 := 5;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$at(9,3425,3456)"} true;

    // assume WellFormed($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31

    // trace_return[0]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$track_return(4,9,0):", $t3} $t3 == $t3;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
L1:

    // return $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
    assume {:print "$at(9,3457,3458)"} true;
    $ret0 := $t3;
    return;

}

// struct type_info::TypeInfo at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:17:5+145
datatype $1_type_info_TypeInfo {
    $1_type_info_TypeInfo($account_address: int, $module_name: Vec (int), $struct_name: Vec (int))
}
function {:inline} $Update'$1_type_info_TypeInfo'_account_address(s: $1_type_info_TypeInfo, x: int): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(x, s->$module_name, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_module_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, x, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_struct_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, s->$module_name, x)
}
function $IsValid'$1_type_info_TypeInfo'(s: $1_type_info_TypeInfo): bool {
    $IsValid'address'(s->$account_address)
      && $IsValid'vec'u8''(s->$module_name)
      && $IsValid'vec'u8''(s->$struct_name)
}
function {:inline} $IsEqual'$1_type_info_TypeInfo'(s1: $1_type_info_TypeInfo, s2: $1_type_info_TypeInfo): bool {
    $IsEqual'address'(s1->$account_address, s2->$account_address)
    && $IsEqual'vec'u8''(s1->$module_name, s2->$module_name)
    && $IsEqual'vec'u8''(s1->$struct_name, s2->$struct_name)}

// struct guid::GUID at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:7:5+50
datatype $1_guid_GUID {
    $1_guid_GUID($id: $1_guid_ID)
}
function {:inline} $Update'$1_guid_GUID'_id(s: $1_guid_GUID, x: $1_guid_ID): $1_guid_GUID {
    $1_guid_GUID(x)
}
function $IsValid'$1_guid_GUID'(s: $1_guid_GUID): bool {
    $IsValid'$1_guid_ID'(s->$id)
}
function {:inline} $IsEqual'$1_guid_GUID'(s1: $1_guid_GUID, s2: $1_guid_GUID): bool {
    s1 == s2
}

// struct guid::ID at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:12:5+209
datatype $1_guid_ID {
    $1_guid_ID($creation_num: int, $addr: int)
}
function {:inline} $Update'$1_guid_ID'_creation_num(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(x, s->$addr)
}
function {:inline} $Update'$1_guid_ID'_addr(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(s->$creation_num, x)
}
function $IsValid'$1_guid_ID'(s: $1_guid_ID): bool {
    $IsValid'u64'(s->$creation_num)
      && $IsValid'address'(s->$addr)
}
function {:inline} $IsEqual'$1_guid_ID'(s1: $1_guid_ID, s2: $1_guid_ID): bool {
    s1 == s2
}

// fun guid::create [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:23:5+286
procedure {:inline 1} $1_guid_create(_$t0: int, _$t1: $Mutation (int)) returns ($ret0: $1_guid_GUID, $ret1: $Mutation (int))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_guid_ID;
    var $t8: $1_guid_GUID;
    var $t0: int;
    var $t1: $Mutation (int);
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:23:5+1
    assume {:print "$at(127,836,837)"} true;
    assume {:print "$track_local(13,0,0):", $t0} $t0 == $t0;

    // trace_local[creation_num_ref]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:23:5+1
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t3 := read_ref($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:24:28+17
    assume {:print "$at(127,940,957)"} true;
    $t3 := $Dereference($t1);

    // trace_local[creation_num]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:24:13+12
    assume {:print "$track_local(13,0,2):", $t3} $t3 == $t3;

    // $t4 := 1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:25:44+1
    assume {:print "$at(127,1002,1003)"} true;
    $t4 := 1;
    assume $IsValid'u64'($t4);

    // $t5 := +($t3, $t4) on_abort goto L2 with $t6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:25:42+1
    call $t5 := $AddU64($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(127,1000,1001)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(13,0):", $t6} $t6 == $t6;
        goto L2;
    }

    // write_ref($t1, $t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:25:9+36
    $t1 := $UpdateMutation($t1, $t5);

    // $t7 := pack guid::ID($t3, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:27:17+70
    assume {:print "$at(127,1036,1106)"} true;
    $t7 := $1_guid_ID($t3, $t0);

    // $t8 := pack guid::GUID($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    assume {:print "$at(127,1013,1116)"} true;
    $t8 := $1_guid_GUID($t7);

    // trace_return[0]($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    assume {:print "$track_return(13,0,0):", $t8} $t8 == $t8;

    // trace_local[creation_num_ref]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(127,1121,1122)"} true;
L1:

    // return $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(127,1121,1122)"} true;
    $ret0 := $t8;
    $ret1 := $t1;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
L2:

    // abort($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(127,1121,1122)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u8'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u8'(bytes);
$IsValid'u8'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u64'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u64'(bytes);
$IsValid'u64'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u128'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u128'(bytes);
$IsValid'u128'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u256'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u256'(bytes);
$IsValid'u256'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'address'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'address'(bytes);
$IsValid'address'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'signer'(bytes: Vec (int)): $signer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'signer'(bytes);
$IsValid'signer'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u8''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u8''(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u64''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u64''(bytes);
$IsValid'vec'u64''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'address''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'address''(bytes);
$IsValid'vec'address''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_string_String''(bytes: Vec (int)): Vec ($1_string_String);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_string_String''(bytes);
$IsValid'vec'$1_string_String''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): Vec ($1_aggregator_Aggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'vec'$1_aggregator_Aggregator''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): Vec ($1_optional_aggregator_Integer);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'vec'$1_optional_aggregator_Integer''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): Vec ($1_optional_aggregator_OptionalAggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'vec'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_simple_map_Element'address_$1_string_String'''(bytes: Vec (int)): Vec ($1_simple_map_Element'address_$1_string_String');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_simple_map_Element'address_$1_string_String'''(bytes);
$IsValid'vec'$1_simple_map_Element'address_$1_string_String'''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$4_royalty_Royalty''(bytes: Vec (int)): Vec ($4_royalty_Royalty);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$4_royalty_Royalty''(bytes);
$IsValid'vec'$4_royalty_Royalty''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$4_collection_UnlimitedSupply''(bytes: Vec (int)): Vec ($4_collection_UnlimitedSupply);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$4_collection_UnlimitedSupply''(bytes);
$IsValid'vec'$4_collection_UnlimitedSupply''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'#0''(bytes: Vec (int)): Vec (#0);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'#0''(bytes);
$IsValid'vec'#0''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'u64''(bytes: Vec (int)): $1_option_Option'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'u64''(bytes);
$IsValid'$1_option_Option'u64''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'address''(bytes: Vec (int)): $1_option_Option'address';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'address''(bytes);
$IsValid'$1_option_Option'address''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_string_String''(bytes: Vec (int)): $1_option_Option'$1_string_String';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_string_String''(bytes);
$IsValid'$1_option_Option'$1_string_String''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): $1_option_Option'$1_aggregator_Aggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'$1_option_Option'$1_aggregator_Aggregator''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_Integer';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_Integer''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_OptionalAggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(bytes: Vec (int)): $1_option_Option'$4_royalty_Royalty';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(bytes);
$IsValid'$1_option_Option'$4_royalty_Royalty''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$4_collection_UnlimitedSupply''(bytes: Vec (int)): $1_option_Option'$4_collection_UnlimitedSupply';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$4_collection_UnlimitedSupply''(bytes);
$IsValid'$1_option_Option'$4_collection_UnlimitedSupply''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_String'(bytes: Vec (int)): $1_string_String;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_String'(bytes);
$IsValid'$1_string_String'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes: Vec (int)): $1_type_info_TypeInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes);
$IsValid'$1_type_info_TypeInfo'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_GUID'(bytes: Vec (int)): $1_guid_GUID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_GUID'(bytes);
$IsValid'$1_guid_GUID'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_ID'(bytes: Vec (int)): $1_guid_ID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_ID'(bytes);
$IsValid'$1_guid_ID'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_CoinRegisterEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_KeyRotationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_DepositEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_DepositEvent''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_WithdrawEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_object_TransferEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_object_TransferEvent''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_collection_BurnEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_collection_BurnEvent''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_collection_MintEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_collection_MintEvent''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_collection_MutationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_collection_MutationEvent''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_token_MutationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_token_MutationEvent''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''(bytes: Vec (int)): $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''(bytes);
$IsValid'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''(bytes: Vec (int)): $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''(bytes);
$IsValid'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_Account'(bytes: Vec (int)): $1_account_Account;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_Account'(bytes);
$IsValid'$1_account_Account'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_RotationCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_SignerCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(bytes: Vec (int)): $1_account_CoinRegisterEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(bytes);
$IsValid'$1_account_CoinRegisterEvent'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes: Vec (int)): $1_account_SignerCapability;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes);
$IsValid'$1_account_SignerCapability'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes: Vec (int)): $1_aggregator_Aggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes);
$IsValid'$1_aggregator_Aggregator'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes: Vec (int)): $1_optional_aggregator_Integer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes);
$IsValid'$1_optional_aggregator_Integer'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): $1_optional_aggregator_OptionalAggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'$1_optional_aggregator_OptionalAggregator'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Coin'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes: Vec (int)): $1_aptos_coin_AptosCoin;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes);
$IsValid'$1_aptos_coin_AptosCoin'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): $1_chain_status_GenesisEndMarker;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'$1_chain_status_GenesisEndMarker'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): $1_timestamp_CurrentTimeMicroseconds;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'$1_timestamp_CurrentTimeMicroseconds'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_simple_map_Element'address_$1_string_String''(bytes: Vec (int)): $1_simple_map_Element'address_$1_string_String';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_simple_map_Element'address_$1_string_String''(bytes);
$IsValid'$1_simple_map_Element'address_$1_string_String''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_address''(bytes: Vec (int)): Table int (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_address''(bytes);
$IsValid'$1_simple_map_SimpleMap'address_address''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_$1_string_String''(bytes: Vec (int)): Table int ($1_string_String);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_$1_string_String''(bytes);
$IsValid'$1_simple_map_SimpleMap'address_$1_string_String''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes: Vec (int)): $1_reconfiguration_Configuration;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes);
$IsValid'$1_reconfiguration_Configuration'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(bytes: Vec (int)): $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(bytes);
$IsValid'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(bytes: Vec (int)): $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(bytes);
$IsValid'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_utils_NIL'(bytes: Vec (int)): $1_string_utils_NIL;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_utils_NIL'(bytes);
$IsValid'$1_string_utils_NIL'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes: Vec (int)): $1_object_ConstructorRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes);
$IsValid'$1_object_ConstructorRef'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(bytes: Vec (int)): $1_object_Object'$4_collection_Collection';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(bytes);
$IsValid'$1_object_Object'$4_collection_Collection''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes: Vec (int)): $1_object_ObjectCore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes);
$IsValid'$1_object_ObjectCore'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes: Vec (int)): $1_object_TransferEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes);
$IsValid'$1_object_TransferEvent'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferRef'(bytes: Vec (int)): $1_object_TransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferRef'(bytes);
$IsValid'$1_object_TransferRef'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_royalty_Royalty'(bytes: Vec (int)): $4_royalty_Royalty;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_royalty_Royalty'(bytes);
$IsValid'$4_royalty_Royalty'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_Collection'(bytes: Vec (int)): $4_collection_Collection;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_Collection'(bytes);
$IsValid'$4_collection_Collection'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_FixedSupply'(bytes: Vec (int)): $4_collection_FixedSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_FixedSupply'(bytes);
$IsValid'$4_collection_FixedSupply'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_MintEvent'(bytes: Vec (int)): $4_collection_MintEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_MintEvent'(bytes);
$IsValid'$4_collection_MintEvent'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(bytes: Vec (int)): $4_collection_UnlimitedSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(bytes);
$IsValid'$4_collection_UnlimitedSupply'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_token_Token'(bytes: Vec (int)): $4_token_Token;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_token_Token'(bytes);
$IsValid'$4_token_Token'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(bytes: Vec (int)): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(bytes);
$IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'(bytes: Vec (int)): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'(bytes);
$IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(bytes: Vec (int)): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(bytes);
$IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'(bytes: Vec (int)): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'(bytes);
$IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'#0'(bytes: Vec (int)): #0;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'#0'(bytes);
$IsValid'#0'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u8'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u8'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u64'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u64'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u128'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u128'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u256'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u256'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'address'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'address'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'signer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'signer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u8''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u8''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_string_String''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_string_String''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_simple_map_Element'address_$1_string_String'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_simple_map_Element'address_$1_string_String'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$4_royalty_Royalty''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$4_royalty_Royalty''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$4_collection_UnlimitedSupply''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$4_collection_UnlimitedSupply''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_string_String''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_string_String''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$4_collection_UnlimitedSupply''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$4_collection_UnlimitedSupply''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_String'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_String'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_GUID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_GUID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_ID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_ID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_Account'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_Account'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_simple_map_Element'address_$1_string_String''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_simple_map_Element'address_$1_string_String''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_$1_string_String''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_$1_string_String''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_utils_NIL'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_utils_NIL'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_royalty_Royalty'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_royalty_Royalty'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_Collection'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_Collection'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_FixedSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_FixedSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_MintEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_MintEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_token_Token'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_token_Token'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'#0'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'#0'(bytes);
$IsValid'bool'($$res)));

// struct event::EventHandle<account::CoinRegisterEvent> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:39:5+224
datatype $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_counter(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: int): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_guid(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1: $1_event_EventHandle'$1_account_CoinRegisterEvent', s2: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<account::KeyRotationEvent> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:39:5+224
datatype $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_counter(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: int): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_guid(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1: $1_event_EventHandle'$1_account_KeyRotationEvent', s2: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<coin::DepositEvent> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:39:5+224
datatype $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_counter(s: $1_event_EventHandle'$1_coin_DepositEvent', x: int): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_guid(s: $1_event_EventHandle'$1_coin_DepositEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''(s1: $1_event_EventHandle'$1_coin_DepositEvent', s2: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<coin::WithdrawEvent> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:39:5+224
datatype $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_counter(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: int): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_guid(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''(s1: $1_event_EventHandle'$1_coin_WithdrawEvent', s2: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<reconfiguration::NewEpochEvent> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:39:5+224
datatype $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_counter(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: int): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_guid(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s1: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', s2: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<object::TransferEvent> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:39:5+224
datatype $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_counter(s: $1_event_EventHandle'$1_object_TransferEvent', x: int): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_guid(s: $1_event_EventHandle'$1_object_TransferEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''(s1: $1_event_EventHandle'$1_object_TransferEvent', s2: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<collection::BurnEvent> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:39:5+224
datatype $1_event_EventHandle'$4_collection_BurnEvent' {
    $1_event_EventHandle'$4_collection_BurnEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_BurnEvent''_counter(s: $1_event_EventHandle'$4_collection_BurnEvent', x: int): $1_event_EventHandle'$4_collection_BurnEvent' {
    $1_event_EventHandle'$4_collection_BurnEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_BurnEvent''_guid(s: $1_event_EventHandle'$4_collection_BurnEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_collection_BurnEvent' {
    $1_event_EventHandle'$4_collection_BurnEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_collection_BurnEvent''(s: $1_event_EventHandle'$4_collection_BurnEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_collection_BurnEvent''(s1: $1_event_EventHandle'$4_collection_BurnEvent', s2: $1_event_EventHandle'$4_collection_BurnEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<collection::MintEvent> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:39:5+224
datatype $1_event_EventHandle'$4_collection_MintEvent' {
    $1_event_EventHandle'$4_collection_MintEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MintEvent''_counter(s: $1_event_EventHandle'$4_collection_MintEvent', x: int): $1_event_EventHandle'$4_collection_MintEvent' {
    $1_event_EventHandle'$4_collection_MintEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MintEvent''_guid(s: $1_event_EventHandle'$4_collection_MintEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_collection_MintEvent' {
    $1_event_EventHandle'$4_collection_MintEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_collection_MintEvent''(s: $1_event_EventHandle'$4_collection_MintEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_collection_MintEvent''(s1: $1_event_EventHandle'$4_collection_MintEvent', s2: $1_event_EventHandle'$4_collection_MintEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<collection::MutationEvent> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:39:5+224
datatype $1_event_EventHandle'$4_collection_MutationEvent' {
    $1_event_EventHandle'$4_collection_MutationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MutationEvent''_counter(s: $1_event_EventHandle'$4_collection_MutationEvent', x: int): $1_event_EventHandle'$4_collection_MutationEvent' {
    $1_event_EventHandle'$4_collection_MutationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MutationEvent''_guid(s: $1_event_EventHandle'$4_collection_MutationEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_collection_MutationEvent' {
    $1_event_EventHandle'$4_collection_MutationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_collection_MutationEvent''(s: $1_event_EventHandle'$4_collection_MutationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_collection_MutationEvent''(s1: $1_event_EventHandle'$4_collection_MutationEvent', s2: $1_event_EventHandle'$4_collection_MutationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<token::MutationEvent> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:39:5+224
datatype $1_event_EventHandle'$4_token_MutationEvent' {
    $1_event_EventHandle'$4_token_MutationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_token_MutationEvent''_counter(s: $1_event_EventHandle'$4_token_MutationEvent', x: int): $1_event_EventHandle'$4_token_MutationEvent' {
    $1_event_EventHandle'$4_token_MutationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_token_MutationEvent''_guid(s: $1_event_EventHandle'$4_token_MutationEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_token_MutationEvent' {
    $1_event_EventHandle'$4_token_MutationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_token_MutationEvent''(s: $1_event_EventHandle'$4_token_MutationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_token_MutationEvent''(s1: $1_event_EventHandle'$4_token_MutationEvent', s2: $1_event_EventHandle'$4_token_MutationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<OGProfilesTest2::ClaimUsernameEvent> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:39:5+224
datatype $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent' {
    $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''_counter(s: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent', x: int): $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent' {
    $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''_guid(s: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent', x: $1_guid_GUID): $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent' {
    $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''(s: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''(s1: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent', s2: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<OGProfilesTest2::ProfileMintEvent> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:39:5+224
datatype $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent' {
    $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''_counter(s: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent', x: int): $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent' {
    $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''_guid(s: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent', x: $1_guid_GUID): $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent' {
    $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''(s: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''(s1: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent', s2: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'): bool {
    s1 == s2
}

// fun event::new_event_handle<account::CoinRegisterEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_account_CoinRegisterEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_account_CoinRegisterEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_account_CoinRegisterEvent'': $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(119,1803,1804)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:50:22+1
    assume {:print "$at(119,1932,1933)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$at(119,1894,1962)"} true;
    $t2 := $1_event_EventHandle'$1_account_CoinRegisterEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<account::KeyRotationEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_account_KeyRotationEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_account_KeyRotationEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_account_KeyRotationEvent'': $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(119,1803,1804)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:50:22+1
    assume {:print "$at(119,1932,1933)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$at(119,1894,1962)"} true;
    $t2 := $1_event_EventHandle'$1_account_KeyRotationEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<coin::DepositEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_coin_DepositEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_coin_DepositEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_coin_DepositEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_coin_DepositEvent'': $1_event_EventHandle'$1_coin_DepositEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(119,1803,1804)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:50:22+1
    assume {:print "$at(119,1932,1933)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$at(119,1894,1962)"} true;
    $t2 := $1_event_EventHandle'$1_coin_DepositEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<coin::WithdrawEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_coin_WithdrawEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_coin_WithdrawEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_coin_WithdrawEvent'': $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(119,1803,1804)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:50:22+1
    assume {:print "$at(119,1932,1933)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$at(119,1894,1962)"} true;
    $t2 := $1_event_EventHandle'$1_coin_WithdrawEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<object::TransferEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_object_TransferEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_object_TransferEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_object_TransferEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_object_TransferEvent'': $1_event_EventHandle'$1_object_TransferEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(119,1803,1804)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:50:22+1
    assume {:print "$at(119,1932,1933)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$at(119,1894,1962)"} true;
    $t2 := $1_event_EventHandle'$1_object_TransferEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<collection::BurnEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_collection_BurnEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_collection_BurnEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_collection_BurnEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_collection_BurnEvent'': $1_event_EventHandle'$4_collection_BurnEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(119,1803,1804)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:50:22+1
    assume {:print "$at(119,1932,1933)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$at(119,1894,1962)"} true;
    $t2 := $1_event_EventHandle'$4_collection_BurnEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<collection::MintEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_collection_MintEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_collection_MintEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_collection_MintEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_collection_MintEvent'': $1_event_EventHandle'$4_collection_MintEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(119,1803,1804)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:50:22+1
    assume {:print "$at(119,1932,1933)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$at(119,1894,1962)"} true;
    $t2 := $1_event_EventHandle'$4_collection_MintEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<collection::MutationEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_collection_MutationEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_collection_MutationEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_collection_MutationEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_collection_MutationEvent'': $1_event_EventHandle'$4_collection_MutationEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(119,1803,1804)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:50:22+1
    assume {:print "$at(119,1932,1933)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$at(119,1894,1962)"} true;
    $t2 := $1_event_EventHandle'$4_collection_MutationEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<token::MutationEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_token_MutationEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_token_MutationEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_token_MutationEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_token_MutationEvent'': $1_event_EventHandle'$4_token_MutationEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(119,1803,1804)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:50:22+1
    assume {:print "$at(119,1932,1933)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$at(119,1894,1962)"} true;
    $t2 := $1_event_EventHandle'$4_token_MutationEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<OGProfilesTest2::ClaimUsernameEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+165
procedure {:inline 1} $1_event_new_event_handle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'': $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(119,1803,1804)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:50:22+1
    assume {:print "$at(119,1932,1933)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$at(119,1894,1962)"} true;
    $t2 := $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<OGProfilesTest2::ProfileMintEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+165
procedure {:inline 1} $1_event_new_event_handle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'': $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(119,1803,1804)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:50:22+1
    assume {:print "$at(119,1932,1933)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$at(119,1894,1962)"} true;
    $t2 := $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:49:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:53:5+1
    assume {:print "$at(119,1967,1968)"} true;
    $ret0 := $t2;
    return;

}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:427:10+77
function  $1_account_spec_create_resource_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_account_spec_create_resource_address(source, seed);
$IsValid'address'($$res)));

// struct account::Account at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:27:5+401
datatype $1_account_Account {
    $1_account_Account($authentication_key: Vec (int), $sequence_number: int, $guid_creation_num: int, $coin_register_events: $1_event_EventHandle'$1_account_CoinRegisterEvent', $key_rotation_events: $1_event_EventHandle'$1_account_KeyRotationEvent', $rotation_capability_offer: $1_account_CapabilityOffer'$1_account_RotationCapability', $signer_capability_offer: $1_account_CapabilityOffer'$1_account_SignerCapability')
}
function {:inline} $Update'$1_account_Account'_authentication_key(s: $1_account_Account, x: Vec (int)): $1_account_Account {
    $1_account_Account(x, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_sequence_number(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, x, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_guid_creation_num(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, x, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_coin_register_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_CoinRegisterEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, x, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_key_rotation_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_KeyRotationEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, x, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_rotation_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_RotationCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, x, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_signer_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_SignerCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, x)
}
function $IsValid'$1_account_Account'(s: $1_account_Account): bool {
    $IsValid'vec'u8''(s->$authentication_key)
      && $IsValid'u64'(s->$sequence_number)
      && $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s->$coin_register_events)
      && $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s->$key_rotation_events)
      && $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s->$rotation_capability_offer)
      && $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s->$signer_capability_offer)
}
function {:inline} $IsEqual'$1_account_Account'(s1: $1_account_Account, s2: $1_account_Account): bool {
    $IsEqual'vec'u8''(s1->$authentication_key, s2->$authentication_key)
    && $IsEqual'u64'(s1->$sequence_number, s2->$sequence_number)
    && $IsEqual'u64'(s1->$guid_creation_num, s2->$guid_creation_num)
    && $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1->$coin_register_events, s2->$coin_register_events)
    && $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1->$key_rotation_events, s2->$key_rotation_events)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1->$rotation_capability_offer, s2->$rotation_capability_offer)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1->$signer_capability_offer, s2->$signer_capability_offer)}
var $1_account_Account_$memory: $Memory $1_account_Account;

// struct account::CapabilityOffer<account::RotationCapability> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:46:5+68
datatype $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_RotationCapability''_for(s: $1_account_CapabilityOffer'$1_account_RotationCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1: $1_account_CapabilityOffer'$1_account_RotationCapability', s2: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CapabilityOffer<account::SignerCapability> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:46:5+68
datatype $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for(s: $1_account_CapabilityOffer'$1_account_SignerCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1: $1_account_CapabilityOffer'$1_account_SignerCapability', s2: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CoinRegisterEvent at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:42:5+77
datatype $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent($type_info: $1_type_info_TypeInfo)
}
function {:inline} $Update'$1_account_CoinRegisterEvent'_type_info(s: $1_account_CoinRegisterEvent, x: $1_type_info_TypeInfo): $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent(x)
}
function $IsValid'$1_account_CoinRegisterEvent'(s: $1_account_CoinRegisterEvent): bool {
    $IsValid'$1_type_info_TypeInfo'(s->$type_info)
}
function {:inline} $IsEqual'$1_account_CoinRegisterEvent'(s1: $1_account_CoinRegisterEvent, s2: $1_account_CoinRegisterEvent): bool {
    $IsEqual'$1_type_info_TypeInfo'(s1->$type_info, s2->$type_info)}

// struct account::KeyRotationEvent at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:37:5+135
datatype $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent($old_authentication_key: Vec (int), $new_authentication_key: Vec (int))
}
function {:inline} $Update'$1_account_KeyRotationEvent'_old_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(x, s->$new_authentication_key)
}
function {:inline} $Update'$1_account_KeyRotationEvent'_new_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(s->$old_authentication_key, x)
}
function $IsValid'$1_account_KeyRotationEvent'(s: $1_account_KeyRotationEvent): bool {
    $IsValid'vec'u8''(s->$old_authentication_key)
      && $IsValid'vec'u8''(s->$new_authentication_key)
}
function {:inline} $IsEqual'$1_account_KeyRotationEvent'(s1: $1_account_KeyRotationEvent, s2: $1_account_KeyRotationEvent): bool {
    $IsEqual'vec'u8''(s1->$old_authentication_key, s2->$old_authentication_key)
    && $IsEqual'vec'u8''(s1->$new_authentication_key, s2->$new_authentication_key)}

// struct account::RotationCapability at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:48:5+62
datatype $1_account_RotationCapability {
    $1_account_RotationCapability($account: int)
}
function {:inline} $Update'$1_account_RotationCapability'_account(s: $1_account_RotationCapability, x: int): $1_account_RotationCapability {
    $1_account_RotationCapability(x)
}
function $IsValid'$1_account_RotationCapability'(s: $1_account_RotationCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_RotationCapability'(s1: $1_account_RotationCapability, s2: $1_account_RotationCapability): bool {
    s1 == s2
}

// struct account::SignerCapability at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:50:5+60
datatype $1_account_SignerCapability {
    $1_account_SignerCapability($account: int)
}
function {:inline} $Update'$1_account_SignerCapability'_account(s: $1_account_SignerCapability, x: int): $1_account_SignerCapability {
    $1_account_SignerCapability(x)
}
function $IsValid'$1_account_SignerCapability'(s: $1_account_SignerCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_SignerCapability'(s1: $1_account_SignerCapability, s2: $1_account_SignerCapability): bool {
    s1 == s2
}

// fun account::new_event_handle<coin::DepositEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:697:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_coin_DepositEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_coin_DepositEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_coin_DepositEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_coin_DepositEvent'': $1_event_EventHandle'$1_coin_DepositEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:481:9+39
    assume {:print "$at(81,23153,23192)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:482:9+36
    assume {:print "$at(81,23201,23237)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:697:5+1
    assume {:print "$at(80,39401,39402)"} true;
    assume {:print "$track_local(18,21,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:466:9+46
    assume {:print "$at(81,22552,22598)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:481:9+39
    assume {:print "$at(81,23153,23192)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:482:9+36
    assume {:print "$at(81,23201,23237)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:698:33+20
    assume {:print "$at(80,39531,39551)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(80,39531,39551)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,21):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:698:9+45
    call $t8 := $1_event_new_event_handle'$1_coin_DepositEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(80,39507,39552)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,21):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:698:9+45
    assume {:print "$track_return(18,21,0):", $t8} $t8 == $t8;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
    assume {:print "$at(80,39557,39558)"} true;
L1:

    // return $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
    assume {:print "$at(80,39557,39558)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
L2:

    // abort($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
    assume {:print "$at(80,39557,39558)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<coin::WithdrawEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:697:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_coin_WithdrawEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_coin_WithdrawEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_coin_WithdrawEvent'': $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:481:9+39
    assume {:print "$at(81,23153,23192)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:482:9+36
    assume {:print "$at(81,23201,23237)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:697:5+1
    assume {:print "$at(80,39401,39402)"} true;
    assume {:print "$track_local(18,21,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:466:9+46
    assume {:print "$at(81,22552,22598)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:481:9+39
    assume {:print "$at(81,23153,23192)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:482:9+36
    assume {:print "$at(81,23201,23237)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:698:33+20
    assume {:print "$at(80,39531,39551)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(80,39531,39551)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,21):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:698:9+45
    call $t8 := $1_event_new_event_handle'$1_coin_WithdrawEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(80,39507,39552)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,21):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:698:9+45
    assume {:print "$track_return(18,21,0):", $t8} $t8 == $t8;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
    assume {:print "$at(80,39557,39558)"} true;
L1:

    // return $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
    assume {:print "$at(80,39557,39558)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
L2:

    // abort($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
    assume {:print "$at(80,39557,39558)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<OGProfilesTest2::ClaimUsernameEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:697:5+157
procedure {:inline 1} $1_account_new_event_handle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'': $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:481:9+39
    assume {:print "$at(81,23153,23192)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:482:9+36
    assume {:print "$at(81,23201,23237)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:697:5+1
    assume {:print "$at(80,39401,39402)"} true;
    assume {:print "$track_local(18,21,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:466:9+46
    assume {:print "$at(81,22552,22598)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:481:9+39
    assume {:print "$at(81,23153,23192)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:482:9+36
    assume {:print "$at(81,23201,23237)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:698:33+20
    assume {:print "$at(80,39531,39551)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(80,39531,39551)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,21):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:698:9+45
    call $t8 := $1_event_new_event_handle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(80,39507,39552)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,21):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:698:9+45
    assume {:print "$track_return(18,21,0):", $t8} $t8 == $t8;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
    assume {:print "$at(80,39557,39558)"} true;
L1:

    // return $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
    assume {:print "$at(80,39557,39558)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
L2:

    // abort($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
    assume {:print "$at(80,39557,39558)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<OGProfilesTest2::ProfileMintEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:697:5+157
procedure {:inline 1} $1_account_new_event_handle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'': $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:481:9+39
    assume {:print "$at(81,23153,23192)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:482:9+36
    assume {:print "$at(81,23201,23237)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:697:5+1
    assume {:print "$at(80,39401,39402)"} true;
    assume {:print "$track_local(18,21,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:466:9+46
    assume {:print "$at(81,22552,22598)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:481:9+39
    assume {:print "$at(81,23153,23192)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:482:9+36
    assume {:print "$at(81,23201,23237)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:698:33+20
    assume {:print "$at(80,39531,39551)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(80,39531,39551)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,21):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:698:9+45
    call $t8 := $1_event_new_event_handle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(80,39507,39552)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,21):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:698:9+45
    assume {:print "$track_return(18,21,0):", $t8} $t8 == $t8;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
    assume {:print "$at(80,39557,39558)"} true;
L1:

    // return $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
    assume {:print "$at(80,39557,39558)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
L2:

    // abort($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:699:5+1
    assume {:print "$at(80,39557,39558)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::create_account_unchecked [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:198:5+1182
procedure {:inline 1} $1_account_create_account_unchecked(_$t0: int) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t3: int;
    var $t4: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t5: $signer;
    var $t6: Vec (int);
    var $t7: $signer;
    var $t8: Vec (int);
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: $Mutation (int);
    var $t17: $1_guid_GUID;
    var $t18: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t19: $Mutation (int);
    var $t20: $1_guid_GUID;
    var $t21: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t22: int;
    var $t23: int;
    var $t24: $1_option_Option'address';
    var $t25: $1_account_CapabilityOffer'$1_account_RotationCapability';
    var $t26: $1_option_Option'address';
    var $t27: $1_account_CapabilityOffer'$1_account_SignerCapability';
    var $t28: $1_account_Account;
    var $t0: int;
    var $temp_0'$1_event_EventHandle'$1_account_CoinRegisterEvent'': $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $temp_0'$1_event_EventHandle'$1_account_KeyRotationEvent'': $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t6, bcs::$to_bytes<address>($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:56:9+45
    assume {:print "$at(81,2309,2354)"} true;
    assume ($t6 == $1_bcs_$to_bytes'address'($t0));

    // trace_local[new_address]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:198:5+1
    assume {:print "$at(80,10393,10394)"} true;
    assume {:print "$track_local(18,3,0):", $t0} $t0 == $t0;

    // $t7 := opaque begin: create_signer::create_signer($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:199:27+26
    assume {:print "$at(80,10480,10506)"} true;

    // assume WellFormed($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:199:27+26
    assume $IsValid'signer'($t7) && $1_signer_is_txn_signer($t7) && $1_signer_is_txn_signer_addr($t7->$addr);

    // assume Eq<address>(signer::$address_of($t7), $t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:199:27+26
    assume $IsEqual'address'($1_signer_$address_of($t7), $t0);

    // $t7 := opaque end: create_signer::create_signer($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:199:27+26

    // trace_local[new_account]($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:199:13+11
    assume {:print "$track_local(18,3,5):", $t7} $t7 == $t7;

    // $t8 := bcs::to_bytes<address>($t0) on_abort goto L4 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:200:34+27
    assume {:print "$at(80,10541,10568)"} true;
    call $t8 := $1_bcs_to_bytes'address'($t0);
    if ($abort_flag) {
        assume {:print "$at(80,10541,10568)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[authentication_key]($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:200:13+18
    assume {:print "$track_local(18,3,1):", $t8} $t8 == $t8;

    // $t10 := vector::length<u8>($t8) on_abort goto L4 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:202:13+35
    assume {:print "$at(80,10599,10634)"} true;
    call $t10 := $1_vector_length'u8'($t8);
    if ($abort_flag) {
        assume {:print "$at(80,10599,10634)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t11 := 32 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:202:52+2
    $t11 := 32;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:202:49+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:201:9+140
    assume {:print "$at(80,10578,10718)"} true;
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:201:9+140
L1:

    // goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:201:9+140
    assume {:print "$at(80,10578,10718)"} true;
    goto L2;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:203:37+29
    assume {:print "$at(80,10678,10707)"} true;
L0:

    // $t13 := 4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:203:37+29
    assume {:print "$at(80,10678,10707)"} true;
    $t13 := 4;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L4 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:203:13+54
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(80,10654,10708)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_abort($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:201:9+140
    assume {:print "$at(80,10578,10718)"} true;
    assume {:print "$track_abort(18,3):", $t14} $t14 == $t14;

    // $t9 := move($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:201:9+140
    $t9 := $t14;

    // goto L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:201:9+140
    goto L4;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:206:33+1
    assume {:print "$at(80,10753,10754)"} true;
L2:

    // $t15 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:206:33+1
    assume {:print "$at(80,10753,10754)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // $t3 := $t15 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:206:13+17
    $t3 := $t15;

    // trace_local[guid_creation_num]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:206:13+17
    assume {:print "$track_local(18,3,3):", $t3} $t3 == $t3;

    // $t16 := borrow_local($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:208:55+22
    assume {:print "$at(80,10811,10833)"} true;
    $t16 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t17 := guid::create($t0, $t16) on_abort goto L4 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:208:29+49
    call $t17,$t16 := $1_guid_create($t0, $t16);
    if ($abort_flag) {
        assume {:print "$at(80,10785,10834)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t16) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:208:29+49
    $t3 := $Dereference($t16);

    // trace_local[guid_creation_num]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:208:29+49
    assume {:print "$track_local(18,3,3):", $t3} $t3 == $t3;

    // $t18 := event::new_event_handle<account::CoinRegisterEvent>($t17) on_abort goto L4 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:209:36+57
    assume {:print "$at(80,10871,10928)"} true;
    call $t18 := $1_event_new_event_handle'$1_account_CoinRegisterEvent'($t17);
    if ($abort_flag) {
        assume {:print "$at(80,10871,10928)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[coin_register_events]($t18) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:209:13+20
    assume {:print "$track_local(18,3,2):", $t18} $t18 == $t18;

    // $t19 := borrow_local($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:211:59+22
    assume {:print "$at(80,10989,11011)"} true;
    $t19 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t20 := guid::create($t0, $t19) on_abort goto L4 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:211:33+49
    call $t20,$t19 := $1_guid_create($t0, $t19);
    if ($abort_flag) {
        assume {:print "$at(80,10963,11012)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:211:33+49
    $t3 := $Dereference($t19);

    // trace_local[guid_creation_num]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:211:33+49
    assume {:print "$track_local(18,3,3):", $t3} $t3 == $t3;

    // $t21 := event::new_event_handle<account::KeyRotationEvent>($t20) on_abort goto L4 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:212:35+60
    assume {:print "$at(80,11048,11108)"} true;
    call $t21 := $1_event_new_event_handle'$1_account_KeyRotationEvent'($t20);
    if ($abort_flag) {
        assume {:print "$at(80,11048,11108)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[key_rotation_events]($t21) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:212:13+19
    assume {:print "$track_local(18,3,4):", $t21} $t21 == $t21;

    // $t22 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:218:34+1
    assume {:print "$at(80,11245,11246)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := move($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:219:17+17
    assume {:print "$at(80,11264,11281)"} true;
    $t23 := $t3;

    // $t24 := opaque begin: option::none<address>() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:222:67+14
    assume {:print "$at(80,11424,11438)"} true;

    // assume And(WellFormed($t24), Le(Len<address>(select option::Option.vec($t24)), 1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:222:67+14
    assume ($IsValid'$1_option_Option'address''($t24) && (LenVec($t24->$vec) <= 1));

    // assume Eq<option::Option<address>>($t24, option::spec_none<address>()) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:222:67+14
    assume $IsEqual'$1_option_Option'address''($t24, $1_option_spec_none'address'());

    // $t24 := opaque end: option::none<address>() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:222:67+14

    // $t25 := pack account::CapabilityOffer<account::RotationCapability>($t24) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:222:44+39
    $t25 := $1_account_CapabilityOffer'$1_account_RotationCapability'($t24);

    // $t26 := opaque begin: option::none<address>() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:223:65+14
    assume {:print "$at(80,11506,11520)"} true;

    // assume And(WellFormed($t26), Le(Len<address>(select option::Option.vec($t26)), 1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:223:65+14
    assume ($IsValid'$1_option_Option'address''($t26) && (LenVec($t26->$vec) <= 1));

    // assume Eq<option::Option<address>>($t26, option::spec_none<address>()) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:223:65+14
    assume $IsEqual'$1_option_Option'address''($t26, $1_option_spec_none'address'());

    // $t26 := opaque end: option::none<address>() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:223:65+14

    // $t27 := pack account::CapabilityOffer<account::SignerCapability>($t26) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:223:42+39
    $t27 := $1_account_CapabilityOffer'$1_account_SignerCapability'($t26);

    // $t28 := pack account::Account($t8, $t22, $t23, $t18, $t21, $t25, $t27) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:216:13+371
    assume {:print "$at(80,11166,11537)"} true;
    $t28 := $1_account_Account($t8, $t22, $t23, $t18, $t21, $t25, $t27);

    // move_to<account::Account>($t28, $t7) on_abort goto L4 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:214:9+7
    assume {:print "$at(80,11119,11126)"} true;
    if ($ResourceExists($1_account_Account_$memory, $t7->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $t7->$addr, $t28);
    }
    if ($abort_flag) {
        assume {:print "$at(80,11119,11126)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_return[0]($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:227:9+11
    assume {:print "$at(80,11558,11569)"} true;
    assume {:print "$track_return(18,3,0):", $t7} $t7 == $t7;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:228:5+1
    assume {:print "$at(80,11574,11575)"} true;
L3:

    // return $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:228:5+1
    assume {:print "$at(80,11574,11575)"} true;
    $ret0 := $t7;
    return;

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:228:5+1
L4:

    // abort($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:228:5+1
    assume {:print "$at(80,11574,11575)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun account::create_guid [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:682:5+436
procedure {:inline 1} $1_account_create_guid(_$t0: $signer) returns ($ret0: $1_guid_GUID)
{
    // declare local variables
    var $t1: $Mutation ($1_account_Account);
    var $t2: int;
    var $t3: $1_guid_GUID;
    var $t4: int;
    var $t5: int;
    var $t6: $1_account_Account;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_account_Account);
    var $t10: $Mutation (int);
    var $t11: $1_guid_GUID;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t0: $signer;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:466:9+46
    assume {:print "$at(81,22552,22598)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:481:9+39
    assume {:print "$at(81,23153,23192)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // assume Identical($t6, global<account::Account>($t5)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:482:9+36
    assume {:print "$at(81,23201,23237)"} true;
    assume ($t6 == $ResourceValue($1_account_Account_$memory, $t5));

    // trace_local[account_signer]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:682:5+1
    assume {:print "$at(80,38765,38766)"} true;
    assume {:print "$track_local(18,6,0):", $t0} $t0 == $t0;

    // $t7 := signer::address_of($t0) on_abort goto L4 with $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:683:20+34
    assume {:print "$at(80,38863,38897)"} true;
    call $t7 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(80,38863,38897)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,6):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[addr]($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:683:13+4
    assume {:print "$track_local(18,6,2):", $t7} $t7 == $t7;

    // $t9 := borrow_global<account::Account>($t7) on_abort goto L4 with $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:684:23+17
    assume {:print "$at(80,38921,38938)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t7), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t7));
    }
    if ($abort_flag) {
        assume {:print "$at(80,38921,38938)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,6):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[account]($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:684:13+7
    $temp_0'$1_account_Account' := $Dereference($t9);
    assume {:print "$track_local(18,6,1):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t10 := borrow_field<account::Account>.guid_creation_num($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:685:39+30
    assume {:print "$at(80,38993,39023)"} true;
    $t10 := $ChildMutation($t9, 2, $Dereference($t9)->$guid_creation_num);

    // $t11 := guid::create($t7, $t10) on_abort goto L4 with $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:685:20+50
    call $t11,$t10 := $1_guid_create($t7, $t10);
    if ($abort_flag) {
        assume {:print "$at(80,38974,39024)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,6):", $t8} $t8 == $t8;
        goto L4;
    }

    // write_back[Reference($t9).guid_creation_num (u64)]($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:685:20+50
    $t9 := $UpdateMutation($t9, $Update'$1_account_Account'_guid_creation_num($Dereference($t9), $Dereference($t10)));

    // trace_local[guid]($t11) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:685:13+4
    assume {:print "$track_local(18,6,3):", $t11} $t11 == $t11;

    // $t12 := get_field<account::Account>.guid_creation_num($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:687:13+25
    assume {:print "$at(80,39055,39080)"} true;
    $t12 := $Dereference($t9)->$guid_creation_num;

    // pack_ref_deep($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:687:13+25

    // write_back[account::Account@]($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:687:13+25
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // $t13 := 1125899906842624 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:687:41+21
    $t13 := 1125899906842624;
    assume $IsValid'u64'($t13);

    // $t14 := <($t12, $t13) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:687:39+1
    call $t14 := $Lt($t12, $t13);

    // if ($t14) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:686:9+147
    assume {:print "$at(80,39034,39181)"} true;
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:686:9+147
L1:

    // goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:686:9+147
    assume {:print "$at(80,39034,39181)"} true;
    goto L2;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:688:33+31
    assume {:print "$at(80,39138,39169)"} true;
L0:

    // $t15 := 20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:688:33+31
    assume {:print "$at(80,39138,39169)"} true;
    $t15 := 20;
    assume $IsValid'u64'($t15);

    // $t16 := error::out_of_range($t15) on_abort goto L4 with $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:688:13+52
    call $t16 := $1_error_out_of_range($t15);
    if ($abort_flag) {
        assume {:print "$at(80,39118,39170)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,6):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_abort($t16) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:686:9+147
    assume {:print "$at(80,39034,39181)"} true;
    assume {:print "$track_abort(18,6):", $t16} $t16 == $t16;

    // $t8 := move($t16) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:686:9+147
    $t8 := $t16;

    // goto L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:686:9+147
    goto L4;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:690:9+4
    assume {:print "$at(80,39191,39195)"} true;
L2:

    // trace_return[0]($t11) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:690:9+4
    assume {:print "$at(80,39191,39195)"} true;
    assume {:print "$track_return(18,6,0):", $t11} $t11 == $t11;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:691:5+1
    assume {:print "$at(80,39200,39201)"} true;
L3:

    // return $t11 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:691:5+1
    assume {:print "$at(80,39200,39201)"} true;
    $ret0 := $t11;
    return;

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:691:5+1
L4:

    // abort($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:691:5+1
    assume {:print "$at(80,39200,39201)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun account::create_resource_account [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:630:5+1378
procedure {:inline 1} $1_account_create_resource_account(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $signer, $ret1: $1_account_SignerCapability)
{
    // declare local variables
    var $t2: int;
    var $t3: $signer;
    var $t4: $1_account_Account;
    var $t5: $Mutation ($1_account_Account);
    var $t6: $signer;
    var $t7: int;
    var $t8: $1_account_SignerCapability;
    var $t9: int;
    var $t10: int;
    var $t11: $1_account_Account;
    var $t12: Vec (int);
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: $1_account_Account;
    var $t18: $1_account_CapabilityOffer'$1_account_SignerCapability';
    var $t19: $1_option_Option'address';
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: Vec (int);
    var $t29: Vec (int);
    var $t30: int;
    var $t31: $Mutation ($1_account_Account);
    var $t32: $1_option_Option'address';
    var $t33: $Mutation ($1_account_CapabilityOffer'$1_account_SignerCapability');
    var $t34: $Mutation ($1_option_Option'address');
    var $t35: $1_account_SignerCapability;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t9, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+45
    assume {:print "$at(81,21096,21141)"} true;
    assume ($t9 == $1_signer_$address_of($t0));

    // assume Identical($t10, account::spec_create_resource_address($t9, $t1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:431:9+68
    assume {:print "$at(81,21150,21218)"} true;
    assume ($t10 == $1_account_spec_create_resource_address($t9, $t1));

    // assume Identical($t11, global<account::Account>($t10)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:501:9+45
    assume {:print "$at(81,23907,23952)"} true;
    assume ($t11 == $ResourceValue($1_account_Account_$memory, $t10));

    // assume Identical($t12, bcs::$to_bytes<address>($t10)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:56:9+45
    assume {:print "$at(81,2309,2354)"} true;
    assume ($t12 == $1_bcs_$to_bytes'address'($t10));

    // trace_local[source]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:630:5+1
    assume {:print "$at(80,36460,36461)"} true;
    assume {:print "$track_local(18,7,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:630:5+1
    assume {:print "$track_local(18,7,1):", $t1} $t1 == $t1;

    // $t13 := signer::address_of($t0) on_abort goto L10 with $t14 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:631:54+26
    assume {:print "$at(80,36630,36656)"} true;
    call $t13 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(80,36630,36656)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t15 := opaque begin: account::create_resource_address($t13, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:631:29+58

    // assume WellFormed($t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:631:29+58
    assume $IsValid'address'($t15);

    // assume Eq<address>($t15, account::spec_create_resource_address($t13, $t1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:631:29+58
    assume $IsEqual'address'($t15, $1_account_spec_create_resource_address($t13, $t1));

    // $t15 := opaque end: account::create_resource_address($t13, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:631:29+58

    // trace_local[resource_addr]($t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:631:13+13
    assume {:print "$track_local(18,7,7):", $t15} $t15 == $t15;

    // $t16 := account::exists_at($t15) on_abort goto L10 with $t14 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:632:28+24
    assume {:print "$at(80,36692,36716)"} true;
    call $t16 := $1_account_exists_at($t15);
    if ($abort_flag) {
        assume {:print "$at(80,36692,36716)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // if ($t16) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:632:24+532
    if ($t16) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:633:50+13
    assume {:print "$at(80,36769,36782)"} true;
L1:

    // $t17 := get_global<account::Account>($t15) on_abort goto L10 with $t14 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:633:27+13
    assume {:print "$at(80,36746,36759)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $ResourceValue($1_account_Account_$memory, $t15);
    }
    if ($abort_flag) {
        assume {:print "$at(80,36746,36759)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_local[account]($t17) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:633:17+7
    assume {:print "$track_local(18,7,4):", $t17} $t17 == $t17;

    // $t18 := get_field<account::Account>.signer_capability_offer($t17) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:635:34+31
    assume {:print "$at(80,36839,36870)"} true;
    $t18 := $t17->$signer_capability_offer;

    // $t19 := get_field<account::CapabilityOffer<account::SignerCapability>>.for($t18) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:635:33+36
    $t19 := $t18->$for;

    // $t20 := opaque begin: option::is_none<address>($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:635:17+53

    // assume WellFormed($t20) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:635:17+53
    assume $IsValid'bool'($t20);

    // assume Eq<bool>($t20, option::spec_is_none<address>($t19)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:635:17+53
    assume $IsEqual'bool'($t20, $1_option_spec_is_none'address'($t19));

    // $t20 := opaque end: option::is_none<address>($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:635:17+53

    // if ($t20) goto L3 else goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:634:13+159
    assume {:print "$at(80,36797,36956)"} true;
    if ($t20) { goto L3; } else { goto L2; }

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:634:13+159
L3:

    // goto L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:634:13+159
    assume {:print "$at(80,36797,36956)"} true;
    goto L4;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:634:13+159
L2:

    // $t21 := 15 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:636:39+25
    assume {:print "$at(80,36915,36940)"} true;
    $t21 := 15;
    assume $IsValid'u64'($t21);

    // $t22 := error::already_exists($t21) on_abort goto L10 with $t14 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:636:17+48
    call $t22 := $1_error_already_exists($t21);
    if ($abort_flag) {
        assume {:print "$at(80,36893,36941)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_abort($t22) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:634:13+159
    assume {:print "$at(80,36797,36956)"} true;
    assume {:print "$track_abort(18,7):", $t22} $t22 == $t22;

    // $t14 := move($t22) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:634:13+159
    $t14 := $t22;

    // goto L10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:634:13+159
    goto L10;

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:639:17+7
    assume {:print "$at(80,36995,37002)"} true;
L4:

    // $t23 := get_field<account::Account>.sequence_number($t17) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:639:17+23
    assume {:print "$at(80,36995,37018)"} true;
    $t23 := $t17->$sequence_number;

    // $t24 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:639:44+1
    $t24 := 0;
    assume $IsValid'u64'($t24);

    // $t25 := ==($t23, $t24) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:639:41+2
    $t25 := $IsEqual'u64'($t23, $t24);

    // if ($t25) goto L6 else goto L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:638:13+129
    assume {:print "$at(80,36970,37099)"} true;
    if ($t25) { goto L6; } else { goto L5; }

    // label L6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:638:13+129
L6:

    // goto L7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:638:13+129
    assume {:print "$at(80,36970,37099)"} true;
    goto L7;

    // label L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:640:38+21
    assume {:print "$at(80,37062,37083)"} true;
L5:

    // $t26 := 16 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:640:38+21
    assume {:print "$at(80,37062,37083)"} true;
    $t26 := 16;
    assume $IsValid'u64'($t26);

    // $t27 := error::invalid_state($t26) on_abort goto L10 with $t14 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:640:17+43
    call $t27 := $1_error_invalid_state($t26);
    if ($abort_flag) {
        assume {:print "$at(80,37041,37084)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_abort($t27) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:638:13+129
    assume {:print "$at(80,36970,37099)"} true;
    assume {:print "$track_abort(18,7):", $t27} $t27 == $t27;

    // $t14 := move($t27) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:638:13+129
    $t14 := $t27;

    // goto L10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:638:13+129
    goto L10;

    // label L7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:642:27+13
    assume {:print "$at(80,37127,37140)"} true;
L7:

    // $t3 := opaque begin: create_signer::create_signer($t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:642:13+28
    assume {:print "$at(80,37113,37141)"} true;

    // assume WellFormed($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:642:13+28
    assume $IsValid'signer'($t3) && $1_signer_is_txn_signer($t3) && $1_signer_is_txn_signer_addr($t3->$addr);

    // assume Eq<address>(signer::$address_of($t3), $t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:642:13+28
    assume $IsEqual'address'($1_signer_$address_of($t3), $t15);

    // $t3 := opaque end: create_signer::create_signer($t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:642:13+28

    // goto L8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:632:24+532
    assume {:print "$at(80,36688,37220)"} true;
    goto L8;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:644:38+13
    assume {:print "$at(80,37196,37209)"} true;
L0:

    // assume Identical($t28, bcs::$to_bytes<address>($t15)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:56:9+45
    assume {:print "$at(81,2309,2354)"} true;
    assume ($t28 == $1_bcs_$to_bytes'address'($t15));

    // $t3 := account::create_account_unchecked($t15) on_abort goto L10 with $t14 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:644:13+39
    assume {:print "$at(80,37171,37210)"} true;
    call $t3 := $1_account_create_account_unchecked($t15);
    if ($abort_flag) {
        assume {:print "$at(80,37171,37210)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // label L8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:632:24+532
    assume {:print "$at(80,36688,37220)"} true;
L8:

    // trace_local[resource]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:632:13+8
    assume {:print "$at(80,36677,36685)"} true;
    assume {:print "$track_local(18,7,6):", $t3} $t3 == $t3;

    // $t29 := [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:650:55+13
    assume {:print "$at(80,37575,37588)"} true;
    $t29 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(0, 0, 0, 0), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0));
    assume $IsValid'vec'u8''($t29);

    // assume Identical($t30, signer::$address_of($t3)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:91:9+39
    assume {:print "$at(81,3722,3761)"} true;
    assume ($t30 == $1_signer_$address_of($t3));

    // account::rotate_authentication_key_internal($t3, $t29) on_abort goto L10 with $t14 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:650:9+60
    assume {:print "$at(80,37529,37589)"} true;
    call $1_account_rotate_authentication_key_internal($t3, $t29);
    if ($abort_flag) {
        assume {:print "$at(80,37529,37589)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t31 := borrow_global<account::Account>($t15) on_abort goto L10 with $t14 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:652:23+17
    assume {:print "$at(80,37614,37631)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t31 := $Mutation($Global($t15), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t15));
    }
    if ($abort_flag) {
        assume {:print "$at(80,37614,37631)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_local[account#3]($t31) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:652:13+7
    $temp_0'$1_account_Account' := $Dereference($t31);
    assume {:print "$track_local(18,7,5):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t32 := opaque begin: option::some<address>($t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:653:47+27
    assume {:print "$at(80,37703,37730)"} true;

    // assume And(WellFormed($t32), Le(Len<address>(select option::Option.vec($t32)), 1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:653:47+27
    assume ($IsValid'$1_option_Option'address''($t32) && (LenVec($t32->$vec) <= 1));

    // assume Eq<option::Option<address>>($t32, option::spec_some<address>($t15)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:653:47+27
    assume $IsEqual'$1_option_Option'address''($t32, $1_option_spec_some'address'($t15));

    // $t32 := opaque end: option::some<address>($t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:653:47+27

    // $t33 := borrow_field<account::Account>.signer_capability_offer($t31) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:653:9+31
    $t33 := $ChildMutation($t31, 6, $Dereference($t31)->$signer_capability_offer);

    // $t34 := borrow_field<account::CapabilityOffer<account::SignerCapability>>.for($t33) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:653:9+35
    $t34 := $ChildMutation($t33, 0, $Dereference($t33)->$for);

    // write_ref($t34, $t32) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:653:9+65
    $t34 := $UpdateMutation($t34, $t32);

    // write_back[Reference($t33).for (option::Option<address>)]($t34) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:653:9+65
    $t33 := $UpdateMutation($t33, $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for($Dereference($t33), $Dereference($t34)));

    // write_back[Reference($t31).signer_capability_offer (account::CapabilityOffer<account::SignerCapability>)]($t33) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:653:9+65
    $t31 := $UpdateMutation($t31, $Update'$1_account_Account'_signer_capability_offer($Dereference($t31), $Dereference($t33)));

    // pack_ref_deep($t31) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:653:9+65

    // write_back[account::Account@]($t31) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:653:9+65
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t31),
        $Dereference($t31));

    // $t35 := pack account::SignerCapability($t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:654:26+43
    assume {:print "$at(80,37757,37800)"} true;
    $t35 := $1_account_SignerCapability($t15);

    // trace_local[signer_cap]($t35) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:654:13+10
    assume {:print "$track_local(18,7,8):", $t35} $t35 == $t35;

    // trace_return[0]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:655:9+22
    assume {:print "$at(80,37810,37832)"} true;
    assume {:print "$track_return(18,7,0):", $t3} $t3 == $t3;

    // trace_return[1]($t35) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:655:9+22
    assume {:print "$track_return(18,7,1):", $t35} $t35 == $t35;

    // label L9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:656:5+1
    assume {:print "$at(80,37837,37838)"} true;
L9:

    // return ($t3, $t35) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:656:5+1
    assume {:print "$at(80,37837,37838)"} true;
    $ret0 := $t3;
    $ret1 := $t35;
    return;

    // label L10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:656:5+1
L10:

    // abort($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:656:5+1
    assume {:print "$at(80,37837,37838)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun account::create_signer_with_capability [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:735:5+156
procedure {:inline 1} $1_account_create_signer_with_capability(_$t0: $1_account_SignerCapability) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $signer;
    var $t0: $1_account_SignerCapability;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select account::SignerCapability.account($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:495:9+30
    assume {:print "$at(81,23729,23759)"} true;
    assume ($t1 == $t0->$account);

    // trace_local[capability]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:735:5+1
    assume {:print "$at(80,41006,41007)"} true;
    assume {:print "$track_local(18,9,0):", $t0} $t0 == $t0;

    // $t2 := get_field<account::SignerCapability>.account($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:736:20+19
    assume {:print "$at(80,41107,41126)"} true;
    $t2 := $t0->$account;

    // $t3 := opaque begin: create_signer::create_signer($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:737:9+20
    assume {:print "$at(80,41136,41156)"} true;

    // assume WellFormed($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:737:9+20
    assume $IsValid'signer'($t3) && $1_signer_is_txn_signer($t3) && $1_signer_is_txn_signer_addr($t3->$addr);

    // assume Eq<address>(signer::$address_of($t3), $t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:737:9+20
    assume $IsEqual'address'($1_signer_$address_of($t3), $t2);

    // $t3 := opaque end: create_signer::create_signer($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:737:9+20

    // trace_return[0]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:737:9+20
    assume {:print "$track_return(18,9,0):", $t3} $t3 == $t3;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:738:5+1
    assume {:print "$at(80,41161,41162)"} true;
L1:

    // return $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:738:5+1
    assume {:print "$at(80,41161,41162)"} true;
    $ret0 := $t3;
    return;

}

// fun account::exists_at [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:231:5+79
procedure {:inline 1} $1_account_exists_at(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:231:5+1
    assume {:print "$at(80,11593,11594)"} true;
    assume {:print "$track_local(18,10,0):", $t0} $t0 == $t0;

    // $t1 := exists<account::Account>($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:232:9+6
    assume {:print "$at(80,11645,11651)"} true;
    $t1 := $ResourceExists($1_account_Account_$memory, $t0);

    // trace_return[0]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:232:9+21
    assume {:print "$track_return(18,10,0):", $t1} $t1 == $t1;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:233:5+1
    assume {:print "$at(80,11671,11672)"} true;
L1:

    // return $t1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:233:5+1
    assume {:print "$at(80,11671,11672)"} true;
    $ret0 := $t1;
    return;

}

// fun account::register_coin<aptos_coin::AptosCoin> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:705:5+364
procedure {:inline 1} $1_account_register_coin'$1_aptos_coin_AptosCoin'(_$t0: int) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_account_Account);
    var $t2: int;
    var $t3: $Mutation ($1_event_EventHandle'$1_account_CoinRegisterEvent');
    var $t4: $1_type_info_TypeInfo;
    var $t5: $1_account_CoinRegisterEvent;
    var $t0: int;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account_addr]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:705:5+1
    assume {:print "$at(80,39758,39759)"} true;
    assume {:print "$track_local(18,24,0):", $t0} $t0 == $t0;

    // $t1 := borrow_global<account::Account>($t0) on_abort goto L2 with $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:706:23+17
    assume {:print "$at(80,39865,39882)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t1 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(80,39865,39882)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(18,24):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := borrow_field<account::Account>.coin_register_events($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:708:13+33
    assume {:print "$at(80,39965,39998)"} true;
    $t3 := $ChildMutation($t1, 3, $Dereference($t1)->$coin_register_events);

    // $t4 := type_info::type_of<#0>() on_abort goto L2 with $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:710:28+30
    assume {:print "$at(80,40059,40089)"} true;
    if (!true) {
        call $ExecFailureAbort();
    }
    else {
        $t4 := $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9));
    }
    if ($abort_flag) {
        assume {:print "$at(80,40059,40089)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(18,24):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t5 := pack account::CoinRegisterEvent($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:709:13+92
    assume {:print "$at(80,40012,40104)"} true;
    $t5 := $1_account_CoinRegisterEvent($t4);

    // opaque begin: event::emit_event<account::CoinRegisterEvent>($t3, $t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:707:9+200
    assume {:print "$at(80,39915,40115)"} true;

    // opaque end: event::emit_event<account::CoinRegisterEvent>($t3, $t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:707:9+200

    // write_back[Reference($t1).coin_register_events (event::EventHandle<account::CoinRegisterEvent>)]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:707:9+200
    $t1 := $UpdateMutation($t1, $Update'$1_account_Account'_coin_register_events($Dereference($t1), $Dereference($t3)));

    // pack_ref_deep($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:707:9+200

    // write_back[account::Account@]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:707:9+200
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t1),
        $Dereference($t1));

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:713:5+1
    assume {:print "$at(80,40121,40122)"} true;
L1:

    // return () at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:713:5+1
    assume {:print "$at(80,40121,40122)"} true;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:713:5+1
L2:

    // abort($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:713:5+1
    assume {:print "$at(80,40121,40122)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun account::rotate_authentication_key_internal [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:263:5+516
procedure {:inline 1} $1_account_rotate_authentication_key_internal(_$t0: $signer, _$t1: Vec (int)) returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_account_Account);
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_account_Account);
    var $t16: $Mutation (Vec (int));
    var $t0: $signer;
    var $t1: Vec (int);
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:91:9+39
    assume {:print "$at(81,3722,3761)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // trace_local[account]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:263:5+1
    assume {:print "$at(80,12651,12652)"} true;
    assume {:print "$track_local(18,30,0):", $t0} $t0 == $t0;

    // trace_local[new_auth_key]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:263:5+1
    assume {:print "$track_local(18,30,1):", $t1} $t1 == $t1;

    // $t5 := signer::address_of($t0) on_abort goto L7 with $t6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:264:20+27
    assume {:print "$at(80,12787,12814)"} true;
    call $t5 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(80,12787,12814)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,30):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[addr]($t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:264:13+4
    assume {:print "$track_local(18,30,3):", $t5} $t5 == $t5;

    // $t7 := account::exists_at($t5) on_abort goto L7 with $t6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:265:17+15
    assume {:print "$at(80,12832,12847)"} true;
    call $t7 := $1_account_exists_at($t5);
    if ($abort_flag) {
        assume {:print "$at(80,12832,12847)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,30):", $t6} $t6 == $t6;
        goto L7;
    }

    // if ($t7) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:265:9+67
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:265:9+67
L1:

    // goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:265:9+67
    assume {:print "$at(80,12824,12891)"} true;
    goto L2;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:265:51+23
L0:

    // $t8 := 2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:265:51+23
    assume {:print "$at(80,12866,12889)"} true;
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L7 with $t6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:265:34+41
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(80,12849,12890)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,30):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:265:9+67
    assume {:print "$at(80,12824,12891)"} true;
    assume {:print "$track_abort(18,30):", $t9} $t9 == $t9;

    // $t6 := move($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:265:9+67
    $t6 := $t9;

    // goto L7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:265:9+67
    goto L7;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:267:28+13
    assume {:print "$at(80,12937,12950)"} true;
L2:

    // $t10 := vector::length<u8>($t1) on_abort goto L7 with $t6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:267:13+29
    assume {:print "$at(80,12922,12951)"} true;
    call $t10 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(80,12922,12951)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,30):", $t6} $t6 == $t6;
        goto L7;
    }

    // $t11 := 32 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:267:46+2
    $t11 := 32;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:267:43+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L4 else goto L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:266:9+134
    assume {:print "$at(80,12901,13035)"} true;
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:266:9+134
L4:

    // goto L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:266:9+134
    assume {:print "$at(80,12901,13035)"} true;
    goto L5;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:268:37+29
    assume {:print "$at(80,12995,13024)"} true;
L3:

    // $t13 := 4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:268:37+29
    assume {:print "$at(80,12995,13024)"} true;
    $t13 := 4;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L7 with $t6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:268:13+54
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(80,12971,13025)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,30):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:266:9+134
    assume {:print "$at(80,12901,13035)"} true;
    assume {:print "$track_abort(18,30):", $t14} $t14 == $t14;

    // $t6 := move($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:266:9+134
    $t6 := $t14;

    // goto L7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:266:9+134
    goto L7;

    // label L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:270:59+4
    assume {:print "$at(80,13095,13099)"} true;
L5:

    // $t15 := borrow_global<account::Account>($t5) on_abort goto L7 with $t6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:270:32+17
    assume {:print "$at(80,13068,13085)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t5));
    }
    if ($abort_flag) {
        assume {:print "$at(80,13068,13085)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,30):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[account_resource]($t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:270:13+16
    $temp_0'$1_account_Account' := $Dereference($t15);
    assume {:print "$track_local(18,30,2):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t16 := borrow_field<account::Account>.authentication_key($t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:271:9+35
    assume {:print "$at(80,13110,13145)"} true;
    $t16 := $ChildMutation($t15, 0, $Dereference($t15)->$authentication_key);

    // write_ref($t16, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:271:9+50
    $t16 := $UpdateMutation($t16, $t1);

    // write_back[Reference($t15).authentication_key (vector<u8>)]($t16) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:271:9+50
    $t15 := $UpdateMutation($t15, $Update'$1_account_Account'_authentication_key($Dereference($t15), $Dereference($t16)));

    // pack_ref_deep($t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:271:9+50

    // write_back[account::Account@]($t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:271:9+50
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t15),
        $Dereference($t15));

    // label L6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:272:5+1
    assume {:print "$at(80,13166,13167)"} true;
L6:

    // return () at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:272:5+1
    assume {:print "$at(80,13166,13167)"} true;
    return;

    // label L7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:272:5+1
L7:

    // abort($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:272:5+1
    assume {:print "$at(80,13166,13167)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// struct optional_aggregator::Integer at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:20:5+74
datatype $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer($value: int, $limit: int)
}
function {:inline} $Update'$1_optional_aggregator_Integer'_value(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer(x, s->$limit)
}
function {:inline} $Update'$1_optional_aggregator_Integer'_limit(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer(s->$value, x)
}
function $IsValid'$1_optional_aggregator_Integer'(s: $1_optional_aggregator_Integer): bool {
    $IsValid'u128'(s->$value)
      && $IsValid'u128'(s->$limit)
}
function {:inline} $IsEqual'$1_optional_aggregator_Integer'(s1: $1_optional_aggregator_Integer, s2: $1_optional_aggregator_Integer): bool {
    s1 == s2
}

// struct optional_aggregator::OptionalAggregator at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:64:5+175
datatype $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator($aggregator: $1_option_Option'$1_aggregator_Aggregator', $integer: $1_option_Option'$1_optional_aggregator_Integer')
}
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_aggregator(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_aggregator_Aggregator'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator(x, s->$integer)
}
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_integer(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator(s->$aggregator, x)
}
function $IsValid'$1_optional_aggregator_OptionalAggregator'(s: $1_optional_aggregator_OptionalAggregator): bool {
    $IsValid'$1_option_Option'$1_aggregator_Aggregator''(s->$aggregator)
      && $IsValid'$1_option_Option'$1_optional_aggregator_Integer''(s->$integer)
}
function {:inline} $IsEqual'$1_optional_aggregator_OptionalAggregator'(s1: $1_optional_aggregator_OptionalAggregator, s2: $1_optional_aggregator_OptionalAggregator): bool {
    $IsEqual'$1_option_Option'$1_aggregator_Aggregator''(s1->$aggregator, s2->$aggregator)
    && $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''(s1->$integer, s2->$integer)}

// struct coin::Coin<aptos_coin::AptosCoin> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:74:5+112
datatype $1_coin_Coin'$1_aptos_coin_AptosCoin' {
    $1_coin_Coin'$1_aptos_coin_AptosCoin'($value: int)
}
function {:inline} $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value(s: $1_coin_Coin'$1_aptos_coin_AptosCoin', x: int): $1_coin_Coin'$1_aptos_coin_AptosCoin' {
    $1_coin_Coin'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'u64'(s->$value)
}
function {:inline} $IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s1: $1_coin_Coin'$1_aptos_coin_AptosCoin', s2: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}

// struct coin::CoinInfo<aptos_coin::AptosCoin> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:109:5+564
datatype $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name: $1_string_String, $symbol: $1_string_String, $decimals: int, $supply: $1_option_Option'$1_optional_aggregator_OptionalAggregator')
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_name(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(x, s->$symbol, s->$decimals, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_symbol(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s->$name, x, s->$decimals, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_decimals(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: int): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s->$name, s->$symbol, x, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_supply(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s->$name, s->$symbol, s->$decimals, x)
}
function $IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$symbol)
      && $IsValid'u8'(s->$decimals)
      && $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s->$supply)
}
function {:inline} $IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$symbol, s2->$symbol)
    && $IsEqual'u8'(s1->$decimals, s2->$decimals)
    && $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1->$supply, s2->$supply)}
var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

// struct coin::CoinStore<aptos_coin::AptosCoin> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:92:5+206
datatype $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin: $1_coin_Coin'$1_aptos_coin_AptosCoin', $frozen: bool, $deposit_events: $1_event_EventHandle'$1_coin_DepositEvent', $withdraw_events: $1_event_EventHandle'$1_coin_WithdrawEvent')
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(x, s->$frozen, s->$deposit_events, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_frozen(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: bool): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s->$coin, x, s->$deposit_events, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_deposit_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_DepositEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s->$coin, s->$frozen, x, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_withdraw_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_WithdrawEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s->$coin, s->$frozen, s->$deposit_events, x)
}
function $IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s->$coin)
      && $IsValid'bool'(s->$frozen)
      && $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s->$deposit_events)
      && $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s->$withdraw_events)
}
function {:inline} $IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinStore'$1_aptos_coin_AptosCoin';

// struct coin::DepositEvent at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:123:5+64
datatype $1_coin_DepositEvent {
    $1_coin_DepositEvent($amount: int)
}
function {:inline} $Update'$1_coin_DepositEvent'_amount(s: $1_coin_DepositEvent, x: int): $1_coin_DepositEvent {
    $1_coin_DepositEvent(x)
}
function $IsValid'$1_coin_DepositEvent'(s: $1_coin_DepositEvent): bool {
    $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_coin_DepositEvent'(s1: $1_coin_DepositEvent, s2: $1_coin_DepositEvent): bool {
    s1 == s2
}

// struct coin::WithdrawEvent at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:128:5+65
datatype $1_coin_WithdrawEvent {
    $1_coin_WithdrawEvent($amount: int)
}
function {:inline} $Update'$1_coin_WithdrawEvent'_amount(s: $1_coin_WithdrawEvent, x: int): $1_coin_WithdrawEvent {
    $1_coin_WithdrawEvent(x)
}
function $IsValid'$1_coin_WithdrawEvent'(s: $1_coin_WithdrawEvent): bool {
    $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_coin_WithdrawEvent'(s1: $1_coin_WithdrawEvent, s2: $1_coin_WithdrawEvent): bool {
    s1 == s2
}

// struct coin::Ghost$supply<aptos_coin::AptosCoin> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:4:9+29
datatype $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'($v: int)
}
function {:inline} $Update'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''_v(s: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin', x: int): $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(s: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'num'(s->$v)
}
function {:inline} $IsEqual'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(s1: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin', s2: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';

// struct coin::Ghost$aggregate_supply<aptos_coin::AptosCoin> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:5:9+39
datatype $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'($v: int)
}
function {:inline} $Update'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''_v(s: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin', x: int): $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(s: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'num'(s->$v)
}
function {:inline} $IsEqual'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(s1: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin', s2: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';

// fun coin::is_account_registered<aptos_coin::AptosCoin> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:266:5+129
procedure {:inline 1} $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t2: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(104,1664,1763)"} true;
    assume ($t1 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // trace_local[account_addr]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:266:5+1
    assume {:print "$at(103,9762,9763)"} true;
    assume {:print "$track_local(23,22,0):", $t0} $t0 == $t0;

    // $t2 := exists<coin::CoinStore<#0>>($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:267:9+6
    assume {:print "$at(103,9844,9850)"} true;
    $t2 := $ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:267:9+41
    assume {:print "$track_return(23,22,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:268:5+1
    assume {:print "$at(103,9890,9891)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:268:5+1
    assume {:print "$at(103,9890,9891)"} true;
    $ret0 := $t2;
    return;

}

// fun coin::register<aptos_coin::AptosCoin> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:565:5+664
procedure {:inline 1} $1_coin_register'$1_aptos_coin_AptosCoin'(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t3: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: int;
    var $t7: int;
    var $t8: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t9: bool;
    var $t10: int;
    var $t11: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t12: bool;
    var $t13: int;
    var $t14: $1_account_Account;
    var $t15: $1_event_EventHandle'$1_coin_DepositEvent';
    var $t16: int;
    var $t17: $1_account_Account;
    var $t18: $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $t19: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t0: $signer;
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(104,1664,1763)"} true;
    assume ($t3 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // assume Identical($t4, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:356:9+47
    assume {:print "$at(104,15253,15300)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:357:9+49
    assume {:print "$at(104,15309,15358)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // trace_local[account]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:565:5+1
    assume {:print "$at(103,21572,21573)"} true;
    assume {:print "$track_local(23,30,0):", $t0} $t0 == $t0;

    // $t6 := signer::address_of($t0) on_abort goto L3 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:566:28+27
    assume {:print "$at(103,21649,21676)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(103,21649,21676)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,30):", $t7} $t7 == $t7;
        goto L3;
    }

    // trace_local[account_addr]($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:566:13+12
    assume {:print "$track_local(23,30,1):", $t6} $t6 == $t6;

    // assume Identical($t8, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(104,1664,1763)"} true;
    assume ($t8 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // $t9 := coin::is_account_registered<#0>($t6) on_abort goto L3 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:568:13+45
    assume {:print "$at(103,21777,21822)"} true;
    call $t9 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t6);
    if ($abort_flag) {
        assume {:print "$at(103,21777,21822)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,30):", $t7} $t7 == $t7;
        goto L3;
    }

    // if ($t9) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:568:9+81
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:569:13+6
    assume {:print "$at(103,21838,21844)"} true;
L1:

    // goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:569:13+6
    assume {:print "$at(103,21838,21844)"} true;
    goto L2;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:572:42+12
    assume {:print "$at(103,21898,21910)"} true;
L0:

    // account::register_coin<#0>($t6) on_abort goto L3 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:572:9+46
    assume {:print "$at(103,21865,21911)"} true;
    call $1_account_register_coin'$1_aptos_coin_AptosCoin'($t6);
    if ($abort_flag) {
        assume {:print "$at(103,21865,21911)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,30):", $t7} $t7 == $t7;
        goto L3;
    }

    // $t10 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:574:33+1
    assume {:print "$at(103,21992,21993)"} true;
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // $t11 := pack coin::Coin<#0>($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:574:19+17
    $t11 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t10);

    // $t12 := false at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:575:21+5
    assume {:print "$at(103,22017,22022)"} true;
    $t12 := false;
    assume $IsValid'bool'($t12);

    // assume Identical($t13, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:481:9+39
    assume {:print "$at(81,23153,23192)"} true;
    assume ($t13 == $1_signer_$address_of($t0));

    // assume Identical($t14, global<account::Account>($t13)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:482:9+36
    assume {:print "$at(81,23201,23237)"} true;
    assume ($t14 == $ResourceValue($1_account_Account_$memory, $t13));

    // $t15 := account::new_event_handle<coin::DepositEvent>($t0) on_abort goto L3 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:576:29+48
    assume {:print "$at(103,22052,22100)"} true;
    call $t15 := $1_account_new_event_handle'$1_coin_DepositEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(103,22052,22100)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,30):", $t7} $t7 == $t7;
        goto L3;
    }

    // assume Identical($t16, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:481:9+39
    assume {:print "$at(81,23153,23192)"} true;
    assume ($t16 == $1_signer_$address_of($t0));

    // assume Identical($t17, global<account::Account>($t16)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:482:9+36
    assume {:print "$at(81,23201,23237)"} true;
    assume ($t17 == $ResourceValue($1_account_Account_$memory, $t16));

    // $t18 := account::new_event_handle<coin::WithdrawEvent>($t0) on_abort goto L3 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:577:30+49
    assume {:print "$at(103,22131,22180)"} true;
    call $t18 := $1_account_new_event_handle'$1_coin_WithdrawEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(103,22131,22180)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,30):", $t7} $t7 == $t7;
        goto L3;
    }

    // $t19 := pack coin::CoinStore<#0>($t11, $t12, $t15, $t18) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:573:26+253
    assume {:print "$at(103,21938,22191)"} true;
    $t19 := $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t11, $t12, $t15, $t18);

    // trace_local[coin_store]($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:573:13+10
    assume {:print "$track_local(23,30,2):", $t19} $t19 == $t19;

    // move_to<coin::CoinStore<#0>>($t19, $t0) on_abort goto L3 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:579:9+7
    assume {:print "$at(103,22201,22208)"} true;
    if ($ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0->$addr, $t19);
    }
    if ($abort_flag) {
        assume {:print "$at(103,22201,22208)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,30):", $t7} $t7 == $t7;
        goto L3;
    }

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:580:5+1
    assume {:print "$at(103,22235,22236)"} true;
L2:

    // return () at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:580:5+1
    assume {:print "$at(103,22235,22236)"} true;
    return;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:580:5+1
L3:

    // abort($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.move:580:5+1
    assume {:print "$at(103,22235,22236)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// struct aptos_coin::AptosCoin at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aptos_coin.move:22:5+27
datatype $1_aptos_coin_AptosCoin {
    $1_aptos_coin_AptosCoin($dummy_field: bool)
}
function {:inline} $Update'$1_aptos_coin_AptosCoin'_dummy_field(s: $1_aptos_coin_AptosCoin, x: bool): $1_aptos_coin_AptosCoin {
    $1_aptos_coin_AptosCoin(x)
}
function $IsValid'$1_aptos_coin_AptosCoin'(s: $1_aptos_coin_AptosCoin): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_aptos_coin_AptosCoin'(s1: $1_aptos_coin_AptosCoin, s2: $1_aptos_coin_AptosCoin): bool {
    s1 == s2
}
var $1_aptos_coin_AptosCoin_$memory: $Memory $1_aptos_coin_AptosCoin;

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/chain_status.move:35:5+90
function {:inline} $1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker): bool {
    $ResourceExists($1_chain_status_GenesisEndMarker_$memory, 1)
}

// struct chain_status::GenesisEndMarker at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/chain_status.move:12:5+34
datatype $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker($dummy_field: bool)
}
function {:inline} $Update'$1_chain_status_GenesisEndMarker'_dummy_field(s: $1_chain_status_GenesisEndMarker, x: bool): $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker(x)
}
function $IsValid'$1_chain_status_GenesisEndMarker'(s: $1_chain_status_GenesisEndMarker): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_chain_status_GenesisEndMarker'(s1: $1_chain_status_GenesisEndMarker, s2: $1_chain_status_GenesisEndMarker): bool {
    s1 == s2
}
var $1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker;

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:22:10+111
function {:inline} $1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds): int {
    $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, 1)->$microseconds
}

// struct timestamp::CurrentTimeMicroseconds at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:12:5+73
datatype $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds($microseconds: int)
}
function {:inline} $Update'$1_timestamp_CurrentTimeMicroseconds'_microseconds(s: $1_timestamp_CurrentTimeMicroseconds, x: int): $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds(x)
}
function $IsValid'$1_timestamp_CurrentTimeMicroseconds'(s: $1_timestamp_CurrentTimeMicroseconds): bool {
    $IsValid'u64'(s->$microseconds)
}
function {:inline} $IsEqual'$1_timestamp_CurrentTimeMicroseconds'(s1: $1_timestamp_CurrentTimeMicroseconds, s2: $1_timestamp_CurrentTimeMicroseconds): bool {
    s1 == s2
}
var $1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds;

// fun timestamp::now_microseconds [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:61:5+153
procedure {:inline 1} $1_timestamp_now_microseconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: $1_timestamp_CurrentTimeMicroseconds;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := 0x1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:62:48+16
    assume {:print "$at(152,2511,2527)"} true;
    $t0 := 1;
    assume $IsValid'address'($t0);

    // $t1 := get_global<timestamp::CurrentTimeMicroseconds>($t0) on_abort goto L2 with $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:62:9+13
    if (!$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t1 := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(152,2472,2485)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(28,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_field<timestamp::CurrentTimeMicroseconds>.microseconds($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:62:9+69
    $t3 := $t1->$microseconds;

    // trace_return[0]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:62:9+69
    assume {:print "$track_return(28,0,0):", $t3} $t3 == $t3;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(152,2546,2547)"} true;
L1:

    // return $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(152,2546,2547)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
L2:

    // abort($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(152,2546,2547)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun timestamp::now_seconds [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:67:5+123
procedure {:inline 1} $1_timestamp_now_seconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := timestamp::now_microseconds() on_abort goto L2 with $t1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:68:9+18
    assume {:print "$at(152,2680,2698)"} true;
    call $t0 := $1_timestamp_now_microseconds();
    if ($abort_flag) {
        assume {:print "$at(152,2680,2698)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(28,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := 1000000 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:68:30+23
    $t2 := 1000000;
    assume $IsValid'u64'($t2);

    // $t3 := /($t0, $t2) on_abort goto L2 with $t1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:68:28+1
    call $t3 := $Div($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(152,2699,2700)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(28,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // trace_return[0]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:68:9+44
    assume {:print "$track_return(28,1,0):", $t3} $t3 == $t3;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(152,2729,2730)"} true;
L1:

    // return $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(152,2729,2730)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
L2:

    // abort($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(152,2729,2730)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// struct simple_map::Element<address, string::String> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/simple_map.move:21:5+96
datatype $1_simple_map_Element'address_$1_string_String' {
    $1_simple_map_Element'address_$1_string_String'($key: int, $value: $1_string_String)
}
function {:inline} $Update'$1_simple_map_Element'address_$1_string_String''_key(s: $1_simple_map_Element'address_$1_string_String', x: int): $1_simple_map_Element'address_$1_string_String' {
    $1_simple_map_Element'address_$1_string_String'(x, s->$value)
}
function {:inline} $Update'$1_simple_map_Element'address_$1_string_String''_value(s: $1_simple_map_Element'address_$1_string_String', x: $1_string_String): $1_simple_map_Element'address_$1_string_String' {
    $1_simple_map_Element'address_$1_string_String'(s->$key, x)
}
function $IsValid'$1_simple_map_Element'address_$1_string_String''(s: $1_simple_map_Element'address_$1_string_String'): bool {
    $IsValid'address'(s->$key)
      && $IsValid'$1_string_String'(s->$value)
}
function {:inline} $IsEqual'$1_simple_map_Element'address_$1_string_String''(s1: $1_simple_map_Element'address_$1_string_String', s2: $1_simple_map_Element'address_$1_string_String'): bool {
    $IsEqual'address'(s1->$key, s2->$key)
    && $IsEqual'$1_string_String'(s1->$value, s2->$value)}

// fun simple_map::values<address, string::String> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/simple_map.move:142:5+204
procedure {:inline 1} $1_simple_map_values'address_$1_string_String'(_$t0: Table int ($1_string_String)) returns ($ret0: Vec ($1_string_String))
{
    // declare local variables
    var $t1: $Mutation (Vec ($1_string_String));
    var $t2: $1_simple_map_Element'address_$1_string_String';
    var $t3: $1_simple_map_Element'address_$1_string_String';
    var $t4: int;
    var $t5: int;
    var $t6: Vec ($1_string_String);
    var $t7: Vec ($1_simple_map_Element'address_$1_string_String');
    var $t8: Vec ($1_simple_map_Element'address_$1_string_String');
    var $t9: Vec ($1_simple_map_Element'address_$1_string_String');
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: bool;
    var $t14: $1_simple_map_Element'address_$1_string_String';
    var $t15: $1_string_String;
    var $t16: int;
    var $t17: int;
    var $t18: $Mutation (Vec ($1_string_String));
    var $t19: Vec ($1_string_String);
    var $t0: Table int ($1_string_String);
    var $temp_0'$1_simple_map_Element'address_$1_string_String'': $1_simple_map_Element'address_$1_string_String';
    var $temp_0'$1_simple_map_SimpleMap'address_$1_string_String'': Table int ($1_string_String);
    var $temp_0'u64': int;
    var $temp_0'vec'$1_simple_map_Element'address_$1_string_String''': Vec ($1_simple_map_Element'address_$1_string_String');
    var $temp_0'vec'$1_string_String'': Vec ($1_string_String);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[map]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/simple_map.move:142:5+1
    assume {:print "$at(70,4633,4634)"} true;
    assume {:print "$track_local(29,15,0):", $t0} $t0 == $t0;

    // $t9 := get_field<simple_map::SimpleMap<#0, #1>>.data($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/simple_map.move:143:25+9
    assume {:print "$at(70,4739,4748)"} true;
    $t9 := $t0->$data;

    // trace_local[v#196]($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:409:9+1
    assume {:print "$at(17,14656,14657)"} true;
    assume {:print "$track_local(29,15,7):", $t9} $t9 == $t9;

    // $t6 := vector::empty<#1>() on_abort goto L6 with $t10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:412:22+20
    assume {:print "$at(17,14758,14778)"} true;
    call $t6 := $1_vector_empty'$1_string_String'();
    if ($abort_flag) {
        assume {:print "$at(17,14758,14778)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(29,15):", $t10} $t10 == $t10;
        goto L6;
    }

    // trace_local[result#198]($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:412:13+6
    assume {:print "$track_local(29,15,6):", $t6} $t6 == $t6;

    // trace_local[v#200]($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:280:45+1
    assume {:print "$at(17,9935,9936)"} true;
    assume {:print "$track_local(29,15,8):", $t9} $t9 == $t9;

    // $t11 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:281:17+1
    assume {:print "$at(17,9989,9990)"} true;
    $t11 := 0;
    assume $IsValid'u64'($t11);

    // trace_local[i#202]($t11) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:281:13+1
    assume {:print "$track_local(29,15,4):", $t11} $t11 == $t11;

    // $t12 := vector::length<simple_map::Element<#0, #1>>($t9) on_abort goto L6 with $t10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:282:19+9
    assume {:print "$at(17,10010,10019)"} true;
    call $t12 := $1_vector_length'$1_simple_map_Element'address_$1_string_String''($t9);
    if ($abort_flag) {
        assume {:print "$at(17,10010,10019)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(29,15):", $t10} $t10 == $t10;
        goto L6;
    }

    // trace_local[len#203]($t12) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:282:13+3
    assume {:print "$track_local(29,15,5):", $t12} $t12 == $t12;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    assume {:print "$at(17,10036,10037)"} true;
L3:

    // $t4 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    assume {:print "$at(17,10036,10037)"} true;
    havoc $t4;

    // assume WellFormed($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    assume $IsValid'u64'($t4);

    // $t6 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    havoc $t6;

    // assume WellFormed($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    assume $IsValid'vec'$1_string_String''($t6);

    // $t13 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    havoc $t13;

    // assume WellFormed($t13) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    assume $IsValid'bool'($t13);

    // $t14 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    havoc $t14;

    // assume WellFormed($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    assume $IsValid'$1_simple_map_Element'address_$1_string_String''($t14);

    // $t15 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    havoc $t15;

    // assume WellFormed($t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    assume $IsValid'$1_string_String'($t15);

    // $t16 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    havoc $t16;

    // assume WellFormed($t16) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    assume $IsValid'u64'($t16);

    // $t17 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    havoc $t17;

    // assume WellFormed($t17) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    assume $IsValid'u64'($t17);

    // $t18 := havoc[mut_all]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    havoc $t18;

    // assume WellFormed($t18) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    assume $IsValid'vec'$1_string_String''($Dereference($t18));

    // trace_local[i#202]($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    assume {:print "$info(): enter loop, variable(s) i#202, result#198 havocked and reassigned"} true;
    assume {:print "$track_local(29,15,4):", $t4} $t4 == $t4;

    // trace_local[result#198]($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    assume {:print "$track_local(29,15,6):", $t6} $t6 == $t6;

    // assume Not(AbortFlag()) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:16+1
    assume !$abort_flag;

    // $t13 := <($t4, $t12) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:18+1
    call $t13 := $Lt($t4, $t12);

    // if ($t13) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:9+78
    if ($t13) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:283:9+78
L1:

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:284:22+1
    assume {:print "$at(17,10068,10069)"} true;
L2:

    // $t14 := vector::borrow<simple_map::Element<#0, #1>>($t9, $t4) on_abort goto L6 with $t10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:284:15+12
    assume {:print "$at(17,10061,10073)"} true;
    call $t14 := $1_vector_borrow'$1_simple_map_Element'address_$1_string_String''($t9, $t4);
    if ($abort_flag) {
        assume {:print "$at(17,10061,10073)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(29,15):", $t10} $t10 == $t10;
        goto L6;
    }

    // trace_local[elem#199#204]($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:284:15+12
    assume {:print "$track_local(29,15,3):", $t14} $t14 == $t14;

    // $t18 := borrow_local($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:413:42+11
    assume {:print "$at(17,14821,14832)"} true;
    $t18 := $Mutation($Local(6), EmptyVec(), $t6);

    // trace_local[e#206]($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/simple_map.move:144:17+1
    assume {:print "$at(70,4772,4773)"} true;
    assume {:print "$track_local(29,15,2):", $t14} $t14 == $t14;

    // $t15 := get_field<simple_map::Element<#0, #1>>.value($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/simple_map.move:145:13+7
    assume {:print "$at(70,4813,4820)"} true;
    $t15 := $t14->$value;

    // vector::push_back<#1>($t18, $t15) on_abort goto L6 with $t10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:413:32+31
    assume {:print "$at(17,14811,14842)"} true;
    call $t18 := $1_vector_push_back'$1_string_String'($t18, $t15);
    if ($abort_flag) {
        assume {:print "$at(17,14811,14842)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(29,15):", $t10} $t10 == $t10;
        goto L6;
    }

    // write_back[LocalRoot($t6)@]($t18) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:413:32+31
    $t6 := $Dereference($t18);

    // trace_local[result#198]($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:413:32+31
    assume {:print "$track_local(29,15,6):", $t6} $t6 == $t6;

    // $t16 := 1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:285:21+1
    assume {:print "$at(17,10096,10097)"} true;
    $t16 := 1;
    assume $IsValid'u64'($t16);

    // $t17 := +($t4, $t16) on_abort goto L6 with $t10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:285:19+1
    call $t17 := $AddU64($t4, $t16);
    if ($abort_flag) {
        assume {:print "$at(17,10094,10095)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(29,15):", $t10} $t10 == $t10;
        goto L6;
    }

    // trace_local[i#202]($t17) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:285:13+1
    assume {:print "$track_local(29,15,4):", $t17} $t17 == $t17;

    // goto L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:285:13+9
    goto L4;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:414:9+6
    assume {:print "$at(17,14853,14859)"} true;
L0:

    // $t19 := move($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:414:9+6
    assume {:print "$at(17,14853,14859)"} true;
    $t19 := $t6;

    // trace_return[0]($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:414:9+6
    assume {:print "$track_return(29,15,0):", $t19} $t19 == $t19;

    // goto L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:414:9+6
    goto L5;

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:414:9+6
    // Loop invariant checking block for the loop started with header: L3
L4:

    // stop() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:414:9+6
    assume {:print "$at(17,14853,14859)"} true;
    assume false;
    return;

    // label L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/simple_map.move:147:5+1
    assume {:print "$at(70,4836,4837)"} true;
L5:

    // return $t19 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/simple_map.move:147:5+1
    assume {:print "$at(70,4836,4837)"} true;
    $ret0 := $t19;
    return;

    // label L6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/simple_map.move:147:5+1
L6:

    // abort($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/simple_map.move:147:5+1
    assume {:print "$at(70,4836,4837)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:7:9+50
function  $1_aptos_hash_spec_keccak256(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_keccak256(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:12:9+58
function  $1_aptos_hash_spec_sha2_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha2_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:17:9+58
function  $1_aptos_hash_spec_sha3_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha3_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:22:9+59
function  $1_aptos_hash_spec_ripemd160_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_ripemd160_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:27:9+61
function  $1_aptos_hash_spec_blake2b_256_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_blake2b_256_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/reconfiguration.move:154:5+155
function {:inline} $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration): int {
    $ResourceValue($1_reconfiguration_Configuration_$memory, 1)->$last_reconfiguration_time
}

// struct reconfiguration::Configuration at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/reconfiguration.move:33:5+306
datatype $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration($epoch: int, $last_reconfiguration_time: int, $events: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent')
}
function {:inline} $Update'$1_reconfiguration_Configuration'_epoch(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(x, s->$last_reconfiguration_time, s->$events)
}
function {:inline} $Update'$1_reconfiguration_Configuration'_last_reconfiguration_time(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(s->$epoch, x, s->$events)
}
function {:inline} $Update'$1_reconfiguration_Configuration'_events(s: $1_reconfiguration_Configuration, x: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(s->$epoch, s->$last_reconfiguration_time, x)
}
function $IsValid'$1_reconfiguration_Configuration'(s: $1_reconfiguration_Configuration): bool {
    $IsValid'u64'(s->$epoch)
      && $IsValid'u64'(s->$last_reconfiguration_time)
      && $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s->$events)
}
function {:inline} $IsEqual'$1_reconfiguration_Configuration'(s1: $1_reconfiguration_Configuration, s2: $1_reconfiguration_Configuration): bool {
    s1 == s2
}
var $1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration;

// struct reconfiguration::NewEpochEvent at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/reconfiguration.move:28:5+64
datatype $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent($epoch: int)
}
function {:inline} $Update'$1_reconfiguration_NewEpochEvent'_epoch(s: $1_reconfiguration_NewEpochEvent, x: int): $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent(x)
}
function $IsValid'$1_reconfiguration_NewEpochEvent'(s: $1_reconfiguration_NewEpochEvent): bool {
    $IsValid'u64'(s->$epoch)
}
function {:inline} $IsEqual'$1_reconfiguration_NewEpochEvent'(s1: $1_reconfiguration_NewEpochEvent, s2: $1_reconfiguration_NewEpochEvent): bool {
    s1 == s2
}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.spec.move:54:10+120
function  $1_string_utils_spec_native_format'u64'(s: int, type_tag: bool, canonicalize: bool, single_line: bool, include_int_types: bool): $1_string_String;
axiom (forall s: int, type_tag: bool, canonicalize: bool, single_line: bool, include_int_types: bool ::
(var $$res := $1_string_utils_spec_native_format'u64'(s, type_tag, canonicalize, single_line, include_int_types);
$IsValid'$1_string_String'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.spec.move:55:10+64
function  $1_string_utils_spec_native_format_list'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(fmt: Vec (int), val: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''): $1_string_String;
axiom (forall fmt: Vec (int), val: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'' ::
(var $$res := $1_string_utils_spec_native_format_list'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(fmt, val);
$IsValid'$1_string_String'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.spec.move:56:10+70
function  $1_string_utils_args_mismatch_or_invalid_format'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(fmt: Vec (int), val: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''): bool;
axiom (forall fmt: Vec (int), val: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'' ::
(var $$res := $1_string_utils_args_mismatch_or_invalid_format'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(fmt, val);
$IsValid'bool'($$res)));

// struct string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::NIL>> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:51:5+79
datatype $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''($car: $1_string_String, $cdr: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL')
}
function {:inline} $Update'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''_car(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'', x: $1_string_String): $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(x, s->$cdr)
}
function {:inline} $Update'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''_cdr(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'', x: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'): $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(s->$car, x)
}
function $IsValid'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''): bool {
    $IsValid'$1_string_String'(s->$car)
      && $IsValid'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(s->$cdr)
}
function {:inline} $IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(s1: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'', s2: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''): bool {
    $IsEqual'$1_string_String'(s1->$car, s2->$car)
    && $IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(s1->$cdr, s2->$cdr)}

// struct string_utils::Cons<string::String, string_utils::NIL> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:51:5+79
datatype $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'($car: $1_string_String, $cdr: $1_string_utils_NIL)
}
function {:inline} $Update'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''_car(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL', x: $1_string_String): $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'(x, s->$cdr)
}
function {:inline} $Update'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''_cdr(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL', x: $1_string_utils_NIL): $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'(s->$car, x)
}
function $IsValid'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'): bool {
    $IsValid'$1_string_String'(s->$car)
      && $IsValid'$1_string_utils_NIL'(s->$cdr)
}
function {:inline} $IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(s1: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL', s2: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'): bool {
    $IsEqual'$1_string_String'(s1->$car, s2->$car)
    && $IsEqual'$1_string_utils_NIL'(s1->$cdr, s2->$cdr)}

// struct string_utils::NIL at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:56:5+35
datatype $1_string_utils_NIL {
    $1_string_utils_NIL($dummy_field: bool)
}
function {:inline} $Update'$1_string_utils_NIL'_dummy_field(s: $1_string_utils_NIL, x: bool): $1_string_utils_NIL {
    $1_string_utils_NIL(x)
}
function $IsValid'$1_string_utils_NIL'(s: $1_string_utils_NIL): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_string_utils_NIL'(s1: $1_string_utils_NIL, s2: $1_string_utils_NIL): bool {
    s1 == s2
}

// fun string_utils::to_string<u64> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:17:5+98
procedure {:inline 1} $1_string_utils_to_string'u64'(_$t0: int) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: bool;
    var $t4: bool;
    var $t5: $1_string_String;
    var $t0: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:17:5+1
    assume {:print "$at(72,930,931)"} true;
    assume {:print "$track_local(53,9,0):", $t0} $t0 == $t0;

    // $t1 := false at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:18:26+5
    assume {:print "$at(72,996,1001)"} true;
    $t1 := false;
    assume $IsValid'bool'($t1);

    // $t2 := false at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:18:33+5
    $t2 := false;
    assume $IsValid'bool'($t2);

    // $t3 := true at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:18:40+4
    $t3 := true;
    assume $IsValid'bool'($t3);

    // $t4 := false at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:18:46+5
    $t4 := false;
    assume $IsValid'bool'($t4);

    // $t5 := opaque begin: string_utils::native_format<#0>($t0, $t1, $t2, $t3, $t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:18:9+43

    // assume WellFormed($t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:18:9+43
    assume $IsValid'$1_string_String'($t5);

    // assume Eq<string::String>($t5, string_utils::spec_native_format<#0>($t0, $t1, $t2, $t3, $t4)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:18:9+43
    assume $IsEqual'$1_string_String'($t5, $1_string_utils_spec_native_format'u64'($t0, $t1, $t2, $t3, $t4));

    // $t5 := opaque end: string_utils::native_format<#0>($t0, $t1, $t2, $t3, $t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:18:9+43

    // trace_return[0]($t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:18:9+43
    assume {:print "$track_return(53,9,0):", $t5} $t5 == $t5;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:19:5+1
    assume {:print "$at(72,1027,1028)"} true;
L1:

    // return $t5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:19:5+1
    assume {:print "$at(72,1027,1028)"} true;
    $ret0 := $t5;
    return;

}

// fun string_utils::cons<string::String, string_utils::Cons<string::String, string_utils::NIL>> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:5+64
procedure {:inline 1} $1_string_utils_cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(_$t0: $1_string_String, _$t1: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL') returns ($ret0: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'')
{
    // declare local variables
    var $t2: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'';
    var $t0: $1_string_String;
    var $t1: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''': $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'';
    var $temp_0'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'': $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL';
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[car]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:5+1
    assume {:print "$at(72,2534,2535)"} true;
    assume {:print "$track_local(53,0,0):", $t0} $t0 == $t0;

    // trace_local[cdr]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:5+1
    assume {:print "$track_local(53,0,1):", $t1} $t1 == $t1;

    // $t2 := pack string_utils::Cons<#0, #1>($t0, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:50+17
    $t2 := $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''($t0, $t1);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:50+17
    assume {:print "$track_return(53,0,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:68+1
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:68+1
    assume {:print "$at(72,2597,2598)"} true;
    $ret0 := $t2;
    return;

}

// fun string_utils::cons<string::String, string_utils::NIL> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:5+64
procedure {:inline 1} $1_string_utils_cons'$1_string_String_$1_string_utils_NIL'(_$t0: $1_string_String, _$t1: $1_string_utils_NIL) returns ($ret0: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL')
{
    // declare local variables
    var $t2: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL';
    var $t0: $1_string_String;
    var $t1: $1_string_utils_NIL;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'': $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL';
    var $temp_0'$1_string_utils_NIL': $1_string_utils_NIL;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[car]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:5+1
    assume {:print "$at(72,2534,2535)"} true;
    assume {:print "$track_local(53,0,0):", $t0} $t0 == $t0;

    // trace_local[cdr]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:5+1
    assume {:print "$track_local(53,0,1):", $t1} $t1 == $t1;

    // $t2 := pack string_utils::Cons<#0, #1>($t0, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:50+17
    $t2 := $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'($t0, $t1);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:50+17
    assume {:print "$track_return(53,0,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:68+1
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:59:68+1
    assume {:print "$at(72,2597,2598)"} true;
    $ret0 := $t2;
    return;

}

// fun string_utils::format2<string::String, string::String> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:40:5+132
procedure {:inline 1} $1_string_utils_format2'$1_string_String_$1_string_String'(_$t0: Vec (int), _$t1: $1_string_String, _$t2: $1_string_String) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t3: $1_string_String;
    var $t4: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'';
    var $t5: Vec (int);
    var $t6: $1_string_String;
    var $t7: $1_string_String;
    var $t8: $1_string_utils_NIL;
    var $t9: int;
    var $t10: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL';
    var $t11: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'';
    var $t12: $1_string_String;
    var $t13: bool;
    var $t0: Vec (int);
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[fmt]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:40:5+1
    assume {:print "$at(72,1804,1805)"} true;
    assume {:print "$track_local(53,3,0):", $t0} $t0 == $t0;

    // trace_local[a]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:40:5+1
    assume {:print "$track_local(53,3,1):", $t1} $t1 == $t1;

    // trace_local[b]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:40:5+1
    assume {:print "$track_local(53,3,2):", $t2} $t2 == $t2;

    // trace_local[b#277]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:66:37+1
    assume {:print "$at(72,2792,2793)"} true;
    assume {:print "$track_local(53,3,7):", $t2} $t2 == $t2;

    // trace_local[a#278]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:65:26+1
    assume {:print "$at(72,2715,2716)"} true;
    assume {:print "$track_local(53,3,6):", $t2} $t2 == $t2;

    // $t8 := string_utils::nil() on_abort goto L2 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:65:58+5
    call $t8 := $1_string_utils_nil();
    if ($abort_flag) {
        assume {:print "$at(72,2747,2752)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(53,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t10 := string_utils::cons<#1, string_utils::NIL>($t2, $t8) on_abort goto L2 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:65:50+14
    call $t10 := $1_string_utils_cons'$1_string_String_$1_string_utils_NIL'($t2, $t8);
    if ($abort_flag) {
        assume {:print "$at(72,2739,2753)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(53,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t11 := string_utils::cons<#0, string_utils::Cons<#1, string_utils::NIL>>($t1, $t10) on_abort goto L2 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:66:71+17
    assume {:print "$at(72,2826,2843)"} true;
    call $t11 := $1_string_utils_cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''($t1, $t10);
    if ($abort_flag) {
        assume {:print "$at(72,2826,2843)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(53,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t12 := opaque begin: string_utils::native_format_list<string_utils::Cons<#0, string_utils::Cons<#1, string_utils::NIL>>>($t0, $t11) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:41:9+37
    assume {:print "$at(72,1893,1930)"} true;

    // assume Identical($t13, string_utils::args_mismatch_or_invalid_format<string_utils::Cons<#0, string_utils::Cons<#1, string_utils::NIL>>>($t0, $t11)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:41:9+37
    assume ($t13 == $1_string_utils_args_mismatch_or_invalid_format'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''($t0, $t11));

    // if ($t13) goto L4 else goto L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:41:9+37
    if ($t13) { goto L4; } else { goto L3; }

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:41:9+37
L4:

    // trace_abort($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:41:9+37
    assume {:print "$at(72,1893,1930)"} true;
    assume {:print "$track_abort(53,3):", $t9} $t9 == $t9;

    // goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:41:9+37
    goto L2;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:41:9+37
L3:

    // assume WellFormed($t12) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:41:9+37
    assume {:print "$at(72,1893,1930)"} true;
    assume $IsValid'$1_string_String'($t12);

    // assume Eq<string::String>($t12, string_utils::spec_native_format_list<string_utils::Cons<#0, string_utils::Cons<#1, string_utils::NIL>>>($t0, $t11)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:41:9+37
    assume $IsEqual'$1_string_String'($t12, $1_string_utils_spec_native_format_list'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''($t0, $t11));

    // $t12 := opaque end: string_utils::native_format_list<string_utils::Cons<#0, string_utils::Cons<#1, string_utils::NIL>>>($t0, $t11) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:41:9+37

    // trace_return[0]($t12) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:41:9+37
    assume {:print "$track_return(53,3,0):", $t12} $t12 == $t12;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:42:5+1
    assume {:print "$at(72,1935,1936)"} true;
L1:

    // return $t12 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:42:5+1
    assume {:print "$at(72,1935,1936)"} true;
    $ret0 := $t12;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:42:5+1
L2:

    // abort($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:42:5+1
    assume {:print "$at(72,1935,1936)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun string_utils::nil [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:62:5+25
procedure {:inline 1} $1_string_utils_nil() returns ($ret0: $1_string_utils_NIL)
{
    // declare local variables
    var $t0: bool;
    var $t1: $1_string_utils_NIL;
    var $temp_0'$1_string_utils_NIL': $1_string_utils_NIL;

    // bytecode translation starts here
    // $t0 := false at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:62:22+6
    assume {:print "$at(72,2648,2654)"} true;
    $t0 := false;
    assume $IsValid'bool'($t0);

    // $t1 := pack string_utils::NIL($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:62:22+6
    $t1 := $1_string_utils_NIL($t0);

    // trace_return[0]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:62:22+6
    assume {:print "$track_return(53,8,0):", $t1} $t1 == $t1;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:62:29+1
L1:

    // return $t1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/string_utils.move:62:29+1
    assume {:print "$at(72,2655,2656)"} true;
    $ret0 := $t1;
    return;

}

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:7:10+50
function  $1_object_spec_exists_at'$4_collection_Collection'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$4_collection_Collection'(object);
$IsValid'bool'($$res)));

// spec fun at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:285:10+75
function  $1_object_spec_create_object_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_object_spec_create_object_address(source, seed);
$IsValid'address'($$res)));

// struct object::ConstructorRef at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:126:5+167
datatype $1_object_ConstructorRef {
    $1_object_ConstructorRef($self: int, $can_delete: bool)
}
function {:inline} $Update'$1_object_ConstructorRef'_self(s: $1_object_ConstructorRef, x: int): $1_object_ConstructorRef {
    $1_object_ConstructorRef(x, s->$can_delete)
}
function {:inline} $Update'$1_object_ConstructorRef'_can_delete(s: $1_object_ConstructorRef, x: bool): $1_object_ConstructorRef {
    $1_object_ConstructorRef(s->$self, x)
}
function $IsValid'$1_object_ConstructorRef'(s: $1_object_ConstructorRef): bool {
    $IsValid'address'(s->$self)
      && $IsValid'bool'(s->$can_delete)
}
function {:inline} $IsEqual'$1_object_ConstructorRef'(s1: $1_object_ConstructorRef, s2: $1_object_ConstructorRef): bool {
    s1 == s2
}

// struct object::Object<collection::Collection> at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:121:5+78
datatype $1_object_Object'$4_collection_Collection' {
    $1_object_Object'$4_collection_Collection'($inner: int)
}
function {:inline} $Update'$1_object_Object'$4_collection_Collection''_inner(s: $1_object_Object'$4_collection_Collection', x: int): $1_object_Object'$4_collection_Collection' {
    $1_object_Object'$4_collection_Collection'(x)
}
function $IsValid'$1_object_Object'$4_collection_Collection''(s: $1_object_Object'$4_collection_Collection'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$4_collection_Collection''(s1: $1_object_Object'$4_collection_Collection', s2: $1_object_Object'$4_collection_Collection'): bool {
    s1 == s2
}

// struct object::ObjectCore at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:94:5+551
datatype $1_object_ObjectCore {
    $1_object_ObjectCore($guid_creation_num: int, $owner: int, $allow_ungated_transfer: bool, $transfer_events: $1_event_EventHandle'$1_object_TransferEvent')
}
function {:inline} $Update'$1_object_ObjectCore'_guid_creation_num(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(x, s->$owner, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_owner(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, x, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_allow_ungated_transfer(s: $1_object_ObjectCore, x: bool): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, x, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_transfer_events(s: $1_object_ObjectCore, x: $1_event_EventHandle'$1_object_TransferEvent'): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, s->$allow_ungated_transfer, x)
}
function $IsValid'$1_object_ObjectCore'(s: $1_object_ObjectCore): bool {
    $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'address'(s->$owner)
      && $IsValid'bool'(s->$allow_ungated_transfer)
      && $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s->$transfer_events)
}
function {:inline} $IsEqual'$1_object_ObjectCore'(s1: $1_object_ObjectCore, s2: $1_object_ObjectCore): bool {
    s1 == s2
}
var $1_object_ObjectCore_$memory: $Memory $1_object_ObjectCore;

// struct object::TransferEvent at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:160:5+113
datatype $1_object_TransferEvent {
    $1_object_TransferEvent($object: int, $from: int, $to: int)
}
function {:inline} $Update'$1_object_TransferEvent'_object(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(x, s->$from, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_from(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, x, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_to(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, s->$from, x)
}
function $IsValid'$1_object_TransferEvent'(s: $1_object_TransferEvent): bool {
    $IsValid'address'(s->$object)
      && $IsValid'address'(s->$from)
      && $IsValid'address'(s->$to)
}
function {:inline} $IsEqual'$1_object_TransferEvent'(s1: $1_object_TransferEvent, s2: $1_object_TransferEvent): bool {
    s1 == s2
}

// struct object::TransferRef at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:143:5+65
datatype $1_object_TransferRef {
    $1_object_TransferRef($self: int)
}
function {:inline} $Update'$1_object_TransferRef'_self(s: $1_object_TransferRef, x: int): $1_object_TransferRef {
    $1_object_TransferRef(x)
}
function $IsValid'$1_object_TransferRef'(s: $1_object_TransferRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_TransferRef'(s1: $1_object_TransferRef, s2: $1_object_TransferRef): bool {
    s1 == s2
}

// fun object::new_event_handle<collection::BurnEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:356:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_collection_BurnEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_collection_BurnEvent')
{
    // declare local variables
    var $t1: $1_object_ObjectCore;
    var $t2: $1_object_ObjectCore;
    var $t3: $1_guid_GUID;
    var $t4: int;
    var $t5: $1_event_EventHandle'$4_collection_BurnEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_collection_BurnEvent'': $1_event_EventHandle'$4_collection_BurnEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, global<object::ObjectCore>(signer::$address_of($t0))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:167:9+65
    assume {:print "$at(133,6354,6419)"} true;
    assume ($t1 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // trace_local[object]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:356:5+1
    assume {:print "$at(132,15724,15725)"} true;
    assume {:print "$track_local(55,33,0):", $t0} $t0 == $t0;

    // assume Identical($t2, global<object::ObjectCore>(signer::$address_of($t0))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:158:9+65
    assume {:print "$at(133,6018,6083)"} true;
    assume ($t2 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // $t3 := object::create_guid($t0) on_abort goto L2 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:33+19
    assume {:print "$at(132,15878,15897)"} true;
    call $t3 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(132,15878,15897)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,33):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := event::new_event_handle<#0>($t3) on_abort goto L2 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+44
    call $t5 := $1_event_new_event_handle'$4_collection_BurnEvent'($t3);
    if ($abort_flag) {
        assume {:print "$at(132,15854,15898)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,33):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+44
    assume {:print "$track_return(55,33,0):", $t5} $t5 == $t5;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
    assume {:print "$at(132,15903,15904)"} true;
L1:

    // return $t5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
    assume {:print "$at(132,15903,15904)"} true;
    $ret0 := $t5;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
L2:

    // abort($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
    assume {:print "$at(132,15903,15904)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::new_event_handle<collection::MintEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:356:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_collection_MintEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_collection_MintEvent')
{
    // declare local variables
    var $t1: $1_object_ObjectCore;
    var $t2: $1_object_ObjectCore;
    var $t3: $1_guid_GUID;
    var $t4: int;
    var $t5: $1_event_EventHandle'$4_collection_MintEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_collection_MintEvent'': $1_event_EventHandle'$4_collection_MintEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, global<object::ObjectCore>(signer::$address_of($t0))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:167:9+65
    assume {:print "$at(133,6354,6419)"} true;
    assume ($t1 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // trace_local[object]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:356:5+1
    assume {:print "$at(132,15724,15725)"} true;
    assume {:print "$track_local(55,33,0):", $t0} $t0 == $t0;

    // assume Identical($t2, global<object::ObjectCore>(signer::$address_of($t0))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:158:9+65
    assume {:print "$at(133,6018,6083)"} true;
    assume ($t2 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // $t3 := object::create_guid($t0) on_abort goto L2 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:33+19
    assume {:print "$at(132,15878,15897)"} true;
    call $t3 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(132,15878,15897)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,33):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := event::new_event_handle<#0>($t3) on_abort goto L2 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+44
    call $t5 := $1_event_new_event_handle'$4_collection_MintEvent'($t3);
    if ($abort_flag) {
        assume {:print "$at(132,15854,15898)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,33):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+44
    assume {:print "$track_return(55,33,0):", $t5} $t5 == $t5;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
    assume {:print "$at(132,15903,15904)"} true;
L1:

    // return $t5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
    assume {:print "$at(132,15903,15904)"} true;
    $ret0 := $t5;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
L2:

    // abort($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
    assume {:print "$at(132,15903,15904)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::new_event_handle<collection::MutationEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:356:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_collection_MutationEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_collection_MutationEvent')
{
    // declare local variables
    var $t1: $1_object_ObjectCore;
    var $t2: $1_object_ObjectCore;
    var $t3: $1_guid_GUID;
    var $t4: int;
    var $t5: $1_event_EventHandle'$4_collection_MutationEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_collection_MutationEvent'': $1_event_EventHandle'$4_collection_MutationEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, global<object::ObjectCore>(signer::$address_of($t0))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:167:9+65
    assume {:print "$at(133,6354,6419)"} true;
    assume ($t1 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // trace_local[object]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:356:5+1
    assume {:print "$at(132,15724,15725)"} true;
    assume {:print "$track_local(55,33,0):", $t0} $t0 == $t0;

    // assume Identical($t2, global<object::ObjectCore>(signer::$address_of($t0))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:158:9+65
    assume {:print "$at(133,6018,6083)"} true;
    assume ($t2 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // $t3 := object::create_guid($t0) on_abort goto L2 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:33+19
    assume {:print "$at(132,15878,15897)"} true;
    call $t3 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(132,15878,15897)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,33):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := event::new_event_handle<#0>($t3) on_abort goto L2 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+44
    call $t5 := $1_event_new_event_handle'$4_collection_MutationEvent'($t3);
    if ($abort_flag) {
        assume {:print "$at(132,15854,15898)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,33):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+44
    assume {:print "$track_return(55,33,0):", $t5} $t5 == $t5;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
    assume {:print "$at(132,15903,15904)"} true;
L1:

    // return $t5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
    assume {:print "$at(132,15903,15904)"} true;
    $ret0 := $t5;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
L2:

    // abort($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
    assume {:print "$at(132,15903,15904)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::new_event_handle<token::MutationEvent> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:356:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_token_MutationEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_token_MutationEvent')
{
    // declare local variables
    var $t1: $1_object_ObjectCore;
    var $t2: $1_object_ObjectCore;
    var $t3: $1_guid_GUID;
    var $t4: int;
    var $t5: $1_event_EventHandle'$4_token_MutationEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_token_MutationEvent'': $1_event_EventHandle'$4_token_MutationEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, global<object::ObjectCore>(signer::$address_of($t0))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:167:9+65
    assume {:print "$at(133,6354,6419)"} true;
    assume ($t1 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // trace_local[object]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:356:5+1
    assume {:print "$at(132,15724,15725)"} true;
    assume {:print "$track_local(55,33,0):", $t0} $t0 == $t0;

    // assume Identical($t2, global<object::ObjectCore>(signer::$address_of($t0))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:158:9+65
    assume {:print "$at(133,6018,6083)"} true;
    assume ($t2 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // $t3 := object::create_guid($t0) on_abort goto L2 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:33+19
    assume {:print "$at(132,15878,15897)"} true;
    call $t3 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(132,15878,15897)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,33):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := event::new_event_handle<#0>($t3) on_abort goto L2 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+44
    call $t5 := $1_event_new_event_handle'$4_token_MutationEvent'($t3);
    if ($abort_flag) {
        assume {:print "$at(132,15854,15898)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,33):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:9+44
    assume {:print "$track_return(55,33,0):", $t5} $t5 == $t5;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
    assume {:print "$at(132,15903,15904)"} true;
L1:

    // return $t5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
    assume {:print "$at(132,15903,15904)"} true;
    $ret0 := $t5;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
L2:

    // abort($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:360:5+1
    assume {:print "$at(132,15903,15904)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::create_guid [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:349:5+252
procedure {:inline 1} $1_object_create_guid(_$t0: $signer) returns ($ret0: $1_guid_GUID)
{
    // declare local variables
    var $t1: int;
    var $t2: $Mutation ($1_object_ObjectCore);
    var $t3: $1_object_ObjectCore;
    var $t4: int;
    var $t5: int;
    var $t6: $Mutation ($1_object_ObjectCore);
    var $t7: $Mutation (int);
    var $t8: $1_guid_GUID;
    var $t0: $signer;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, global<object::ObjectCore>(signer::$address_of($t0))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:158:9+65
    assume {:print "$at(133,6018,6083)"} true;
    assume ($t3 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // trace_local[object]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:349:5+1
    assume {:print "$at(132,15429,15430)"} true;
    assume {:print "$track_local(55,7,0):", $t0} $t0 == $t0;

    // $t4 := signer::address_of($t0) on_abort goto L2 with $t5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:350:20+26
    assume {:print "$at(132,15522,15548)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(132,15522,15548)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,7):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[addr]($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:350:13+4
    assume {:print "$track_local(55,7,1):", $t4} $t4 == $t4;

    // $t6 := borrow_global<object::ObjectCore>($t4) on_abort goto L2 with $t5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:351:27+17
    assume {:print "$at(132,15576,15593)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $Mutation($Global($t4), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t4));
    }
    if ($abort_flag) {
        assume {:print "$at(132,15576,15593)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,7):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[object_data]($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:351:13+11
    $temp_0'$1_object_ObjectCore' := $Dereference($t6);
    assume {:print "$track_local(55,7,2):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t7 := borrow_field<object::ObjectCore>.guid_creation_num($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:352:28+34
    assume {:print "$at(132,15640,15674)"} true;
    $t7 := $ChildMutation($t6, 0, $Dereference($t6)->$guid_creation_num);

    // $t8 := guid::create($t4, $t7) on_abort goto L2 with $t5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:352:9+54
    call $t8,$t7 := $1_guid_create($t4, $t7);
    if ($abort_flag) {
        assume {:print "$at(132,15621,15675)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,7):", $t5} $t5 == $t5;
        goto L2;
    }

    // write_back[Reference($t6).guid_creation_num (u64)]($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:352:9+54
    $t6 := $UpdateMutation($t6, $Update'$1_object_ObjectCore'_guid_creation_num($Dereference($t6), $Dereference($t7)));

    // write_back[object::ObjectCore@]($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:352:9+54
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t6),
        $Dereference($t6));

    // trace_return[0]($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:352:9+54
    assume {:print "$track_return(55,7,0):", $t8} $t8 == $t8;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:353:5+1
    assume {:print "$at(132,15680,15681)"} true;
L1:

    // return $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:353:5+1
    assume {:print "$at(132,15680,15681)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:353:5+1
L2:

    // abort($t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:353:5+1
    assume {:print "$at(132,15680,15681)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::address_from_constructor_ref [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:332:5+95
procedure {:inline 1} $1_object_address_from_constructor_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:332:5+1
    assume {:print "$at(132,14859,14860)"} true;
    assume {:print "$track_local(55,0,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:333:9+8
    assume {:print "$at(132,14940,14948)"} true;
    $t1 := $t0->$self;

    // trace_return[0]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:333:9+8
    assume {:print "$track_return(55,0,0):", $t1} $t1 == $t1;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:334:5+1
    assume {:print "$at(132,14953,14954)"} true;
L1:

    // return $t1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:334:5+1
    assume {:print "$at(132,14953,14954)"} true;
    $ret0 := $t1;
    return;

}

// fun object::address_to_object<collection::Collection> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:172:5+278
procedure {:inline 1} $1_object_address_to_object'$4_collection_Collection'(_$t0: int) returns ($ret0: $1_object_Object'$4_collection_Collection')
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_Object'$4_collection_Collection';
    var $t0: int;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:172:5+1
    assume {:print "$at(132,7475,7476)"} true;
    assume {:print "$track_local(55,3,0):", $t0} $t0 == $t0;

    // $t1 := exists<object::ObjectCore>($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:173:17+6
    assume {:print "$at(132,7558,7564)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:173:9+77
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:173:9+77
L1:

    // goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:173:9+77
    assume {:print "$at(132,7550,7627)"} true;
    goto L2;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:173:62+22
L0:

    // $t2 := 2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:173:62+22
    assume {:print "$at(132,7603,7625)"} true;
    $t2 := 2;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L7 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:173:45+40
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(132,7586,7626)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:173:9+77
    assume {:print "$at(132,7550,7627)"} true;
    assume {:print "$track_abort(55,3):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:173:9+77
    $t4 := $t3;

    // goto L7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:173:9+77
    goto L7;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:30+6
    assume {:print "$at(132,7658,7664)"} true;
L2:

    // $t5 := opaque begin: object::exists_at<#0>($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:17+20
    assume {:print "$at(132,7645,7665)"} true;

    // assume WellFormed($t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:17+20
    assume $IsValid'bool'($t5);

    // assume Eq<bool>($t5, object::spec_exists_at<#0>($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:17+20
    assume $IsEqual'bool'($t5, $1_object_spec_exists_at'$4_collection_Collection'($t0));

    // $t5 := opaque end: object::exists_at<#0>($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:17+20

    // if ($t5) goto L4 else goto L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:9+73
    if ($t5) { goto L4; } else { goto L3; }

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:9+73
L4:

    // goto L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:9+73
    assume {:print "$at(132,7637,7710)"} true;
    goto L5;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:56+24
L3:

    // $t6 := 7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:56+24
    assume {:print "$at(132,7684,7708)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L7 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(132,7667,7709)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:9+73
    assume {:print "$at(132,7637,7710)"} true;
    assume {:print "$track_abort(55,3):", $t7} $t7 == $t7;

    // $t4 := move($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:9+73
    $t4 := $t7;

    // goto L7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:174:9+73
    goto L7;

    // label L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:175:28+6
    assume {:print "$at(132,7739,7745)"} true;
L5:

    // $t8 := pack object::Object<#0>($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:175:9+27
    assume {:print "$at(132,7720,7747)"} true;
    $t8 := $1_object_Object'$4_collection_Collection'($t0);

    // trace_return[0]($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:175:9+27
    assume {:print "$track_return(55,3,0):", $t8} $t8 == $t8;

    // label L6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:176:5+1
    assume {:print "$at(132,7752,7753)"} true;
L6:

    // return $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:176:5+1
    assume {:print "$at(132,7752,7753)"} true;
    $ret0 := $t8;
    return;

    // label L7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:176:5+1
L7:

    // abort($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:176:5+1
    assume {:print "$at(132,7752,7753)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::create_named_object [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:221:5+284
procedure {:inline 1} $1_object_create_named_object(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: $1_object_ConstructorRef;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:68:9+50
    assume {:print "$at(133,2456,2506)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, object::spec_create_object_address($t4, $t1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:69:9+65
    assume {:print "$at(133,2515,2580)"} true;
    assume ($t5 == $1_object_spec_create_object_address($t4, $t1));

    // trace_local[creator]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:221:5+1
    assume {:print "$at(132,9702,9703)"} true;
    assume {:print "$track_local(55,9,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:221:5+1
    assume {:print "$track_local(55,9,1):", $t1} $t1 == $t1;

    // $t6 := signer::address_of($t0) on_abort goto L2 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:222:31+27
    assume {:print "$at(132,9817,9844)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(132,9817,9844)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(55,9):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[creator_address]($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:222:13+15
    assume {:print "$track_local(55,9,2):", $t6} $t6 == $t6;

    // $t8 := opaque begin: object::create_object_address($t6, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:223:24+45
    assume {:print "$at(132,9869,9914)"} true;

    // assume WellFormed($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:223:24+45
    assume $IsValid'address'($t8);

    // assume Eq<address>($t8, object::spec_create_object_address($t6, $t1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:223:24+45
    assume $IsEqual'address'($t8, $1_object_spec_create_object_address($t6, $t1));

    // $t8 := opaque end: object::create_object_address($t6, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:223:24+45

    // trace_local[obj_addr]($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:223:13+8
    assume {:print "$track_local(55,9,3):", $t8} $t8 == $t8;

    // $t9 := false at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:224:59+5
    assume {:print "$at(132,9974,9979)"} true;
    $t9 := false;
    assume $IsValid'bool'($t9);

    // $t10 := object::create_object_internal($t6, $t8, $t9) on_abort goto L2 with $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:224:9+56
    call $t10 := $1_object_create_object_internal($t6, $t8, $t9);
    if ($abort_flag) {
        assume {:print "$at(132,9924,9980)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(55,9):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:224:9+56
    assume {:print "$track_return(55,9,0):", $t10} $t10 == $t10;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:225:5+1
    assume {:print "$at(132,9985,9986)"} true;
L1:

    // return $t10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:225:5+1
    assume {:print "$at(132,9985,9986)"} true;
    $ret0 := $t10;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:225:5+1
L2:

    // abort($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:225:5+1
    assume {:print "$at(132,9985,9986)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun object::create_object_internal [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:280:5+766
procedure {:inline 1} $1_object_create_object_internal(_$t0: int, _$t1: int, _$t2: bool) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t3: int;
    var $t4: $signer;
    var $t5: $1_guid_GUID;
    var $t6: bool;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $signer;
    var $t12: int;
    var $t13: $Mutation (int);
    var $t14: $1_guid_GUID;
    var $t15: int;
    var $t16: bool;
    var $t17: $1_event_EventHandle'$1_object_TransferEvent';
    var $t18: $1_object_ObjectCore;
    var $t19: $1_object_ConstructorRef;
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[creator_address]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:280:5+1
    assume {:print "$at(132,12929,12930)"} true;
    assume {:print "$track_local(55,15,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:280:5+1
    assume {:print "$track_local(55,15,1):", $t1} $t1 == $t1;

    // trace_local[can_delete]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:280:5+1
    assume {:print "$track_local(55,15,2):", $t2} $t2 == $t2;

    // $t6 := exists<object::ObjectCore>($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:285:18+6
    assume {:print "$at(132,13083,13089)"} true;
    $t6 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // $t7 := !($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:285:17+1
    call $t7 := $Not($t6);

    // if ($t7) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:285:9+75
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:285:9+75
L1:

    // goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:285:9+75
    assume {:print "$at(132,13074,13149)"} true;
    goto L2;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:285:68+14
L0:

    // $t8 := 1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:285:68+14
    assume {:print "$at(132,13133,13147)"} true;
    $t8 := 1;
    assume $IsValid'u64'($t8);

    // $t9 := error::already_exists($t8) on_abort goto L4 with $t10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:285:46+37
    call $t9 := $1_error_already_exists($t8);
    if ($abort_flag) {
        assume {:print "$at(132,13111,13148)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(55,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // trace_abort($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:285:9+75
    assume {:print "$at(132,13074,13149)"} true;
    assume {:print "$track_abort(55,15):", $t9} $t9 == $t9;

    // $t10 := move($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:285:9+75
    $t10 := $t9;

    // goto L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:285:9+75
    goto L4;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:287:43+6
    assume {:print "$at(132,13194,13200)"} true;
L2:

    // $t11 := opaque begin: create_signer::create_signer($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:287:29+21
    assume {:print "$at(132,13180,13201)"} true;

    // assume WellFormed($t11) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:287:29+21
    assume $IsValid'signer'($t11) && $1_signer_is_txn_signer($t11) && $1_signer_is_txn_signer_addr($t11->$addr);

    // assume Eq<address>(signer::$address_of($t11), $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:287:29+21
    assume $IsEqual'address'($1_signer_$address_of($t11), $t1);

    // $t11 := opaque end: create_signer::create_signer($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:287:29+21

    // trace_local[object_signer]($t11) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:287:13+13
    assume {:print "$track_local(55,15,4):", $t11} $t11 == $t11;

    // $t12 := 1125899906842624 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:288:33+22
    assume {:print "$at(132,13235,13257)"} true;
    $t12 := 1125899906842624;
    assume $IsValid'u64'($t12);

    // $t3 := $t12 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:288:13+17
    $t3 := $t12;

    // trace_local[guid_creation_num]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:288:13+17
    assume {:print "$track_local(55,15,3):", $t3} $t3 == $t3;

    // $t13 := borrow_local($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:289:57+22
    assume {:print "$at(132,13315,13337)"} true;
    $t13 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t14 := guid::create($t1, $t13) on_abort goto L4 with $t10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:289:36+44
    call $t14,$t13 := $1_guid_create($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(132,13294,13338)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(55,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t13) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:289:36+44
    $t3 := $Dereference($t13);

    // trace_local[guid_creation_num]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:289:36+44
    assume {:print "$track_local(55,15,3):", $t3} $t3 == $t3;

    // trace_local[transfer_events_guid]($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:289:13+20
    assume {:print "$track_local(55,15,5):", $t14} $t14 == $t14;

    // $t15 := move($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:294:17+17
    assume {:print "$at(132,13427,13444)"} true;
    $t15 := $t3;

    // $t16 := true at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:296:41+4
    assume {:print "$at(132,13526,13530)"} true;
    $t16 := true;
    assume $IsValid'bool'($t16);

    // $t17 := event::new_event_handle<object::TransferEvent>($t14) on_abort goto L4 with $t10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:297:34+45
    assume {:print "$at(132,13565,13610)"} true;
    call $t17 := $1_event_new_event_handle'$1_object_TransferEvent'($t14);
    if ($abort_flag) {
        assume {:print "$at(132,13565,13610)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(55,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // $t18 := pack object::ObjectCore($t15, $t0, $t16, $t17) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:293:13+227
    assume {:print "$at(132,13398,13625)"} true;
    $t18 := $1_object_ObjectCore($t15, $t0, $t16, $t17);

    // move_to<object::ObjectCore>($t18, $t11) on_abort goto L4 with $t10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:291:9+7
    assume {:print "$at(132,13349,13356)"} true;
    if ($ResourceExists($1_object_ObjectCore_$memory, $t11->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $t11->$addr, $t18);
    }
    if ($abort_flag) {
        assume {:print "$at(132,13349,13356)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(55,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // $t19 := pack object::ConstructorRef($t1, $t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:300:9+43
    assume {:print "$at(132,13646,13689)"} true;
    $t19 := $1_object_ConstructorRef($t1, $t2);

    // trace_return[0]($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:300:9+43
    assume {:print "$track_return(55,15,0):", $t19} $t19 == $t19;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:301:5+1
    assume {:print "$at(132,13694,13695)"} true;
L3:

    // return $t19 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:301:5+1
    assume {:print "$at(132,13694,13695)"} true;
    $ret0 := $t19;
    return;

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:301:5+1
L4:

    // abort($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:301:5+1
    assume {:print "$at(132,13694,13695)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun object::disable_ungated_transfer [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:401:5+191
procedure {:inline 1} $1_object_disable_ungated_transfer(_$t0: $1_object_TransferRef) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_object_ObjectCore);
    var $t2: int;
    var $t3: $Mutation ($1_object_ObjectCore);
    var $t4: int;
    var $t5: bool;
    var $t6: $Mutation (bool);
    var $t0: $1_object_TransferRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:401:5+1
    assume {:print "$at(132,17109,17110)"} true;
    assume {:print "$track_local(55,20,0):", $t0} $t0 == $t0;

    // $t2 := get_field<object::TransferRef>.self($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:402:52+8
    assume {:print "$at(132,17237,17245)"} true;
    $t2 := $t0->$self;

    // $t3 := borrow_global<object::ObjectCore>($t2) on_abort goto L2 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:402:22+17
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $Mutation($Global($t2), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t2));
    }
    if ($abort_flag) {
        assume {:print "$at(132,17207,17224)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,20):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[object]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:402:13+6
    $temp_0'$1_object_ObjectCore' := $Dereference($t3);
    assume {:print "$track_local(55,20,1):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t5 := false at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:403:41+5
    assume {:print "$at(132,17288,17293)"} true;
    $t5 := false;
    assume $IsValid'bool'($t5);

    // $t6 := borrow_field<object::ObjectCore>.allow_ungated_transfer($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:403:9+29
    $t6 := $ChildMutation($t3, 2, $Dereference($t3)->$allow_ungated_transfer);

    // write_ref($t6, $t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:403:9+37
    $t6 := $UpdateMutation($t6, $t5);

    // write_back[Reference($t3).allow_ungated_transfer (bool)]($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:403:9+37
    $t3 := $UpdateMutation($t3, $Update'$1_object_ObjectCore'_allow_ungated_transfer($Dereference($t3), $Dereference($t6)));

    // write_back[object::ObjectCore@]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:403:9+37
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t3),
        $Dereference($t3));

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:404:5+1
    assume {:print "$at(132,17299,17300)"} true;
L1:

    // return () at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:404:5+1
    assume {:print "$at(132,17299,17300)"} true;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:404:5+1
L2:

    // abort($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:404:5+1
    assume {:print "$at(132,17299,17300)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::generate_signer [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:327:5+96
procedure {:inline 1} $1_object_generate_signer(_$t0: $1_object_ConstructorRef) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: $signer;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:327:5+1
    assume {:print "$at(132,14697,14698)"} true;
    assume {:print "$track_local(55,27,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:328:23+8
    assume {:print "$at(132,14778,14786)"} true;
    $t1 := $t0->$self;

    // $t2 := opaque begin: create_signer::create_signer($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:328:9+23

    // assume WellFormed($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:328:9+23
    assume $IsValid'signer'($t2) && $1_signer_is_txn_signer($t2) && $1_signer_is_txn_signer_addr($t2->$addr);

    // assume Eq<address>(signer::$address_of($t2), $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:328:9+23
    assume $IsEqual'address'($1_signer_$address_of($t2), $t1);

    // $t2 := opaque end: create_signer::create_signer($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:328:9+23

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:328:9+23
    assume {:print "$track_return(55,27,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:329:5+1
    assume {:print "$at(132,14792,14793)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:329:5+1
    assume {:print "$at(132,14792,14793)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_transfer_ref [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:317:5+114
procedure {:inline 1} $1_object_generate_transfer_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_TransferRef)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_TransferRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:317:5+1
    assume {:print "$at(132,14301,14302)"} true;
    assume {:print "$track_local(55,29,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:318:29+8
    assume {:print "$at(132,14399,14407)"} true;
    $t1 := $t0->$self;

    // $t2 := pack object::TransferRef($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:318:9+30
    $t2 := $1_object_TransferRef($t1);

    // trace_return[0]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:318:9+30
    assume {:print "$track_return(55,29,0):", $t2} $t2 == $t2;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:319:5+1
    assume {:print "$at(132,14414,14415)"} true;
L1:

    // return $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:319:5+1
    assume {:print "$at(132,14414,14415)"} true;
    $ret0 := $t2;
    return;

}

// fun object::object_address<collection::Collection> [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:210:5+91
procedure {:inline 1} $1_object_object_address'$4_collection_Collection'(_$t0: $1_object_Object'$4_collection_Collection') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:210:5+1
    assume {:print "$at(132,9244,9245)"} true;
    assume {:print "$track_local(55,34,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:211:9+12
    assume {:print "$at(132,9317,9329)"} true;
    $t1 := $t0->$inner;

    // trace_return[0]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:211:9+12
    assume {:print "$track_return(55,34,0):", $t1} $t1 == $t1;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:212:5+1
    assume {:print "$at(132,9334,9335)"} true;
L1:

    // return $t1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:212:5+1
    assume {:print "$at(132,9334,9335)"} true;
    $ret0 := $t1;
    return;

}

// fun object::transfer_raw [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:463:5+633
procedure {:inline 1} $1_object_transfer_raw(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: $Mutation ($1_object_ObjectCore);
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation ($1_object_ObjectCore);
    var $t8: int;
    var $t9: bool;
    var $t10: $Mutation ($1_event_EventHandle'$1_object_TransferEvent');
    var $t11: int;
    var $t12: $1_object_TransferEvent;
    var $t13: $Mutation (int);
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:226:9+46
    assume {:print "$at(133,8288,8334)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // trace_local[owner]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:463:5+1
    assume {:print "$at(132,19457,19458)"} true;
    assume {:print "$track_local(55,41,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:463:5+1
    assume {:print "$track_local(55,41,1):", $t1} $t1 == $t1;

    // trace_local[to]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:463:5+1
    assume {:print "$track_local(55,41,2):", $t2} $t2 == $t2;

    // $t5 := signer::address_of($t0) on_abort goto L3 with $t6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:468:29+25
    assume {:print "$at(132,19608,19633)"} true;
    call $t5 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(132,19608,19633)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(55,41):", $t6} $t6 == $t6;
        goto L3;
    }

    // object::verify_ungated_and_descendant($t5, $t1) on_abort goto L3 with $t6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:469:9+52
    assume {:print "$at(132,19643,19695)"} true;
    call $1_object_verify_ungated_and_descendant($t5, $t1);
    if ($abort_flag) {
        assume {:print "$at(132,19643,19695)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(55,41):", $t6} $t6 == $t6;
        goto L3;
    }

    // $t7 := borrow_global<object::ObjectCore>($t1) on_abort goto L3 with $t6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:471:27+17
    assume {:print "$at(132,19724,19741)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(132,19724,19741)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(55,41):", $t6} $t6 == $t6;
        goto L3;
    }

    // trace_local[object_core]($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:471:13+11
    $temp_0'$1_object_ObjectCore' := $Dereference($t7);
    assume {:print "$track_local(55,41,3):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t8 := get_field<object::ObjectCore>.owner($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:472:13+17
    assume {:print "$at(132,19775,19792)"} true;
    $t8 := $Dereference($t7)->$owner;

    // $t9 := ==($t8, $t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:472:31+2
    $t9 := $IsEqual'address'($t8, $t2);

    // if ($t9) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:472:9+59
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:473:13+6
    assume {:print "$at(132,19814,19820)"} true;
L1:

    // destroy($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:473:13+6
    assume {:print "$at(132,19814,19820)"} true;

    // goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:473:13+6
    goto L2;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:477:18+11
    assume {:print "$at(132,19877,19888)"} true;
L0:

    // $t10 := borrow_field<object::ObjectCore>.transfer_events($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:477:13+32
    assume {:print "$at(132,19872,19904)"} true;
    $t10 := $ChildMutation($t7, 3, $Dereference($t7)->$transfer_events);

    // $t11 := get_field<object::ObjectCore>.owner($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:480:23+17
    assume {:print "$at(132,19988,20005)"} true;
    $t11 := $Dereference($t7)->$owner;

    // $t12 := pack object::TransferEvent($t1, $t11, $t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:478:13+122
    assume {:print "$at(132,19918,20040)"} true;
    $t12 := $1_object_TransferEvent($t1, $t11, $t2);

    // opaque begin: event::emit_event<object::TransferEvent>($t10, $t12) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:476:9+210
    assume {:print "$at(132,19841,20051)"} true;

    // opaque end: event::emit_event<object::TransferEvent>($t10, $t12) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:476:9+210

    // write_back[Reference($t7).transfer_events (event::EventHandle<object::TransferEvent>)]($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:476:9+210
    $t7 := $UpdateMutation($t7, $Update'$1_object_ObjectCore'_transfer_events($Dereference($t7), $Dereference($t10)));

    // $t13 := borrow_field<object::ObjectCore>.owner($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:484:9+17
    assume {:print "$at(132,20061,20078)"} true;
    $t13 := $ChildMutation($t7, 1, $Dereference($t7)->$owner);

    // write_ref($t13, $t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:484:9+22
    $t13 := $UpdateMutation($t13, $t2);

    // write_back[Reference($t7).owner (address)]($t13) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:484:9+22
    $t7 := $UpdateMutation($t7, $Update'$1_object_ObjectCore'_owner($Dereference($t7), $Dereference($t13)));

    // write_back[object::ObjectCore@]($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:484:9+22
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t7),
        $Dereference($t7));

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:485:5+1
    assume {:print "$at(132,20089,20090)"} true;
L2:

    // return () at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:485:5+1
    assume {:print "$at(132,20089,20090)"} true;
    return;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:485:5+1
L3:

    // abort($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:485:5+1
    assume {:print "$at(132,20089,20090)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun object::verify_ungated_and_descendant [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:499:5+1312
procedure {:inline 1} $1_object_verify_ungated_and_descendant(_$t0: int, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $1_object_ObjectCore;
    var $t5: $1_object_ObjectCore;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: $1_object_ObjectCore;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: bool;
    var $t20: $1_object_ObjectCore;
    var $t21: bool;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:499:5+1
    assume {:print "$at(132,20635,20636)"} true;
    assume {:print "$track_local(55,46,0):", $t0} $t0 == $t0;

    // trace_local[destination]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:499:5+1
    assume {:print "$track_local(55,46,1):", $t1} $t1 == $t1;

    // trace_local[current_address]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:500:13+15
    assume {:print "$at(132,20741,20756)"} true;
    assume {:print "$track_local(55,46,2):", $t1} $t1 == $t1;

    // $t6 := exists<object::ObjectCore>($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:502:13+6
    assume {:print "$at(132,20801,20807)"} true;
    $t6 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // if ($t6) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:501:9+121
    assume {:print "$at(132,20780,20901)"} true;
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:501:9+121
L1:

    // goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:501:9+121
    assume {:print "$at(132,20780,20901)"} true;
    goto L2;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:503:30+22
    assume {:print "$at(132,20867,20889)"} true;
L0:

    // $t7 := 2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:503:30+22
    assume {:print "$at(132,20867,20889)"} true;
    $t7 := 2;
    assume $IsValid'u64'($t7);

    // $t8 := error::not_found($t7) on_abort goto L21 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:503:13+40
    call $t8 := $1_error_not_found($t7);
    if ($abort_flag) {
        assume {:print "$at(132,20850,20890)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,46):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_abort($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:501:9+121
    assume {:print "$at(132,20780,20901)"} true;
    assume {:print "$track_abort(55,46):", $t8} $t8 == $t8;

    // $t9 := move($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:501:9+121
    $t9 := $t8;

    // goto L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:501:9+121
    goto L21;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:506:48+15
    assume {:print "$at(132,20951,20966)"} true;
L2:

    // $t10 := get_global<object::ObjectCore>($t1) on_abort goto L21 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:506:22+13
    assume {:print "$at(132,20925,20938)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($1_object_ObjectCore_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(132,20925,20938)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,46):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_local[object]($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:506:13+6
    assume {:print "$track_local(55,46,4):", $t10} $t10 == $t10;

    // $t11 := get_field<object::ObjectCore>.allow_ungated_transfer($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:508:13+29
    assume {:print "$at(132,20998,21027)"} true;
    $t11 := $t10->$allow_ungated_transfer;

    // if ($t11) goto L4 else goto L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:507:9+122
    assume {:print "$at(132,20977,21099)"} true;
    if ($t11) { goto L4; } else { goto L3; }

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:507:9+122
L4:

    // goto L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:507:9+122
    assume {:print "$at(132,20977,21099)"} true;
    goto L5;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:507:9+122
L3:

    // $t12 := 3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:509:38+21
    assume {:print "$at(132,21066,21087)"} true;
    $t12 := 3;
    assume $IsValid'u64'($t12);

    // $t13 := error::permission_denied($t12) on_abort goto L21 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:509:13+47
    call $t13 := $1_error_permission_denied($t12);
    if ($abort_flag) {
        assume {:print "$at(132,21041,21088)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,46):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_abort($t13) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:507:9+122
    assume {:print "$at(132,20977,21099)"} true;
    assume {:print "$track_abort(55,46):", $t13} $t13 == $t13;

    // $t9 := move($t13) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:507:9+122
    $t9 := $t13;

    // goto L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:507:9+122
    goto L21;

    // label L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:512:31+6
    assume {:print "$at(132,21132,21138)"} true;
L5:

    // $t14 := get_field<object::ObjectCore>.owner($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:512:31+12
    assume {:print "$at(132,21132,21144)"} true;
    $t14 := $t10->$owner;

    // trace_local[current_address#1]($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:512:13+15
    assume {:print "$track_local(55,46,3):", $t14} $t14 == $t14;

    // label L18 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    assume {:print "$at(132,21185,21190)"} true;
L18:

    // $t3 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    assume {:print "$at(132,21185,21190)"} true;
    havoc $t3;

    // assume WellFormed($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    assume $IsValid'address'($t3);

    // $t15 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    havoc $t15;

    // assume WellFormed($t15) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    assume $IsValid'bool'($t15);

    // $t16 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    havoc $t16;

    // assume WellFormed($t16) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    assume $IsValid'u8'($t16);

    // $t17 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    havoc $t17;

    // assume WellFormed($t17) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    assume $IsValid'u8'($t17);

    // $t18 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    havoc $t18;

    // assume WellFormed($t18) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    assume $IsValid'bool'($t18);

    // $t19 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    havoc $t19;

    // assume WellFormed($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    assume $IsValid'bool'($t19);

    // $t20 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    havoc $t20;

    // assume WellFormed($t20) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    assume $IsValid'$1_object_ObjectCore'($t20);

    // $t21 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    havoc $t21;

    // assume WellFormed($t21) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    assume $IsValid'bool'($t21);

    // $t22 := havoc[val]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    havoc $t22;

    // assume WellFormed($t22) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    assume $IsValid'address'($t22);

    // trace_local[current_address#1]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    assume {:print "$info(): enter loop, variable(s) current_address#1 havocked and reassigned"} true;
    assume {:print "$track_local(55,46,3):", $t3} $t3 == $t3;

    // assume Not(AbortFlag()) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:16+5
    assume !$abort_flag;

    // $t15 := !=($t0, $t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:22+2
    $t15 := !$IsEqual'address'($t0, $t3);

    // if ($t15) goto L7 else goto L6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:9+762
    if ($t15) { goto L7; } else { goto L6; }

    // label L7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:515:9+762
L7:

    // label L8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:516:25+9
    assume {:print "$at(132,21237,21246)"} true;
L8:

    // $t16 := 1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:516:25+9
    assume {:print "$at(132,21237,21246)"} true;
    $t16 := 1;
    assume $IsValid'u8'($t16);

    // $t17 := 8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:517:29+22
    assume {:print "$at(132,21276,21298)"} true;
    $t17 := 8;
    assume $IsValid'u8'($t17);

    // $t18 := <($t16, $t17) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:517:27+1
    call $t18 := $Lt($t16, $t17);

    // if ($t18) goto L10 else goto L9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:517:13+78
    if ($t18) { goto L10; } else { goto L9; }

    // label L10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:517:13+78
L10:

    // goto L11 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:517:13+78
    assume {:print "$at(132,21260,21338)"} true;
    goto L11;

    // label L9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:517:73+16
L9:

    // $t23 := 6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:517:73+16
    assume {:print "$at(132,21320,21336)"} true;
    $t23 := 6;
    assume $IsValid'u64'($t23);

    // $t24 := error::out_of_range($t23) on_abort goto L21 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:517:53+37
    call $t24 := $1_error_out_of_range($t23);
    if ($abort_flag) {
        assume {:print "$at(132,21300,21337)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,46):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_abort($t24) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:517:13+78
    assume {:print "$at(132,21260,21338)"} true;
    assume {:print "$track_abort(55,46):", $t24} $t24 == $t24;

    // $t9 := move($t24) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:517:13+78
    $t9 := $t24;

    // goto L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:517:13+78
    goto L21;

    // label L11 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:522:36+15
    assume {:print "$at(132,21575,21590)"} true;
L11:

    // $t19 := exists<object::ObjectCore>($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:522:17+6
    assume {:print "$at(132,21556,21562)"} true;
    $t19 := $ResourceExists($1_object_ObjectCore_$memory, $t3);

    // if ($t19) goto L13 else goto L12 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:521:13+136
    assume {:print "$at(132,21531,21667)"} true;
    if ($t19) { goto L13; } else { goto L12; }

    // label L13 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:521:13+136
L13:

    // goto L14 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:521:13+136
    assume {:print "$at(132,21531,21667)"} true;
    goto L14;

    // label L12 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:523:42+17
    assume {:print "$at(132,21634,21651)"} true;
L12:

    // $t25 := 4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:523:42+17
    assume {:print "$at(132,21634,21651)"} true;
    $t25 := 4;
    assume $IsValid'u64'($t25);

    // $t26 := error::permission_denied($t25) on_abort goto L21 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:523:17+43
    call $t26 := $1_error_permission_denied($t25);
    if ($abort_flag) {
        assume {:print "$at(132,21609,21652)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,46):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_abort($t26) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:521:13+136
    assume {:print "$at(132,21531,21667)"} true;
    assume {:print "$track_abort(55,46):", $t26} $t26 == $t26;

    // $t9 := move($t26) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:521:13+136
    $t9 := $t26;

    // goto L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:521:13+136
    goto L21;

    // label L14 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:525:52+15
    assume {:print "$at(132,21720,21735)"} true;
L14:

    // $t20 := get_global<object::ObjectCore>($t3) on_abort goto L21 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:525:26+13
    assume {:print "$at(132,21694,21707)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $ResourceValue($1_object_ObjectCore_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(132,21694,21707)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,46):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_local[object#3]($t20) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:525:17+6
    assume {:print "$track_local(55,46,5):", $t20} $t20 == $t20;

    // $t21 := get_field<object::ObjectCore>.allow_ungated_transfer($t20) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:527:17+29
    assume {:print "$at(132,21775,21804)"} true;
    $t21 := $t20->$allow_ungated_transfer;

    // if ($t21) goto L16 else goto L15 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:526:13+134
    assume {:print "$at(132,21750,21884)"} true;
    if ($t21) { goto L16; } else { goto L15; }

    // label L16 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:526:13+134
L16:

    // goto L17 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:526:13+134
    assume {:print "$at(132,21750,21884)"} true;
    goto L17;

    // label L15 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:526:13+134
L15:

    // $t27 := 3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:528:42+21
    assume {:print "$at(132,21847,21868)"} true;
    $t27 := 3;
    assume $IsValid'u64'($t27);

    // $t28 := error::permission_denied($t27) on_abort goto L21 with $t9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:528:17+47
    call $t28 := $1_error_permission_denied($t27);
    if ($abort_flag) {
        assume {:print "$at(132,21822,21869)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,46):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_abort($t28) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:526:13+134
    assume {:print "$at(132,21750,21884)"} true;
    assume {:print "$track_abort(55,46):", $t28} $t28 == $t28;

    // $t9 := move($t28) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:526:13+134
    $t9 := $t28;

    // goto L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:526:13+134
    goto L21;

    // label L17 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:531:31+6
    assume {:print "$at(132,21917,21923)"} true;
L17:

    // $t22 := get_field<object::ObjectCore>.owner($t20) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:531:31+12
    assume {:print "$at(132,21917,21929)"} true;
    $t22 := $t20->$owner;

    // trace_local[current_address#1]($t22) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:531:13+15
    assume {:print "$track_local(55,46,3):", $t22} $t22 == $t22;

    // goto L19 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:531:43+1
    goto L19;

    // label L6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:532:10+1
    assume {:print "$at(132,21940,21941)"} true;
L6:

    // goto L20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:532:10+1
    assume {:print "$at(132,21940,21941)"} true;
    goto L20;

    // label L19 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:532:10+1
    // Loop invariant checking block for the loop started with header: L18
L19:

    // stop() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:532:10+1
    assume {:print "$at(132,21940,21941)"} true;
    assume false;
    return;

    // label L20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:533:5+1
    assume {:print "$at(132,21946,21947)"} true;
L20:

    // return () at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:533:5+1
    assume {:print "$at(132,21946,21947)"} true;
    return;

    // label L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:533:5+1
L21:

    // abort($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:533:5+1
    assume {:print "$at(132,21946,21947)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// struct royalty::Royalty at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/royalty.move:23:5+245
datatype $4_royalty_Royalty {
    $4_royalty_Royalty($numerator: int, $denominator: int, $payee_address: int)
}
function {:inline} $Update'$4_royalty_Royalty'_numerator(s: $4_royalty_Royalty, x: int): $4_royalty_Royalty {
    $4_royalty_Royalty(x, s->$denominator, s->$payee_address)
}
function {:inline} $Update'$4_royalty_Royalty'_denominator(s: $4_royalty_Royalty, x: int): $4_royalty_Royalty {
    $4_royalty_Royalty(s->$numerator, x, s->$payee_address)
}
function {:inline} $Update'$4_royalty_Royalty'_payee_address(s: $4_royalty_Royalty, x: int): $4_royalty_Royalty {
    $4_royalty_Royalty(s->$numerator, s->$denominator, x)
}
function $IsValid'$4_royalty_Royalty'(s: $4_royalty_Royalty): bool {
    $IsValid'u64'(s->$numerator)
      && $IsValid'u64'(s->$denominator)
      && $IsValid'address'(s->$payee_address)
}
function {:inline} $IsEqual'$4_royalty_Royalty'(s1: $4_royalty_Royalty, s2: $4_royalty_Royalty): bool {
    s1 == s2
}
var $4_royalty_Royalty_$memory: $Memory $4_royalty_Royalty;

// fun royalty::init [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/royalty.move:37:5+149
procedure {:inline 1} $4_royalty_init(_$t0: $1_object_ConstructorRef, _$t1: $4_royalty_Royalty) returns ()
{
    // declare local variables
    var $t2: $signer;
    var $t3: $signer;
    var $t4: int;
    var $t0: $1_object_ConstructorRef;
    var $t1: $4_royalty_Royalty;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$4_royalty_Royalty': $4_royalty_Royalty;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/royalty.move:37:5+1
    assume {:print "$at(169,1380,1381)"} true;
    assume {:print "$track_local(67,6,0):", $t0} $t0 == $t0;

    // trace_local[royalty]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/royalty.move:37:5+1
    assume {:print "$track_local(67,6,1):", $t1} $t1 == $t1;

    // $t3 := object::generate_signer($t0) on_abort goto L2 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/royalty.move:38:22+28
    assume {:print "$at(169,1459,1487)"} true;
    call $t3 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(169,1459,1487)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(67,6):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[signer]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/royalty.move:38:13+6
    assume {:print "$track_local(67,6,2):", $t3} $t3 == $t3;

    // move_to<royalty::Royalty>($t1, $t3) on_abort goto L2 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/royalty.move:39:9+7
    assume {:print "$at(169,1497,1504)"} true;
    if ($ResourceExists($4_royalty_Royalty_$memory, $t3->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_royalty_Royalty_$memory := $ResourceUpdate($4_royalty_Royalty_$memory, $t3->$addr, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(169,1497,1504)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(67,6):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/royalty.move:40:5+1
    assume {:print "$at(169,1528,1529)"} true;
L1:

    // return () at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/royalty.move:40:5+1
    assume {:print "$at(169,1528,1529)"} true;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/royalty.move:40:5+1
L2:

    // abort($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/royalty.move:40:5+1
    assume {:print "$at(169,1528,1529)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// struct collection::BurnEvent at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:100:5+84
datatype $4_collection_BurnEvent {
    $4_collection_BurnEvent($index: int, $token: int)
}
function {:inline} $Update'$4_collection_BurnEvent'_index(s: $4_collection_BurnEvent, x: int): $4_collection_BurnEvent {
    $4_collection_BurnEvent(x, s->$token)
}
function {:inline} $Update'$4_collection_BurnEvent'_token(s: $4_collection_BurnEvent, x: int): $4_collection_BurnEvent {
    $4_collection_BurnEvent(s->$index, x)
}
function $IsValid'$4_collection_BurnEvent'(s: $4_collection_BurnEvent): bool {
    $IsValid'u64'(s->$index)
      && $IsValid'address'(s->$token)
}
function {:inline} $IsEqual'$4_collection_BurnEvent'(s1: $4_collection_BurnEvent, s2: $4_collection_BurnEvent): bool {
    s1 == s2
}

// struct collection::Collection at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:50:5+576
datatype $4_collection_Collection {
    $4_collection_Collection($creator: int, $description: $1_string_String, $name: $1_string_String, $uri: $1_string_String, $mutation_events: $1_event_EventHandle'$4_collection_MutationEvent')
}
function {:inline} $Update'$4_collection_Collection'_creator(s: $4_collection_Collection, x: int): $4_collection_Collection {
    $4_collection_Collection(x, s->$description, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_description(s: $4_collection_Collection, x: $1_string_String): $4_collection_Collection {
    $4_collection_Collection(s->$creator, x, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_name(s: $4_collection_Collection, x: $1_string_String): $4_collection_Collection {
    $4_collection_Collection(s->$creator, s->$description, x, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_uri(s: $4_collection_Collection, x: $1_string_String): $4_collection_Collection {
    $4_collection_Collection(s->$creator, s->$description, s->$name, x, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_mutation_events(s: $4_collection_Collection, x: $1_event_EventHandle'$4_collection_MutationEvent'): $4_collection_Collection {
    $4_collection_Collection(s->$creator, s->$description, s->$name, s->$uri, x)
}
function $IsValid'$4_collection_Collection'(s: $4_collection_Collection): bool {
    $IsValid'address'(s->$creator)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$uri)
      && $IsValid'$1_event_EventHandle'$4_collection_MutationEvent''(s->$mutation_events)
}
function {:inline} $IsEqual'$4_collection_Collection'(s1: $4_collection_Collection, s2: $4_collection_Collection): bool {
    $IsEqual'address'(s1->$creator, s2->$creator)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$uri, s2->$uri)
    && $IsEqual'$1_event_EventHandle'$4_collection_MutationEvent''(s1->$mutation_events, s2->$mutation_events)}
var $4_collection_Collection_$memory: $Memory $4_collection_Collection;

// struct collection::FixedSupply at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:78:5+344
datatype $4_collection_FixedSupply {
    $4_collection_FixedSupply($current_supply: int, $max_supply: int, $total_minted: int, $burn_events: $1_event_EventHandle'$4_collection_BurnEvent', $mint_events: $1_event_EventHandle'$4_collection_MintEvent')
}
function {:inline} $Update'$4_collection_FixedSupply'_current_supply(s: $4_collection_FixedSupply, x: int): $4_collection_FixedSupply {
    $4_collection_FixedSupply(x, s->$max_supply, s->$total_minted, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_max_supply(s: $4_collection_FixedSupply, x: int): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, x, s->$total_minted, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_total_minted(s: $4_collection_FixedSupply, x: int): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, s->$max_supply, x, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_burn_events(s: $4_collection_FixedSupply, x: $1_event_EventHandle'$4_collection_BurnEvent'): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, s->$max_supply, s->$total_minted, x, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_mint_events(s: $4_collection_FixedSupply, x: $1_event_EventHandle'$4_collection_MintEvent'): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, s->$max_supply, s->$total_minted, s->$burn_events, x)
}
function $IsValid'$4_collection_FixedSupply'(s: $4_collection_FixedSupply): bool {
    $IsValid'u64'(s->$current_supply)
      && $IsValid'u64'(s->$max_supply)
      && $IsValid'u64'(s->$total_minted)
      && $IsValid'$1_event_EventHandle'$4_collection_BurnEvent''(s->$burn_events)
      && $IsValid'$1_event_EventHandle'$4_collection_MintEvent''(s->$mint_events)
}
function {:inline} $IsEqual'$4_collection_FixedSupply'(s1: $4_collection_FixedSupply, s2: $4_collection_FixedSupply): bool {
    s1 == s2
}
var $4_collection_FixedSupply_$memory: $Memory $4_collection_FixedSupply;

// struct collection::MintEvent at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:105:5+84
datatype $4_collection_MintEvent {
    $4_collection_MintEvent($index: int, $token: int)
}
function {:inline} $Update'$4_collection_MintEvent'_index(s: $4_collection_MintEvent, x: int): $4_collection_MintEvent {
    $4_collection_MintEvent(x, s->$token)
}
function {:inline} $Update'$4_collection_MintEvent'_token(s: $4_collection_MintEvent, x: int): $4_collection_MintEvent {
    $4_collection_MintEvent(s->$index, x)
}
function $IsValid'$4_collection_MintEvent'(s: $4_collection_MintEvent): bool {
    $IsValid'u64'(s->$index)
      && $IsValid'address'(s->$token)
}
function {:inline} $IsEqual'$4_collection_MintEvent'(s1: $4_collection_MintEvent, s2: $4_collection_MintEvent): bool {
    s1 == s2
}

// struct collection::MutationEvent at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:71:5+80
datatype $4_collection_MutationEvent {
    $4_collection_MutationEvent($mutated_field_name: $1_string_String)
}
function {:inline} $Update'$4_collection_MutationEvent'_mutated_field_name(s: $4_collection_MutationEvent, x: $1_string_String): $4_collection_MutationEvent {
    $4_collection_MutationEvent(x)
}
function $IsValid'$4_collection_MutationEvent'(s: $4_collection_MutationEvent): bool {
    $IsValid'$1_string_String'(s->$mutated_field_name)
}
function {:inline} $IsEqual'$4_collection_MutationEvent'(s1: $4_collection_MutationEvent, s2: $4_collection_MutationEvent): bool {
    $IsEqual'$1_string_String'(s1->$mutated_field_name, s2->$mutated_field_name)}

// struct collection::UnlimitedSupply at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:91:5+283
datatype $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply($current_supply: int, $total_minted: int, $burn_events: $1_event_EventHandle'$4_collection_BurnEvent', $mint_events: $1_event_EventHandle'$4_collection_MintEvent')
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_current_supply(s: $4_collection_UnlimitedSupply, x: int): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(x, s->$total_minted, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_total_minted(s: $4_collection_UnlimitedSupply, x: int): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(s->$current_supply, x, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_burn_events(s: $4_collection_UnlimitedSupply, x: $1_event_EventHandle'$4_collection_BurnEvent'): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(s->$current_supply, s->$total_minted, x, s->$mint_events)
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_mint_events(s: $4_collection_UnlimitedSupply, x: $1_event_EventHandle'$4_collection_MintEvent'): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(s->$current_supply, s->$total_minted, s->$burn_events, x)
}
function $IsValid'$4_collection_UnlimitedSupply'(s: $4_collection_UnlimitedSupply): bool {
    $IsValid'u64'(s->$current_supply)
      && $IsValid'u64'(s->$total_minted)
      && $IsValid'$1_event_EventHandle'$4_collection_BurnEvent''(s->$burn_events)
      && $IsValid'$1_event_EventHandle'$4_collection_MintEvent''(s->$mint_events)
}
function {:inline} $IsEqual'$4_collection_UnlimitedSupply'(s1: $4_collection_UnlimitedSupply, s2: $4_collection_UnlimitedSupply): bool {
    s1 == s2
}
var $4_collection_UnlimitedSupply_$memory: $Memory $4_collection_UnlimitedSupply;

// fun collection::create_collection_address [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:243:5+164
procedure {:inline 1} $4_collection_create_collection_address(_$t0: int, _$t1: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t2: Vec (int);
    var $t3: int;
    var $t4: int;
    var $t0: int;
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[creator]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:243:5+1
    assume {:print "$at(167,9321,9322)"} true;
    assume {:print "$track_local(68,1,0):", $t0} $t0 == $t0;

    // trace_local[name]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:243:5+1
    assume {:print "$track_local(68,1,1):", $t1} $t1 == $t1;

    // $t2 := collection::create_collection_seed($t1) on_abort goto L2 with $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:244:48+28
    assume {:print "$at(167,9450,9478)"} true;
    call $t2 := $4_collection_create_collection_seed($t1);
    if ($abort_flag) {
        assume {:print "$at(167,9450,9478)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(68,1):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := opaque begin: object::create_object_address($t0, $t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:244:9+68

    // assume WellFormed($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:244:9+68
    assume $IsValid'address'($t4);

    // assume Eq<address>($t4, object::spec_create_object_address($t0, $t2)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:244:9+68
    assume $IsEqual'address'($t4, $1_object_spec_create_object_address($t0, $t2));

    // $t4 := opaque end: object::create_object_address($t0, $t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:244:9+68

    // trace_return[0]($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:244:9+68
    assume {:print "$track_return(68,1,0):", $t4} $t4 == $t4;

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:245:5+1
    assume {:print "$at(167,9484,9485)"} true;
L1:

    // return $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:245:5+1
    assume {:print "$at(167,9484,9485)"} true;
    $ret0 := $t4;
    return;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:245:5+1
L2:

    // abort($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:245:5+1
    assume {:print "$at(167,9484,9485)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun collection::create_collection_seed [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:248:5+214
procedure {:inline 1} $4_collection_create_collection_seed(_$t0: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: Vec (int);
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[name]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:248:5+1
    assume {:print "$at(167,9573,9574)"} true;
    assume {:print "$track_local(68,2,0):", $t0} $t0 == $t0;

    // $t1 := string::length($t0) on_abort goto L4 with $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:249:17+20
    assume {:print "$at(167,9652,9672)"} true;
    call $t1 := $1_string_length($t0);
    if ($abort_flag) {
        assume {:print "$at(167,9652,9672)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(68,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // $t3 := 128 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:249:41+26
    $t3 := 128;
    assume $IsValid'u64'($t3);

    // $t4 := <=($t1, $t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:249:38+2
    call $t4 := $Le($t1, $t3);

    // if ($t4) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:249:9+107
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:249:9+107
L1:

    // goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:249:9+107
    assume {:print "$at(167,9644,9751)"} true;
    goto L2;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:249:9+107
L0:

    // $t5 := 3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:249:89+25
    assume {:print "$at(167,9724,9749)"} true;
    $t5 := 3;
    assume $IsValid'u64'($t5);

    // $t6 := error::out_of_range($t5) on_abort goto L4 with $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:249:69+46
    call $t6 := $1_error_out_of_range($t5);
    if ($abort_flag) {
        assume {:print "$at(167,9704,9750)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(68,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_abort($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:249:9+107
    assume {:print "$at(167,9644,9751)"} true;
    assume {:print "$track_abort(68,2):", $t6} $t6 == $t6;

    // $t2 := move($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:249:9+107
    $t2 := $t6;

    // goto L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:249:9+107
    goto L4;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:250:24+4
    assume {:print "$at(167,9776,9780)"} true;
L2:

    // $t7 := string::bytes($t0) on_abort goto L4 with $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:250:10+19
    assume {:print "$at(167,9762,9781)"} true;
    call $t7 := $1_string_bytes($t0);
    if ($abort_flag) {
        assume {:print "$at(167,9762,9781)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(68,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_return[0]($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:250:9+20
    assume {:print "$track_return(68,2,0):", $t7} $t7 == $t7;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:251:5+1
    assume {:print "$at(167,9786,9787)"} true;
L3:

    // return $t7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:251:5+1
    assume {:print "$at(167,9786,9787)"} true;
    $ret0 := $t7;
    return;

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:251:5+1
L4:

    // abort($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:251:5+1
    assume {:print "$at(167,9786,9787)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun collection::create_unlimited_collection [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:149:5+875
procedure {:inline 1} $4_collection_create_unlimited_collection(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_option_Option'$4_royalty_Royalty', _$t4: $1_string_String) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t5: $4_collection_Collection;
    var $t6: Vec (int);
    var $t7: $1_object_ConstructorRef;
    var $t8: $1_object_ConstructorRef;
    var $t9: $signer;
    var $t10: $1_string_String;
    var $t11: $1_string_String;
    var $t12: $signer;
    var $t13: $signer;
    var $t14: $1_option_Option'$4_royalty_Royalty';
    var $t15: $4_collection_UnlimitedSupply;
    var $t16: $1_option_Option'$4_collection_UnlimitedSupply';
    var $t17: $1_object_TransferRef;
    var $t18: $1_string_String;
    var $t19: Vec (int);
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: $1_object_ConstructorRef;
    var $t24: $signer;
    var $t25: int;
    var $t26: int;
    var $t27: $1_object_ObjectCore;
    var $t28: $1_event_EventHandle'$4_collection_BurnEvent';
    var $t29: $1_object_ObjectCore;
    var $t30: $1_event_EventHandle'$4_collection_MintEvent';
    var $t31: $4_collection_UnlimitedSupply;
    var $t32: $1_option_Option'$4_collection_UnlimitedSupply';
    var $t33: int;
    var $t34: int;
    var $t35: bool;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: bool;
    var $t41: int;
    var $t42: int;
    var $t43: int;
    var $t44: int;
    var $t45: bool;
    var $t46: int;
    var $t47: int;
    var $t48: $signer;
    var $t49: int;
    var $t50: $1_object_ObjectCore;
    var $t51: $1_event_EventHandle'$4_collection_MutationEvent';
    var $t52: $4_collection_Collection;
    var $t53: bool;
    var $t54: $4_collection_UnlimitedSupply;
    var $t55: bool;
    var $t56: bool;
    var $t57: $1_option_Option'$4_royalty_Royalty';
    var $t58: bool;
    var $t59: $Mutation ($1_option_Option'$4_royalty_Royalty');
    var $t60: $4_royalty_Royalty;
    var $t61: $1_option_Option'$4_royalty_Royalty';
    var $t62: bool;
    var $t63: $1_object_TransferRef;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_option_Option'$4_royalty_Royalty';
    var $t4: $1_string_String;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'$1_option_Option'$4_collection_UnlimitedSupply'': $1_option_Option'$4_collection_UnlimitedSupply';
    var $temp_0'$1_option_Option'$4_royalty_Royalty'': $1_option_Option'$4_royalty_Royalty';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$4_collection_Collection': $4_collection_Collection;
    var $temp_0'$4_collection_UnlimitedSupply': $4_collection_UnlimitedSupply;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // bytecode translation starts here
    // trace_local[creator]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:149:5+1
    assume {:print "$at(167,6082,6083)"} true;
    assume {:print "$track_local(68,4,0):", $t0} $t0 == $t0;

    // trace_local[description]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:149:5+1
    assume {:print "$track_local(68,4,1):", $t1} $t1 == $t1;

    // trace_local[name]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:149:5+1
    assume {:print "$track_local(68,4,2):", $t2} $t2 == $t2;

    // trace_local[royalty]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:149:5+1
    assume {:print "$track_local(68,4,3):", $t3} $t3 == $t3;

    // trace_local[uri]($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:149:5+1
    assume {:print "$track_local(68,4,4):", $t4} $t4 == $t4;

    // $t19 := collection::create_collection_seed($t2) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:156:31+29
    assume {:print "$at(167,6308,6337)"} true;
    call $t19 := $4_collection_create_collection_seed($t2);
    if ($abort_flag) {
        assume {:print "$at(167,6308,6337)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_local[collection_seed]($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:156:13+15
    assume {:print "$track_local(68,4,6):", $t19} $t19 == $t19;

    // assume Identical($t21, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:68:9+50
    assume {:print "$at(133,2456,2506)"} true;
    assume ($t21 == $1_signer_$address_of($t0));

    // assume Identical($t22, object::spec_create_object_address($t21, $t19)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:69:9+65
    assume {:print "$at(133,2515,2580)"} true;
    assume ($t22 == $1_object_spec_create_object_address($t21, $t19));

    // $t23 := object::create_named_object($t0, $t19) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:157:31+53
    assume {:print "$at(167,6369,6422)"} true;
    call $t23 := $1_object_create_named_object($t0, $t19);
    if ($abort_flag) {
        assume {:print "$at(167,6369,6422)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_local[constructor_ref]($t23) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:157:13+15
    assume {:print "$track_local(68,4,7):", $t23} $t23 == $t23;

    // $t24 := object::generate_signer($t23) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:158:29+41
    assume {:print "$at(167,6452,6493)"} true;
    call $t24 := $1_object_generate_signer($t23);
    if ($abort_flag) {
        assume {:print "$at(167,6452,6493)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_local[object_signer]($t24) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:158:13+13
    assume {:print "$track_local(68,4,12):", $t24} $t24 == $t24;

    // $t25 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:161:29+1
    assume {:print "$at(167,6563,6564)"} true;
    $t25 := 0;
    assume $IsValid'u64'($t25);

    // $t26 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:162:27+1
    assume {:print "$at(167,6592,6593)"} true;
    $t26 := 0;
    assume $IsValid'u64'($t26);

    // assume Identical($t27, global<object::ObjectCore>(signer::$address_of($t24))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:167:9+65
    assume {:print "$at(133,6354,6419)"} true;
    assume ($t27 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t24)));

    // $t28 := object::new_event_handle<collection::BurnEvent>($t24) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:163:26+40
    assume {:print "$at(167,6620,6660)"} true;
    call $t28 := $1_object_new_event_handle'$4_collection_BurnEvent'($t24);
    if ($abort_flag) {
        assume {:print "$at(167,6620,6660)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // assume Identical($t29, global<object::ObjectCore>(signer::$address_of($t24))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:167:9+65
    assume {:print "$at(133,6354,6419)"} true;
    assume ($t29 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t24)));

    // $t30 := object::new_event_handle<collection::MintEvent>($t24) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:164:26+40
    assume {:print "$at(167,6687,6727)"} true;
    call $t30 := $1_object_new_event_handle'$4_collection_MintEvent'($t24);
    if ($abort_flag) {
        assume {:print "$at(167,6687,6727)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t31 := pack collection::UnlimitedSupply($t25, $t26, $t28, $t30) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:160:22+221
    assume {:print "$at(167,6517,6738)"} true;
    $t31 := $4_collection_UnlimitedSupply($t25, $t26, $t28, $t30);

    // trace_local[supply]($t31) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:160:13+6
    assume {:print "$track_local(68,4,15):", $t31} $t31 == $t31;

    // $t32 := opaque begin: option::some<collection::UnlimitedSupply>($t31) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:174:13+20
    assume {:print "$at(167,6920,6940)"} true;

    // assume And(WellFormed($t32), Le(Len<collection::UnlimitedSupply>(select option::Option.vec($t32)), 1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:174:13+20
    assume ($IsValid'$1_option_Option'$4_collection_UnlimitedSupply''($t32) && (LenVec($t32->$vec) <= 1));

    // assume Eq<option::Option<collection::UnlimitedSupply>>($t32, option::spec_some<collection::UnlimitedSupply>($t31)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:174:13+20
    assume $IsEqual'$1_option_Option'$4_collection_UnlimitedSupply''($t32, $1_option_spec_some'$4_collection_UnlimitedSupply'($t31));

    // $t32 := opaque end: option::some<collection::UnlimitedSupply>($t31) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:174:13+20

    // trace_local[supply#353]($t32) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:209:9+6
    assume {:print "$at(167,8023,8029)"} true;
    assume {:print "$track_local(68,4,16):", $t32} $t32 == $t32;

    // trace_local[uri#352]($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:208:9+3
    assume {:print "$at(167,8002,8005)"} true;
    assume {:print "$track_local(68,4,18):", $t4} $t4 == $t4;

    // $t14 := $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:207:9+7
    assume {:print "$at(167,7968,7975)"} true;
    $t14 := $t3;

    // trace_local[royalty#351]($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:207:9+7
    assume {:print "$track_local(68,4,14):", $t14} $t14 == $t14;

    // trace_local[name#350]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:206:9+4
    assume {:print "$at(167,7946,7950)"} true;
    assume {:print "$track_local(68,4,11):", $t2} $t2 == $t2;

    // trace_local[description#349]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:205:9+11
    assume {:print "$at(167,7917,7928)"} true;
    assume {:print "$track_local(68,4,10):", $t1} $t1 == $t1;

    // trace_local[constructor_ref#348]($t23) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:204:9+15
    assume {:print "$at(167,7876,7891)"} true;
    assume {:print "$track_local(68,4,8):", $t23} $t23 == $t23;

    // trace_local[creator#347]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:203:9+7
    assume {:print "$at(167,7850,7857)"} true;
    assume {:print "$track_local(68,4,9):", $t0} $t0 == $t0;

    // $t33 := string::length($t2) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:211:17+21
    assume {:print "$at(167,8087,8108)"} true;
    call $t33 := $1_string_length($t2);
    if ($abort_flag) {
        assume {:print "$at(167,8087,8108)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t34 := 128 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:211:42+26
    $t34 := 128;
    assume $IsValid'u64'($t34);

    // $t35 := <=($t33, $t34) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:211:39+2
    call $t35 := $Le($t33, $t34);

    // if ($t35) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:211:9+108
    if ($t35) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:211:9+108
L1:

    // goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:211:9+108
    assume {:print "$at(167,8079,8187)"} true;
    goto L2;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:211:9+108
L0:

    // $t36 := 3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:211:90+25
    assume {:print "$at(167,8160,8185)"} true;
    $t36 := 3;
    assume $IsValid'u64'($t36);

    // $t37 := error::out_of_range($t36) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:211:70+46
    call $t37 := $1_error_out_of_range($t36);
    if ($abort_flag) {
        assume {:print "$at(167,8140,8186)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_abort($t37) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:211:9+108
    assume {:print "$at(167,8079,8187)"} true;
    assume {:print "$track_abort(68,4):", $t37} $t37 == $t37;

    // $t20 := move($t37) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:211:9+108
    $t20 := $t37;

    // goto L15 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:211:9+108
    goto L15;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:212:32+4
    assume {:print "$at(167,8220,8224)"} true;
L2:

    // $t38 := string::length($t4) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:212:17+20
    assume {:print "$at(167,8205,8225)"} true;
    call $t38 := $1_string_length($t4);
    if ($abort_flag) {
        assume {:print "$at(167,8205,8225)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t39 := 512 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:212:41+14
    $t39 := 512;
    assume $IsValid'u64'($t39);

    // $t40 := <=($t38, $t39) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:212:38+2
    call $t40 := $Le($t38, $t39);

    // if ($t40) goto L4 else goto L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:212:9+83
    if ($t40) { goto L4; } else { goto L3; }

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:212:9+83
L4:

    // goto L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:212:9+83
    assume {:print "$at(167,8197,8280)"} true;
    goto L5;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:212:9+83
L3:

    // $t41 := 4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:212:77+13
    assume {:print "$at(167,8265,8278)"} true;
    $t41 := 4;
    assume $IsValid'u64'($t41);

    // $t42 := error::out_of_range($t41) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:212:57+34
    call $t42 := $1_error_out_of_range($t41);
    if ($abort_flag) {
        assume {:print "$at(167,8245,8279)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_abort($t42) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:212:9+83
    assume {:print "$at(167,8197,8280)"} true;
    assume {:print "$track_abort(68,4):", $t42} $t42 == $t42;

    // $t20 := move($t42) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:212:9+83
    $t20 := $t42;

    // goto L15 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:212:9+83
    goto L15;

    // label L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:213:32+12
    assume {:print "$at(167,8313,8325)"} true;
L5:

    // $t43 := string::length($t1) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:213:17+28
    assume {:print "$at(167,8298,8326)"} true;
    call $t43 := $1_string_length($t1);
    if ($abort_flag) {
        assume {:print "$at(167,8298,8326)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t44 := 2048 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:213:49+22
    $t44 := 2048;
    assume $IsValid'u64'($t44);

    // $t45 := <=($t43, $t44) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:213:46+2
    call $t45 := $Le($t43, $t44);

    // if ($t45) goto L7 else goto L6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:213:9+107
    if ($t45) { goto L7; } else { goto L6; }

    // label L7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:213:9+107
L7:

    // goto L8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:213:9+107
    assume {:print "$at(167,8290,8397)"} true;
    goto L8;

    // label L6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:213:9+107
L6:

    // $t46 := 5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:213:93+21
    assume {:print "$at(167,8374,8395)"} true;
    $t46 := 5;
    assume $IsValid'u64'($t46);

    // $t47 := error::out_of_range($t46) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:213:73+42
    call $t47 := $1_error_out_of_range($t46);
    if ($abort_flag) {
        assume {:print "$at(167,8354,8396)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_abort($t47) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:213:9+107
    assume {:print "$at(167,8290,8397)"} true;
    assume {:print "$track_abort(68,4):", $t47} $t47 == $t47;

    // $t20 := move($t47) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:213:9+107
    $t20 := $t47;

    // goto L15 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:213:9+107
    goto L15;

    // label L8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:215:53+16
    assume {:print "$at(167,8452,8468)"} true;
L8:

    // $t48 := object::generate_signer($t23) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:215:29+41
    assume {:print "$at(167,8428,8469)"} true;
    call $t48 := $1_object_generate_signer($t23);
    if ($abort_flag) {
        assume {:print "$at(167,8428,8469)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_local[object_signer#354]($t48) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:215:13+13
    assume {:print "$track_local(68,4,13):", $t48} $t48 == $t48;

    // $t49 := signer::address_of($t0) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:218:22+27
    assume {:print "$at(167,8531,8558)"} true;
    call $t49 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(167,8531,8558)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // assume Identical($t50, global<object::ObjectCore>(signer::$address_of($t48))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:167:9+65
    assume {:print "$at(133,6354,6419)"} true;
    assume ($t50 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t48)));

    // $t51 := object::new_event_handle<collection::MutationEvent>($t48) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:222:30+40
    assume {:print "$at(167,8649,8689)"} true;
    call $t51 := $1_object_new_event_handle'$4_collection_MutationEvent'($t48);
    if ($abort_flag) {
        assume {:print "$at(167,8649,8689)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t52 := pack collection::Collection($t49, $t1, $t2, $t4, $t51) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:217:26+203
    assume {:print "$at(167,8497,8700)"} true;
    $t52 := $4_collection_Collection($t49, $t1, $t2, $t4, $t51);

    // trace_local[collection#355]($t52) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:217:13+10
    assume {:print "$track_local(68,4,5):", $t52} $t52 == $t52;

    // move_to<collection::Collection>($t52, $t48) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:224:9+7
    assume {:print "$at(167,8710,8717)"} true;
    if ($ResourceExists($4_collection_Collection_$memory, $t48->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_collection_Collection_$memory := $ResourceUpdate($4_collection_Collection_$memory, $t48->$addr, $t52);
    }
    if ($abort_flag) {
        assume {:print "$at(167,8710,8717)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t53 := opaque begin: option::is_some<collection::UnlimitedSupply>($t32) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:226:13+24
    assume {:print "$at(167,8760,8784)"} true;

    // assume WellFormed($t53) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:226:13+24
    assume $IsValid'bool'($t53);

    // assume Eq<bool>($t53, option::spec_is_some<collection::UnlimitedSupply>($t32)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:226:13+24
    assume $IsEqual'bool'($t53, $1_option_spec_is_some'$4_collection_UnlimitedSupply'($t32));

    // $t53 := opaque end: option::is_some<collection::UnlimitedSupply>($t32) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:226:13+24

    // if ($t53) goto L10 else goto L9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:226:9+165
    if ($t53) { goto L10; } else { goto L9; }

    // label L10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:21+14
    assume {:print "$at(167,8808,8822)"} true;
L10:

    // $t54 := opaque begin: option::destroy_some<collection::UnlimitedSupply>($t32) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:37+28
    assume {:print "$at(167,8824,8852)"} true;

    // assume Identical($t55, option::spec_is_none<collection::UnlimitedSupply>($t32)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:37+28
    assume ($t55 == $1_option_spec_is_none'$4_collection_UnlimitedSupply'($t32));

    // if ($t55) goto L17 else goto L16 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:37+28
    if ($t55) { goto L17; } else { goto L16; }

    // label L17 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:37+28
L17:

    // assume And(option::spec_is_none<collection::UnlimitedSupply>($t32), Eq(262145, $t20)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:37+28
    assume {:print "$at(167,8824,8852)"} true;
    assume ($1_option_spec_is_none'$4_collection_UnlimitedSupply'($t32) && $IsEqual'num'(262145, $t20));

    // trace_abort($t20) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:37+28
    assume {:print "$at(167,8824,8852)"} true;
    assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;

    // goto L15 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:37+28
    goto L15;

    // label L16 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:37+28
L16:

    // assume WellFormed($t54) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:37+28
    assume {:print "$at(167,8824,8852)"} true;
    assume $IsValid'$4_collection_UnlimitedSupply'($t54);

    // assume Eq<collection::UnlimitedSupply>($t54, option::spec_borrow<collection::UnlimitedSupply>($t32)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:37+28
    assume $IsEqual'$4_collection_UnlimitedSupply'($t54, $1_option_spec_borrow'$4_collection_UnlimitedSupply'($t32));

    // $t54 := opaque end: option::destroy_some<collection::UnlimitedSupply>($t32) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:37+28

    // move_to<collection::UnlimitedSupply>($t54, $t48) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:13+7
    if ($ResourceExists($4_collection_UnlimitedSupply_$memory, $t48->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_collection_UnlimitedSupply_$memory := $ResourceUpdate($4_collection_UnlimitedSupply_$memory, $t48->$addr, $t54);
    }
    if ($abort_flag) {
        assume {:print "$at(167,8800,8807)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // goto L11 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:227:13+53
    goto L11;

    // label L9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:229:34+6
    assume {:print "$at(167,8904,8910)"} true;
L9:

    // opaque begin: option::destroy_none<collection::UnlimitedSupply>($t32) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:229:13+28
    assume {:print "$at(167,8883,8911)"} true;

    // assume Identical($t56, option::spec_is_some<collection::UnlimitedSupply>($t32)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:229:13+28
    assume ($t56 == $1_option_spec_is_some'$4_collection_UnlimitedSupply'($t32));

    // if ($t56) goto L19 else goto L18 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:229:13+28
    if ($t56) { goto L19; } else { goto L18; }

    // label L19 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:229:13+28
L19:

    // assume And(option::spec_is_some<collection::UnlimitedSupply>($t32), Eq(262144, $t20)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:229:13+28
    assume {:print "$at(167,8883,8911)"} true;
    assume ($1_option_spec_is_some'$4_collection_UnlimitedSupply'($t32) && $IsEqual'num'(262144, $t20));

    // trace_abort($t20) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:229:13+28
    assume {:print "$at(167,8883,8911)"} true;
    assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;

    // goto L15 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:229:13+28
    goto L15;

    // label L18 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:229:13+28
L18:

    // opaque end: option::destroy_none<collection::UnlimitedSupply>($t32) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:229:13+28
    assume {:print "$at(167,8883,8911)"} true;

    // label L11 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:232:29+8
    assume {:print "$at(167,8952,8960)"} true;
L11:

    // $t57 := copy($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:232:29+8
    assume {:print "$at(167,8952,8960)"} true;
    $t57 := $t14;

    // $t58 := opaque begin: option::is_some<royalty::Royalty>($t57) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:232:13+25

    // assume WellFormed($t58) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:232:13+25
    assume $IsValid'bool'($t58);

    // assume Eq<bool>($t58, option::spec_is_some<royalty::Royalty>($t57)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:232:13+25
    assume $IsEqual'bool'($t58, $1_option_spec_is_some'$4_royalty_Royalty'($t57));

    // $t58 := opaque end: option::is_some<royalty::Royalty>($t57) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:232:13+25

    // if ($t58) goto L13 else goto L12 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:232:9+117
    if ($t58) { goto L13; } else { goto L12; }

    // label L13 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:27+16
    assume {:print "$at(167,8991,9007)"} true;
L13:

    // $t59 := borrow_local($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:61+12
    assume {:print "$at(167,9025,9037)"} true;
    $t59 := $Mutation($Local(14), EmptyVec(), $t14);

    // $t60 := opaque begin: option::extract<royalty::Royalty>($t59) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29

    // $t61 := read_ref($t59) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
    $t61 := $Dereference($t59);

    // assume Identical($t62, option::spec_is_none<royalty::Royalty>($t59)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
    assume ($t62 == $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t59)));

    // if ($t62) goto L21 else goto L22 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
    if ($t62) { goto L21; } else { goto L22; }

    // label L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
L21:

    // assume And(option::spec_is_none<royalty::Royalty>($t59), Eq(262145, $t20)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
    assume {:print "$at(167,9009,9038)"} true;
    assume ($1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t59)) && $IsEqual'num'(262145, $t20));

    // trace_abort($t20) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
    assume {:print "$at(167,9009,9038)"} true;
    assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;

    // goto L15 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
    goto L15;

    // label L20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
L20:

    // $t59 := havoc[mut]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
    assume {:print "$at(167,9009,9038)"} true;
    havoc $temp_0'$1_option_Option'$4_royalty_Royalty'';
    $t59 := $UpdateMutation($t59, $temp_0'$1_option_Option'$4_royalty_Royalty'');

    // assume And(WellFormed($t59), Le(Len<royalty::Royalty>(select option::Option.vec($t59)), 1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($Dereference($t59)) && (LenVec($Dereference($t59)->$vec) <= 1));

    // assume WellFormed($t60) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
    assume $IsValid'$4_royalty_Royalty'($t60);

    // assume Eq<royalty::Royalty>($t60, option::spec_borrow<royalty::Royalty>($t61)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
    assume $IsEqual'$4_royalty_Royalty'($t60, $1_option_spec_borrow'$4_royalty_Royalty'($t61));

    // assume option::spec_is_none<royalty::Royalty>($t59) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
    assume $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t59));

    // $t60 := opaque end: option::extract<royalty::Royalty>($t59) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29

    // pack_ref_deep($t59) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29

    // write_back[LocalRoot($t14)@]($t59) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
    $t14 := $Dereference($t59);

    // trace_local[royalty#351]($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:45+29
    assume {:print "$track_local(68,4,14):", $t14} $t14 == $t14;

    // royalty::init($t23, $t60) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:233:13+62
    call $4_royalty_init($t23, $t60);
    if ($abort_flag) {
        assume {:print "$at(167,8977,9039)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // label L12 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:236:58+16
    assume {:print "$at(167,9109,9125)"} true;
L12:

    // $t63 := object::generate_transfer_ref($t23) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:236:28+47
    assume {:print "$at(167,9079,9126)"} true;
    call $t63 := $1_object_generate_transfer_ref($t23);
    if ($abort_flag) {
        assume {:print "$at(167,9079,9126)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_local[transfer_ref#356]($t63) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:236:13+12
    assume {:print "$track_local(68,4,17):", $t63} $t63 == $t63;

    // object::disable_ungated_transfer($t63) on_abort goto L15 with $t20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:237:9+47
    assume {:print "$at(167,9136,9183)"} true;
    call $1_object_disable_ungated_transfer($t63);
    if ($abort_flag) {
        assume {:print "$at(167,9136,9183)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_return[0]($t23) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:239:9+15
    assume {:print "$at(167,9194,9209)"} true;
    assume {:print "$track_return(68,4,0):", $t23} $t23 == $t23;

    // label L14 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:176:5+1
    assume {:print "$at(167,6956,6957)"} true;
L14:

    // return $t23 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:176:5+1
    assume {:print "$at(167,6956,6957)"} true;
    $ret0 := $t23;
    return;

    // label L15 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:176:5+1
L15:

    // abort($t20) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:176:5+1
    assume {:print "$at(167,6956,6957)"} true;
    $abort_code := $t20;
    $abort_flag := true;
    return;

    // label L22 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L22:

    // destroy($t59) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L20 at <internal>:1:1+10
    goto L20;

}

// fun collection::increment_supply [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:254:5+1452
procedure {:inline 1} $4_collection_increment_supply(_$t0: $1_object_Object'$4_collection_Collection', _$t1: int) returns ($ret0: $1_option_Option'u64')
{
    // declare local variables
    var $t2: $1_option_Option'u64';
    var $t3: $1_option_Option'u64';
    var $t4: int;
    var $t5: $Mutation ($4_collection_FixedSupply);
    var $t6: $Mutation ($4_collection_UnlimitedSupply);
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: $Mutation ($4_collection_FixedSupply);
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $Mutation (int);
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: $Mutation (int);
    var $t19: int;
    var $t20: int;
    var $t21: bool;
    var $t22: int;
    var $t23: int;
    var $t24: $Mutation ($1_event_EventHandle'$4_collection_MintEvent');
    var $t25: int;
    var $t26: $4_collection_MintEvent;
    var $t27: int;
    var $t28: bool;
    var $t29: $Mutation ($4_collection_UnlimitedSupply);
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: $Mutation (int);
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: $Mutation (int);
    var $t38: $Mutation ($1_event_EventHandle'$4_collection_MintEvent');
    var $t39: int;
    var $t40: $4_collection_MintEvent;
    var $t41: int;
    var $t0: $1_object_Object'$4_collection_Collection';
    var $t1: int;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_option_Option'u64'': $1_option_Option'u64';
    var $temp_0'$4_collection_FixedSupply': $4_collection_FixedSupply;
    var $temp_0'$4_collection_UnlimitedSupply': $4_collection_UnlimitedSupply;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[collection]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:254:5+1
    assume {:print "$at(167,9886,9887)"} true;
    assume {:print "$track_local(68,10,0):", $t0} $t0 == $t0;

    // trace_local[token]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:254:5+1
    assume {:print "$track_local(68,10,1):", $t1} $t1 == $t1;

    // $t7 := object::object_address<collection::Collection>($t0) on_abort goto L10 with $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:258:31+34
    assume {:print "$at(167,10077,10111)"} true;
    call $t7 := $1_object_object_address'$4_collection_Collection'($t0);
    if ($abort_flag) {
        assume {:print "$at(167,10077,10111)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // trace_local[collection_addr]($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:258:13+15
    assume {:print "$track_local(68,10,4):", $t7} $t7 == $t7;

    // $t9 := exists<collection::FixedSupply>($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:259:13+6
    assume {:print "$at(167,10125,10131)"} true;
    $t9 := $ResourceExists($4_collection_FixedSupply_$memory, $t7);

    // if ($t9) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:259:9+1211
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:260:57+15
    assume {:print "$at(167,10221,10236)"} true;
L1:

    // $t10 := borrow_global<collection::FixedSupply>($t7) on_abort goto L10 with $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:260:26+17
    assume {:print "$at(167,10190,10207)"} true;
    if (!$ResourceExists($4_collection_FixedSupply_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t7), EmptyVec(), $ResourceValue($4_collection_FixedSupply_$memory, $t7));
    }
    if ($abort_flag) {
        assume {:print "$at(167,10190,10207)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // trace_local[supply]($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:260:17+6
    $temp_0'$4_collection_FixedSupply' := $Dereference($t10);
    assume {:print "$track_local(68,10,5):", $temp_0'$4_collection_FixedSupply'} $temp_0'$4_collection_FixedSupply' == $temp_0'$4_collection_FixedSupply';

    // $t11 := get_field<collection::FixedSupply>.current_supply($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:261:37+21
    assume {:print "$at(167,10275,10296)"} true;
    $t11 := $Dereference($t10)->$current_supply;

    // $t12 := 1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:261:61+1
    $t12 := 1;
    assume $IsValid'u64'($t12);

    // $t13 := +($t11, $t12) on_abort goto L10 with $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:261:59+1
    call $t13 := $AddU64($t11, $t12);
    if ($abort_flag) {
        assume {:print "$at(167,10297,10298)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // $t14 := borrow_field<collection::FixedSupply>.current_supply($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:261:13+21
    $t14 := $ChildMutation($t10, 0, $Dereference($t10)->$current_supply);

    // write_ref($t14, $t13) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:261:13+49
    $t14 := $UpdateMutation($t14, $t13);

    // write_back[Reference($t10).current_supply (u64)]($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:261:13+49
    $t10 := $UpdateMutation($t10, $Update'$4_collection_FixedSupply'_current_supply($Dereference($t10), $Dereference($t14)));

    // $t15 := get_field<collection::FixedSupply>.total_minted($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:262:35+19
    assume {:print "$at(167,10336,10355)"} true;
    $t15 := $Dereference($t10)->$total_minted;

    // $t16 := 1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:262:57+1
    $t16 := 1;
    assume $IsValid'u64'($t16);

    // $t17 := +($t15, $t16) on_abort goto L10 with $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:262:55+1
    call $t17 := $AddU64($t15, $t16);
    if ($abort_flag) {
        assume {:print "$at(167,10356,10357)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // $t18 := borrow_field<collection::FixedSupply>.total_minted($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:262:13+19
    $t18 := $ChildMutation($t10, 2, $Dereference($t10)->$total_minted);

    // write_ref($t18, $t17) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:262:13+45
    $t18 := $UpdateMutation($t18, $t17);

    // write_back[Reference($t10).total_minted (u64)]($t18) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:262:13+45
    $t10 := $UpdateMutation($t10, $Update'$4_collection_FixedSupply'_total_minted($Dereference($t10), $Dereference($t18)));

    // $t19 := get_field<collection::FixedSupply>.current_supply($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:264:17+21
    assume {:print "$at(167,10398,10419)"} true;
    $t19 := $Dereference($t10)->$current_supply;

    // $t20 := get_field<collection::FixedSupply>.max_supply($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:264:42+17
    $t20 := $Dereference($t10)->$max_supply;

    // $t21 := <=($t19, $t20) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:264:39+2
    call $t21 := $Le($t19, $t20);

    // if ($t21) goto L3 else goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:263:13+148
    assume {:print "$at(167,10373,10521)"} true;
    if ($t21) { goto L3; } else { goto L2; }

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:263:13+148
L3:

    // goto L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:263:13+148
    assume {:print "$at(167,10373,10521)"} true;
    goto L4;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:263:13+148
L2:

    // write_back[collection::FixedSupply@]($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:263:13+148
    assume {:print "$at(167,10373,10521)"} true;
    $4_collection_FixedSupply_$memory := $ResourceUpdate($4_collection_FixedSupply_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // destroy($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:263:13+148

    // $t22 := 2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:265:37+27
    assume {:print "$at(167,10478,10505)"} true;
    $t22 := 2;
    assume $IsValid'u64'($t22);

    // $t23 := error::out_of_range($t22) on_abort goto L10 with $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:265:17+48
    call $t23 := $1_error_out_of_range($t22);
    if ($abort_flag) {
        assume {:print "$at(167,10458,10506)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // trace_abort($t23) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:263:13+148
    assume {:print "$at(167,10373,10521)"} true;
    assume {:print "$track_abort(68,10):", $t23} $t23 == $t23;

    // $t8 := move($t23) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:263:13+148
    $t8 := $t23;

    // goto L10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:263:13+148
    goto L10;

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:267:36+6
    assume {:print "$at(167,10558,10564)"} true;
L4:

    // $t24 := borrow_field<collection::FixedSupply>.mint_events($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:267:31+23
    assume {:print "$at(167,10553,10576)"} true;
    $t24 := $ChildMutation($t10, 4, $Dereference($t10)->$mint_events);

    // $t25 := get_field<collection::FixedSupply>.total_minted($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:269:28+19
    assume {:print "$at(167,10633,10652)"} true;
    $t25 := $Dereference($t10)->$total_minted;

    // $t26 := pack collection::MintEvent($t25, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:268:17+104
    assume {:print "$at(167,10594,10698)"} true;
    $t26 := $4_collection_MintEvent($t25, $t1);

    // opaque begin: event::emit_event<collection::MintEvent>($t24, $t26) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:267:13+178
    assume {:print "$at(167,10535,10713)"} true;

    // opaque end: event::emit_event<collection::MintEvent>($t24, $t26) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:267:13+178

    // write_back[Reference($t10).mint_events (event::EventHandle<collection::MintEvent>)]($t24) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:267:13+178
    $t10 := $UpdateMutation($t10, $Update'$4_collection_FixedSupply'_mint_events($Dereference($t10), $Dereference($t24)));

    // $t27 := get_field<collection::FixedSupply>.total_minted($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:273:26+19
    assume {:print "$at(167,10740,10759)"} true;
    $t27 := $Dereference($t10)->$total_minted;

    // write_back[collection::FixedSupply@]($t10) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:273:26+19
    $4_collection_FixedSupply_$memory := $ResourceUpdate($4_collection_FixedSupply_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // $t3 := opaque begin: option::some<u64>($t27) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:273:13+33

    // assume And(WellFormed($t3), Le(Len<u64>(select option::Option.vec($t3)), 1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:273:13+33
    assume ($IsValid'$1_option_Option'u64''($t3) && (LenVec($t3->$vec) <= 1));

    // assume Eq<option::Option<u64>>($t3, option::spec_some<u64>($t27)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:273:13+33
    assume $IsEqual'$1_option_Option'u64''($t3, $1_option_spec_some'u64'($t27));

    // $t3 := opaque end: option::some<u64>($t27) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:273:13+33

    // goto L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:259:9+1211
    assume {:print "$at(167,10121,11332)"} true;
    goto L5;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:274:44+15
    assume {:print "$at(167,10804,10819)"} true;
L0:

    // $t28 := exists<collection::UnlimitedSupply>($t7) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:274:20+6
    assume {:print "$at(167,10780,10786)"} true;
    $t28 := $ResourceExists($4_collection_UnlimitedSupply_$memory, $t7);

    // if ($t28) goto L7 else goto L6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:274:16+556
    if ($t28) { goto L7; } else { goto L6; }

    // label L7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:275:61+15
    assume {:print "$at(167,10884,10899)"} true;
L7:

    // $t29 := borrow_global<collection::UnlimitedSupply>($t7) on_abort goto L10 with $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:275:26+17
    assume {:print "$at(167,10849,10866)"} true;
    if (!$ResourceExists($4_collection_UnlimitedSupply_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t29 := $Mutation($Global($t7), EmptyVec(), $ResourceValue($4_collection_UnlimitedSupply_$memory, $t7));
    }
    if ($abort_flag) {
        assume {:print "$at(167,10849,10866)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // trace_local[supply#1]($t29) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:275:17+6
    $temp_0'$4_collection_UnlimitedSupply' := $Dereference($t29);
    assume {:print "$track_local(68,10,6):", $temp_0'$4_collection_UnlimitedSupply'} $temp_0'$4_collection_UnlimitedSupply' == $temp_0'$4_collection_UnlimitedSupply';

    // $t30 := get_field<collection::UnlimitedSupply>.current_supply($t29) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:276:37+21
    assume {:print "$at(167,10938,10959)"} true;
    $t30 := $Dereference($t29)->$current_supply;

    // $t31 := 1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:276:61+1
    $t31 := 1;
    assume $IsValid'u64'($t31);

    // $t32 := +($t30, $t31) on_abort goto L10 with $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:276:59+1
    call $t32 := $AddU64($t30, $t31);
    if ($abort_flag) {
        assume {:print "$at(167,10960,10961)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // $t33 := borrow_field<collection::UnlimitedSupply>.current_supply($t29) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:276:13+21
    $t33 := $ChildMutation($t29, 0, $Dereference($t29)->$current_supply);

    // write_ref($t33, $t32) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:276:13+49
    $t33 := $UpdateMutation($t33, $t32);

    // write_back[Reference($t29).current_supply (u64)]($t33) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:276:13+49
    $t29 := $UpdateMutation($t29, $Update'$4_collection_UnlimitedSupply'_current_supply($Dereference($t29), $Dereference($t33)));

    // $t34 := get_field<collection::UnlimitedSupply>.total_minted($t29) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:277:35+19
    assume {:print "$at(167,10999,11018)"} true;
    $t34 := $Dereference($t29)->$total_minted;

    // $t35 := 1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:277:57+1
    $t35 := 1;
    assume $IsValid'u64'($t35);

    // $t36 := +($t34, $t35) on_abort goto L10 with $t8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:277:55+1
    call $t36 := $AddU64($t34, $t35);
    if ($abort_flag) {
        assume {:print "$at(167,11019,11020)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // $t37 := borrow_field<collection::UnlimitedSupply>.total_minted($t29) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:277:13+19
    $t37 := $ChildMutation($t29, 1, $Dereference($t29)->$total_minted);

    // write_ref($t37, $t36) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:277:13+45
    $t37 := $UpdateMutation($t37, $t36);

    // write_back[Reference($t29).total_minted (u64)]($t37) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:277:13+45
    $t29 := $UpdateMutation($t29, $Update'$4_collection_UnlimitedSupply'_total_minted($Dereference($t29), $Dereference($t37)));

    // $t38 := borrow_field<collection::UnlimitedSupply>.mint_events($t29) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:279:17+23
    assume {:print "$at(167,11071,11094)"} true;
    $t38 := $ChildMutation($t29, 3, $Dereference($t29)->$mint_events);

    // $t39 := get_field<collection::UnlimitedSupply>.total_minted($t29) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:281:28+19
    assume {:print "$at(167,11151,11170)"} true;
    $t39 := $Dereference($t29)->$total_minted;

    // $t40 := pack collection::MintEvent($t39, $t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:280:17+104
    assume {:print "$at(167,11112,11216)"} true;
    $t40 := $4_collection_MintEvent($t39, $t1);

    // opaque begin: event::emit_event<collection::MintEvent>($t38, $t40) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:278:13+195
    assume {:print "$at(167,11036,11231)"} true;

    // opaque end: event::emit_event<collection::MintEvent>($t38, $t40) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:278:13+195

    // write_back[Reference($t29).mint_events (event::EventHandle<collection::MintEvent>)]($t38) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:278:13+195
    $t29 := $UpdateMutation($t29, $Update'$4_collection_UnlimitedSupply'_mint_events($Dereference($t29), $Dereference($t38)));

    // $t41 := get_field<collection::UnlimitedSupply>.total_minted($t29) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:285:26+19
    assume {:print "$at(167,11258,11277)"} true;
    $t41 := $Dereference($t29)->$total_minted;

    // write_back[collection::UnlimitedSupply@]($t29) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:285:26+19
    $4_collection_UnlimitedSupply_$memory := $ResourceUpdate($4_collection_UnlimitedSupply_$memory, $GlobalLocationAddress($t29),
        $Dereference($t29));

    // $t2 := opaque begin: option::some<u64>($t41) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:285:13+33

    // assume And(WellFormed($t2), Le(Len<u64>(select option::Option.vec($t2)), 1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:285:13+33
    assume ($IsValid'$1_option_Option'u64''($t2) && (LenVec($t2->$vec) <= 1));

    // assume Eq<option::Option<u64>>($t2, option::spec_some<u64>($t41)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:285:13+33
    assume $IsEqual'$1_option_Option'u64''($t2, $1_option_spec_some'u64'($t41));

    // $t2 := opaque end: option::some<u64>($t41) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:285:13+33

    // goto L8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:274:16+556
    assume {:print "$at(167,10776,11332)"} true;
    goto L8;

    // label L6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:287:13+14
    assume {:print "$at(167,11308,11322)"} true;
L6:

    // $t2 := opaque begin: option::none<u64>() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:287:13+14
    assume {:print "$at(167,11308,11322)"} true;

    // assume And(WellFormed($t2), Le(Len<u64>(select option::Option.vec($t2)), 1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:287:13+14
    assume ($IsValid'$1_option_Option'u64''($t2) && (LenVec($t2->$vec) <= 1));

    // assume Eq<option::Option<u64>>($t2, option::spec_none<u64>()) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:287:13+14
    assume $IsEqual'$1_option_Option'u64''($t2, $1_option_spec_none'u64'());

    // $t2 := opaque end: option::none<u64>() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:287:13+14

    // label L8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:274:16+556
    assume {:print "$at(167,10776,11332)"} true;
L8:

    // $t3 := $t2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:259:9+1211
    assume {:print "$at(167,10121,11332)"} true;
    $t3 := $t2;

    // label L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:259:9+1211
L5:

    // trace_return[0]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:259:9+1211
    assume {:print "$at(167,10121,11332)"} true;
    assume {:print "$track_return(68,10,0):", $t3} $t3 == $t3;

    // label L9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:289:5+1
    assume {:print "$at(167,11337,11338)"} true;
L9:

    // return $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:289:5+1
    assume {:print "$at(167,11337,11338)"} true;
    $ret0 := $t3;
    return;

    // label L10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:289:5+1
L10:

    // abort($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/collection.move:289:5+1
    assume {:print "$at(167,11337,11338)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// struct token::MutationEvent at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:70:5+133
datatype $4_token_MutationEvent {
    $4_token_MutationEvent($mutated_field_name: $1_string_String, $old_value: $1_string_String, $new_value: $1_string_String)
}
function {:inline} $Update'$4_token_MutationEvent'_mutated_field_name(s: $4_token_MutationEvent, x: $1_string_String): $4_token_MutationEvent {
    $4_token_MutationEvent(x, s->$old_value, s->$new_value)
}
function {:inline} $Update'$4_token_MutationEvent'_old_value(s: $4_token_MutationEvent, x: $1_string_String): $4_token_MutationEvent {
    $4_token_MutationEvent(s->$mutated_field_name, x, s->$new_value)
}
function {:inline} $Update'$4_token_MutationEvent'_new_value(s: $4_token_MutationEvent, x: $1_string_String): $4_token_MutationEvent {
    $4_token_MutationEvent(s->$mutated_field_name, s->$old_value, x)
}
function $IsValid'$4_token_MutationEvent'(s: $4_token_MutationEvent): bool {
    $IsValid'$1_string_String'(s->$mutated_field_name)
      && $IsValid'$1_string_String'(s->$old_value)
      && $IsValid'$1_string_String'(s->$new_value)
}
function {:inline} $IsEqual'$4_token_MutationEvent'(s1: $4_token_MutationEvent, s2: $4_token_MutationEvent): bool {
    $IsEqual'$1_string_String'(s1->$mutated_field_name, s2->$mutated_field_name)
    && $IsEqual'$1_string_String'(s1->$old_value, s2->$old_value)
    && $IsEqual'$1_string_String'(s1->$new_value, s2->$new_value)}

// struct token::Token at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:38:5+811
datatype $4_token_Token {
    $4_token_Token($collection: $1_object_Object'$4_collection_Collection', $index: int, $description: $1_string_String, $name: $1_string_String, $uri: $1_string_String, $mutation_events: $1_event_EventHandle'$4_token_MutationEvent')
}
function {:inline} $Update'$4_token_Token'_collection(s: $4_token_Token, x: $1_object_Object'$4_collection_Collection'): $4_token_Token {
    $4_token_Token(x, s->$index, s->$description, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_index(s: $4_token_Token, x: int): $4_token_Token {
    $4_token_Token(s->$collection, x, s->$description, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_description(s: $4_token_Token, x: $1_string_String): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, x, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_name(s: $4_token_Token, x: $1_string_String): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, s->$description, x, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_uri(s: $4_token_Token, x: $1_string_String): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, s->$description, s->$name, x, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_mutation_events(s: $4_token_Token, x: $1_event_EventHandle'$4_token_MutationEvent'): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, s->$description, s->$name, s->$uri, x)
}
function $IsValid'$4_token_Token'(s: $4_token_Token): bool {
    $IsValid'$1_object_Object'$4_collection_Collection''(s->$collection)
      && $IsValid'u64'(s->$index)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$uri)
      && $IsValid'$1_event_EventHandle'$4_token_MutationEvent''(s->$mutation_events)
}
function {:inline} $IsEqual'$4_token_Token'(s1: $4_token_Token, s2: $4_token_Token): bool {
    $IsEqual'$1_object_Object'$4_collection_Collection''(s1->$collection, s2->$collection)
    && $IsEqual'u64'(s1->$index, s2->$index)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$uri, s2->$uri)
    && $IsEqual'$1_event_EventHandle'$4_token_MutationEvent''(s1->$mutation_events, s2->$mutation_events)}
var $4_token_Token_$memory: $Memory $4_token_Token;

// fun token::create_named_token [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:167:5+570
procedure {:inline 1} $4_token_create_named_token(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_string_String, _$t4: $1_option_Option'$4_royalty_Royalty', _$t5: $1_string_String) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t6: $1_string_String;
    var $t7: $1_object_Object'$4_collection_Collection';
    var $t8: $1_string_String;
    var $t9: $1_object_ConstructorRef;
    var $t10: $1_object_ConstructorRef;
    var $t11: int;
    var $t12: int;
    var $t13: $1_string_String;
    var $t14: $1_option_Option'u64';
    var $t15: int;
    var $t16: $1_string_String;
    var $t17: $1_string_String;
    var $t18: $1_string_String;
    var $t19: $1_option_Option'$1_string_String';
    var $t20: $signer;
    var $t21: $1_option_Option'$4_royalty_Royalty';
    var $t22: Vec (int);
    var $t23: $4_token_Token;
    var $t24: $1_string_String;
    var $t25: int;
    var $t26: int;
    var $t27: Vec (int);
    var $t28: int;
    var $t29: int;
    var $t30: $1_object_ConstructorRef;
    var $t31: $1_option_Option'$1_string_String';
    var $t32: $1_option_Option'$1_string_String';
    var $t33: bool;
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: $1_option_Option'$1_string_String';
    var $t38: $1_string_String;
    var $t39: bool;
    var $t40: int;
    var $t41: int;
    var $t42: int;
    var $t43: bool;
    var $t44: int;
    var $t45: int;
    var $t46: int;
    var $t47: int;
    var $t48: bool;
    var $t49: int;
    var $t50: int;
    var $t51: int;
    var $t52: int;
    var $t53: bool;
    var $t54: int;
    var $t55: int;
    var $t56: int;
    var $t57: int;
    var $t58: bool;
    var $t59: int;
    var $t60: int;
    var $t61: $signer;
    var $t62: int;
    var $t63: $1_object_Object'$4_collection_Collection';
    var $t64: int;
    var $t65: $Mutation ($1_option_Option'u64');
    var $t66: $1_option_Option'u64';
    var $t67: int;
    var $t68: int;
    var $t69: $1_option_Option'$1_string_String';
    var $t70: bool;
    var $t71: $Mutation ($1_string_String);
    var $t72: $1_string_String;
    var $t73: $Mutation ($1_string_String);
    var $t74: $Mutation ($1_option_Option'$1_string_String');
    var $t75: $1_string_String;
    var $t76: $1_option_Option'$1_string_String';
    var $t77: bool;
    var $t78: $1_string_String;
    var $t79: $1_object_ObjectCore;
    var $t80: $1_event_EventHandle'$4_token_MutationEvent';
    var $t81: $4_token_Token;
    var $t82: $1_option_Option'$4_royalty_Royalty';
    var $t83: bool;
    var $t84: $Mutation ($1_option_Option'$4_royalty_Royalty');
    var $t85: $4_royalty_Royalty;
    var $t86: $1_option_Option'$4_royalty_Royalty';
    var $t87: bool;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: $1_option_Option'$4_royalty_Royalty';
    var $t5: $1_string_String;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_option_Option'$1_string_String'': $1_option_Option'$1_string_String';
    var $temp_0'$1_option_Option'$4_royalty_Royalty'': $1_option_Option'$4_royalty_Royalty';
    var $temp_0'$1_option_Option'u64'': $1_option_Option'u64';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$4_token_Token': $4_token_Token;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;

    // bytecode translation starts here
    // trace_local[creator]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:167:5+1
    assume {:print "$at(170,7245,7246)"} true;
    assume {:print "$track_local(69,6,0):", $t0} $t0 == $t0;

    // trace_local[collection_name]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:167:5+1
    assume {:print "$track_local(69,6,1):", $t1} $t1 == $t1;

    // trace_local[description]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:167:5+1
    assume {:print "$track_local(69,6,2):", $t2} $t2 == $t2;

    // trace_local[name]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:167:5+1
    assume {:print "$track_local(69,6,3):", $t3} $t3 == $t3;

    // trace_local[royalty]($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:167:5+1
    assume {:print "$track_local(69,6,4):", $t4} $t4 == $t4;

    // trace_local[uri]($t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:167:5+1
    assume {:print "$track_local(69,6,5):", $t5} $t5 == $t5;

    // $t25 := signer::address_of($t0) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:175:31+27
    assume {:print "$at(170,7495,7522)"} true;
    call $t25 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(170,7495,7522)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // trace_local[creator_address]($t25) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:175:13+15
    assume {:print "$track_local(69,6,11):", $t25} $t25 == $t25;

    // $t27 := token::create_token_seed($t1, $t3) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:176:20+42
    assume {:print "$at(170,7543,7585)"} true;
    call $t27 := $4_token_create_token_seed($t1, $t3);
    if ($abort_flag) {
        assume {:print "$at(170,7543,7585)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // trace_local[seed]($t27) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:176:13+4
    assume {:print "$track_local(69,6,22):", $t27} $t27 == $t27;

    // assume Identical($t28, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:68:9+50
    assume {:print "$at(133,2456,2506)"} true;
    assume ($t28 == $1_signer_$address_of($t0));

    // assume Identical($t29, object::spec_create_object_address($t28, $t27)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:69:9+65
    assume {:print "$at(133,2515,2580)"} true;
    assume ($t29 == $1_object_spec_create_object_address($t28, $t27));

    // $t30 := object::create_named_object($t0, $t27) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:178:31+42
    assume {:print "$at(170,7618,7660)"} true;
    call $t30 := $1_object_create_named_object($t0, $t27);
    if ($abort_flag) {
        assume {:print "$at(170,7618,7660)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // trace_local[constructor_ref]($t30) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:178:13+15
    assume {:print "$track_local(69,6,9):", $t30} $t30 == $t30;

    // $t31 := opaque begin: option::none<string::String>() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:179:94+14
    assume {:print "$at(170,7755,7769)"} true;

    // assume And(WellFormed($t31), Le(Len<string::String>(select option::Option.vec($t31)), 1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:179:94+14
    assume ($IsValid'$1_option_Option'$1_string_String''($t31) && (LenVec($t31->$vec) <= 1));

    // assume Eq<option::Option<string::String>>($t31, option::spec_none<string::String>()) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:179:94+14
    assume $IsEqual'$1_option_Option'$1_string_String''($t31, $1_option_spec_none'$1_string_String'());

    // $t31 := opaque end: option::none<string::String>() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:179:94+14

    // trace_local[uri#426]($t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:86:9+3
    assume {:print "$at(170,3565,3568)"} true;
    assume {:print "$track_local(69,6,24):", $t5} $t5 == $t5;

    // $t21 := $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:85:9+7
    assume {:print "$at(170,3531,3538)"} true;
    $t21 := $t4;

    // trace_local[royalty#425]($t21) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:85:9+7
    assume {:print "$track_local(69,6,21):", $t21} $t21 == $t21;

    // $t19 := $t31 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:84:9+22
    assume {:print "$at(170,3483,3505)"} true;
    $t19 := $t31;

    // trace_local[name_with_index_suffix#424]($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:84:9+22
    assume {:print "$track_local(69,6,19):", $t19} $t19 == $t19;

    // trace_local[name_prefix#423]($t3) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:81:9+11
    assume {:print "$at(170,3291,3302)"} true;
    assume {:print "$track_local(69,6,18):", $t3} $t3 == $t3;

    // trace_local[description#422]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:80:9+11
    assume {:print "$at(170,3262,3273)"} true;
    assume {:print "$track_local(69,6,13):", $t2} $t2 == $t2;

    // trace_local[collection_name#421]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:79:9+15
    assume {:print "$at(170,3229,3244)"} true;
    assume {:print "$track_local(69,6,8):", $t1} $t1 == $t1;

    // trace_local[creator_address#420]($t25) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:78:9+15
    assume {:print "$at(170,3195,3210)"} true;
    assume {:print "$track_local(69,6,12):", $t25} $t25 == $t25;

    // trace_local[constructor_ref#419]($t30) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:77:9+15
    assume {:print "$at(170,3153,3168)"} true;
    assume {:print "$track_local(69,6,10):", $t30} $t30 == $t30;

    // $t32 := copy($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:88:29+23
    assume {:print "$at(170,3614,3637)"} true;
    $t32 := $t19;

    // $t33 := opaque begin: option::is_some<string::String>($t32) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:88:13+40

    // assume WellFormed($t33) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:88:13+40
    assume $IsValid'bool'($t33);

    // assume Eq<bool>($t33, option::spec_is_some<string::String>($t32)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:88:13+40
    assume $IsEqual'bool'($t33, $1_option_spec_is_some'$1_string_String'($t32));

    // $t33 := opaque end: option::is_some<string::String>($t32) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:88:13+40

    // if ($t33) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:88:9+499
    if ($t33) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:36+12
    assume {:print "$at(170,3801,3813)"} true;
L1:

    // $t34 := string::length($t3) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:21+28
    assume {:print "$at(170,3786,3814)"} true;
    call $t34 := $1_string_length($t3);
    if ($abort_flag) {
        assume {:print "$at(170,3786,3814)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // $t35 := 20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:52+2
    $t35 := 20;
    assume $IsValid'u64'($t35);

    // $t36 := +($t34, $t35) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:50+1
    call $t36 := $AddU64($t34, $t35);
    if ($abort_flag) {
        assume {:print "$at(170,3815,3816)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // $t37 := copy($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:87+23
    $t37 := $t19;

    // $t38 := opaque begin: option::borrow<string::String>($t37) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:72+39

    // assume Identical($t39, option::spec_is_none<string::String>($t37)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:72+39
    assume ($t39 == $1_option_spec_is_none'$1_string_String'($t37));

    // if ($t39) goto L23 else goto L22 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:72+39
    if ($t39) { goto L23; } else { goto L22; }

    // label L23 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:72+39
L23:

    // assume And(option::spec_is_none<string::String>($t37), Eq(262145, $t26)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:72+39
    assume {:print "$at(170,3837,3876)"} true;
    assume ($1_option_spec_is_none'$1_string_String'($t37) && $IsEqual'num'(262145, $t26));

    // trace_abort($t26) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:72+39
    assume {:print "$at(170,3837,3876)"} true;
    assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;

    // goto L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:72+39
    goto L21;

    // label L22 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:72+39
L22:

    // assume WellFormed($t38) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:72+39
    assume {:print "$at(170,3837,3876)"} true;
    assume $IsValid'$1_string_String'($t38);

    // assume Eq<string::String>($t38, option::spec_borrow<string::String>($t37)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:72+39
    assume $IsEqual'$1_string_String'($t38, $1_option_spec_borrow'$1_string_String'($t37));

    // $t38 := opaque end: option::borrow<string::String>($t37) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:72+39

    // $t40 := string::length($t38) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:57+55
    call $t40 := $1_string_length($t38);
    if ($abort_flag) {
        assume {:print "$at(170,3822,3877)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // $t41 := +($t36, $t40) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:55+1
    call $t41 := $AddU64($t36, $t40);
    if ($abort_flag) {
        assume {:print "$at(170,3820,3821)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // $t42 := 128 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:116+21
    $t42 := 128;
    assume $IsValid'u64'($t42);

    // $t43 := <=($t41, $t42) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:113+2
    call $t43 := $Le($t41, $t42);

    // if ($t43) goto L3 else goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:13+168
    if ($t43) { goto L3; } else { goto L2; }

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:13+168
L3:

    // goto L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:13+168
    assume {:print "$at(170,3778,3946)"} true;
    goto L4;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:13+168
L2:

    // $t44 := 4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:159+20
    assume {:print "$at(170,3924,3944)"} true;
    $t44 := 4;
    assume $IsValid'u64'($t44);

    // $t45 := error::out_of_range($t44) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:139+41
    call $t45 := $1_error_out_of_range($t44);
    if ($abort_flag) {
        assume {:print "$at(170,3904,3945)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // trace_abort($t45) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:13+168
    assume {:print "$at(170,3778,3946)"} true;
    assume {:print "$track_abort(69,6):", $t45} $t45 == $t45;

    // $t26 := move($t45) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:13+168
    $t26 := $t45;

    // goto L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:13+168
    goto L21;

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:181+1
L4:

    // goto L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:90:181+1
    assume {:print "$at(170,3946,3947)"} true;
    goto L5;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:92:36+12
    assume {:print "$at(170,4000,4012)"} true;
L0:

    // $t46 := string::length($t3) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:92:21+28
    assume {:print "$at(170,3985,4013)"} true;
    call $t46 := $1_string_length($t3);
    if ($abort_flag) {
        assume {:print "$at(170,3985,4013)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // $t47 := 128 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:92:53+21
    $t47 := 128;
    assume $IsValid'u64'($t47);

    // $t48 := <=($t46, $t47) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:92:50+2
    call $t48 := $Le($t46, $t47);

    // if ($t48) goto L7 else goto L6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:92:13+105
    if ($t48) { goto L7; } else { goto L6; }

    // label L7 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:92:13+105
L7:

    // goto L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:92:13+105
    assume {:print "$at(170,3977,4082)"} true;
    goto L5;

    // label L6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:92:13+105
L6:

    // $t49 := 4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:92:96+20
    assume {:print "$at(170,4060,4080)"} true;
    $t49 := 4;
    assume $IsValid'u64'($t49);

    // $t50 := error::out_of_range($t49) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:92:76+41
    call $t50 := $1_error_out_of_range($t49);
    if ($abort_flag) {
        assume {:print "$at(170,4040,4081)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // trace_abort($t50) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:92:13+105
    assume {:print "$at(170,3977,4082)"} true;
    assume {:print "$track_abort(69,6):", $t50} $t50 == $t50;

    // $t26 := move($t50) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:92:13+105
    $t26 := $t50;

    // goto L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:92:13+105
    goto L21;

    // label L5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:94:32+12
    assume {:print "$at(170,4126,4138)"} true;
L5:

    // $t51 := string::length($t2) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:94:17+28
    assume {:print "$at(170,4111,4139)"} true;
    call $t51 := $1_string_length($t2);
    if ($abort_flag) {
        assume {:print "$at(170,4111,4139)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // $t52 := 2048 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:94:49+22
    $t52 := 2048;
    assume $IsValid'u64'($t52);

    // $t53 := <=($t51, $t52) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:94:46+2
    call $t53 := $Le($t51, $t52);

    // if ($t53) goto L9 else goto L8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:94:9+107
    if ($t53) { goto L9; } else { goto L8; }

    // label L9 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:94:9+107
L9:

    // goto L10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:94:9+107
    assume {:print "$at(170,4103,4210)"} true;
    goto L10;

    // label L8 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:94:9+107
L8:

    // $t54 := 6 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:94:93+21
    assume {:print "$at(170,4187,4208)"} true;
    $t54 := 6;
    assume $IsValid'u64'($t54);

    // $t55 := error::out_of_range($t54) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:94:73+42
    call $t55 := $1_error_out_of_range($t54);
    if ($abort_flag) {
        assume {:print "$at(170,4167,4209)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // trace_abort($t55) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:94:9+107
    assume {:print "$at(170,4103,4210)"} true;
    assume {:print "$track_abort(69,6):", $t55} $t55 == $t55;

    // $t26 := move($t55) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:94:9+107
    $t26 := $t55;

    // goto L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:94:9+107
    goto L21;

    // label L10 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:95:32+4
    assume {:print "$at(170,4243,4247)"} true;
L10:

    // $t56 := string::length($t5) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:95:17+20
    assume {:print "$at(170,4228,4248)"} true;
    call $t56 := $1_string_length($t5);
    if ($abort_flag) {
        assume {:print "$at(170,4228,4248)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // $t57 := 512 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:95:41+14
    $t57 := 512;
    assume $IsValid'u64'($t57);

    // $t58 := <=($t56, $t57) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:95:38+2
    call $t58 := $Le($t56, $t57);

    // if ($t58) goto L12 else goto L11 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:95:9+83
    if ($t58) { goto L12; } else { goto L11; }

    // label L12 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:95:9+83
L12:

    // goto L13 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:95:9+83
    assume {:print "$at(170,4220,4303)"} true;
    goto L13;

    // label L11 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:95:9+83
L11:

    // $t59 := 5 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:95:77+13
    assume {:print "$at(170,4288,4301)"} true;
    $t59 := 5;
    assume $IsValid'u64'($t59);

    // $t60 := error::out_of_range($t59) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:95:57+34
    call $t60 := $1_error_out_of_range($t59);
    if ($abort_flag) {
        assume {:print "$at(170,4268,4302)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // trace_abort($t60) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:95:9+83
    assume {:print "$at(170,4220,4303)"} true;
    assume {:print "$track_abort(69,6):", $t60} $t60 == $t60;

    // $t26 := move($t60) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:95:9+83
    $t26 := $t60;

    // goto L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:95:9+83
    goto L21;

    // label L13 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:97:53+15
    assume {:print "$at(170,4358,4373)"} true;
L13:

    // $t61 := object::generate_signer($t30) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:97:29+40
    assume {:print "$at(170,4334,4374)"} true;
    call $t61 := $1_object_generate_signer($t30);
    if ($abort_flag) {
        assume {:print "$at(170,4334,4374)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // trace_local[object_signer#427]($t61) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:97:13+13
    assume {:print "$track_local(69,6,20):", $t61} $t61 == $t61;

    // $t62 := collection::create_collection_address($t25, $t1) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:99:31+73
    assume {:print "$at(170,4407,4480)"} true;
    call $t62 := $4_collection_create_collection_address($t25, $t1);
    if ($abort_flag) {
        assume {:print "$at(170,4407,4480)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // $t63 := object::address_to_object<collection::Collection>($t62) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:100:26+54
    assume {:print "$at(170,4507,4561)"} true;
    call $t63 := $1_object_address_to_object'$4_collection_Collection'($t62);
    if ($abort_flag) {
        assume {:print "$at(170,4507,4561)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // trace_local[collection#429]($t63) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:100:13+10
    assume {:print "$track_local(69,6,7):", $t63} $t63 == $t63;

    // $t64 := signer::address_of($t61) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:101:60+34
    assume {:print "$at(170,4622,4656)"} true;
    call $t64 := $1_signer_address_of($t61);
    if ($abort_flag) {
        assume {:print "$at(170,4622,4656)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // $t14 := collection::increment_supply($t63, $t64) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:101:18+77
    call $t14 := $4_collection_increment_supply($t63, $t64);
    if ($abort_flag) {
        assume {:print "$at(170,4580,4657)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // trace_local[id#430]($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:101:13+2
    assume {:print "$track_local(69,6,14):", $t14} $t14 == $t14;

    // $t65 := borrow_local($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:103:46+7
    assume {:print "$at(170,4705,4712)"} true;
    $t65 := $Mutation($Local(14), EmptyVec(), $t14);

    // $t66 := read_ref($t65) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:103:45+12
    $t66 := $Dereference($t65);

    // pack_ref_deep($t65) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:103:45+12

    // trace_local[id#430]($t14) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:103:45+12
    assume {:print "$track_local(69,6,14):", $t14} $t14 == $t14;

    // $t67 := 0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:103:55+1
    $t67 := 0;
    assume $IsValid'u64'($t67);

    // $t68 := opaque begin: option::get_with_default<u64>($t66, $t67) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:103:21+36

    // assume WellFormed($t68) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:103:21+36
    assume $IsValid'u64'($t68);

    // assume Eq<u64>($t68, if option::spec_is_some<u64>($t66) {
    //   option::spec_borrow<u64>($t66)
    // } else {
    //   $t67
    // }) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:103:21+36
    assume $IsEqual'u64'($t68, (if ($1_option_spec_is_some'u64'($t66)) then ($1_option_spec_borrow'u64'($t66)) else ($t67)));

    // $t68 := opaque end: option::get_with_default<u64>($t66, $t67) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:103:21+36

    // trace_local[index#431]($t68) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:103:13+5
    assume {:print "$track_local(69,6,15):", $t68} $t68 == $t68;

    // $t69 := copy($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:105:40+23
    assume {:print "$at(170,4827,4850)"} true;
    $t69 := $t19;

    // $t70 := opaque begin: option::is_some<string::String>($t69) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:105:24+40

    // assume WellFormed($t70) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:105:24+40
    assume $IsValid'bool'($t70);

    // assume Eq<bool>($t70, option::spec_is_some<string::String>($t69)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:105:24+40
    assume $IsEqual'bool'($t70, $1_option_spec_is_some'$1_string_String'($t69));

    // $t70 := opaque end: option::is_some<string::String>($t69) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:105:24+40

    // if ($t70) goto L15 else goto L14 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:105:20+299
    if ($t70) { goto L15; } else { goto L14; }

    // label L15 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:106:24+11
    assume {:print "$at(170,4878,4889)"} true;
L15:

    // $t16 := $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:106:17+4
    assume {:print "$at(170,4871,4875)"} true;
    $t16 := $t3;

    // trace_local[name#432]($t16) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:106:17+4
    assume {:print "$track_local(69,6,16):", $t16} $t16 == $t16;

    // $t71 := borrow_local($t16) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:107:28+9
    assume {:print "$at(170,4918,4927)"} true;
    $t71 := $Mutation($Local(16), EmptyVec(), $t16);

    // $t72 := string_utils::to_string<u64>($t68) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:107:39+22
    call $t72 := $1_string_utils_to_string'u64'($t68);
    if ($abort_flag) {
        assume {:print "$at(170,4929,4951)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // string::append($t71, $t72) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:107:13+49
    call $t71 := $1_string_append($t71, $t72);
    if ($abort_flag) {
        assume {:print "$at(170,4903,4952)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // write_back[LocalRoot($t16)@]($t71) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:107:13+49
    $t16 := $Dereference($t71);

    // trace_local[name#432]($t16) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:107:13+49
    assume {:print "$track_local(69,6,16):", $t16} $t16 == $t16;

    // $t73 := borrow_local($t16) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:28+9
    assume {:print "$at(170,4981,4990)"} true;
    $t73 := $Mutation($Local(16), EmptyVec(), $t16);

    // $t74 := borrow_local($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:55+27
    $t74 := $Mutation($Local(19), EmptyVec(), $t19);

    // $t75 := opaque begin: option::extract<string::String>($t74) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44

    // $t76 := read_ref($t74) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
    $t76 := $Dereference($t74);

    // assume Identical($t77, option::spec_is_none<string::String>($t74)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
    assume ($t77 == $1_option_spec_is_none'$1_string_String'($Dereference($t74)));

    // if ($t77) goto L28 else goto L29 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
    if ($t77) { goto L28; } else { goto L29; }

    // label L25 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
L25:

    // assume And(option::spec_is_none<string::String>($t74), Eq(262145, $t26)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
    assume {:print "$at(170,4992,5036)"} true;
    assume ($1_option_spec_is_none'$1_string_String'($Dereference($t74)) && $IsEqual'num'(262145, $t26));

    // trace_abort($t26) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
    assume {:print "$at(170,4992,5036)"} true;
    assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;

    // goto L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
    goto L21;

    // label L24 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
L24:

    // $t74 := havoc[mut]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
    assume {:print "$at(170,4992,5036)"} true;
    havoc $temp_0'$1_option_Option'$1_string_String'';
    $t74 := $UpdateMutation($t74, $temp_0'$1_option_Option'$1_string_String'');

    // assume And(WellFormed($t74), Le(Len<string::String>(select option::Option.vec($t74)), 1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
    assume ($IsValid'$1_option_Option'$1_string_String''($Dereference($t74)) && (LenVec($Dereference($t74)->$vec) <= 1));

    // assume WellFormed($t75) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
    assume $IsValid'$1_string_String'($t75);

    // assume Eq<string::String>($t75, option::spec_borrow<string::String>($t76)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
    assume $IsEqual'$1_string_String'($t75, $1_option_spec_borrow'$1_string_String'($t76));

    // assume option::spec_is_none<string::String>($t74) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
    assume $1_option_spec_is_none'$1_string_String'($Dereference($t74));

    // $t75 := opaque end: option::extract<string::String>($t74) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44

    // pack_ref_deep($t74) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44

    // write_back[LocalRoot($t19)@]($t74) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
    $t19 := $Dereference($t74);

    // trace_local[name_with_index_suffix#424]($t19) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:39+44
    assume {:print "$track_local(69,6,19):", $t19} $t19 == $t19;

    // string::append($t73, $t75) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:13+71
    call $t73 := $1_string_append($t73, $t75);
    if ($abort_flag) {
        assume {:print "$at(170,4966,5037)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // write_back[LocalRoot($t16)@]($t73) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:13+71
    $t16 := $Dereference($t73);

    // trace_local[name#432]($t16) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:108:13+71
    assume {:print "$track_local(69,6,16):", $t16} $t16 == $t16;

    // $t78 := move($t16) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:109:13+4
    assume {:print "$at(170,5051,5055)"} true;
    $t78 := $t16;

    // $t6 := $t78 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:105:20+299
    assume {:print "$at(170,4807,5106)"} true;
    $t6 := $t78;

    // goto L16 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:105:20+299
    goto L16;

    // label L14 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:111:13+11
    assume {:print "$at(170,5085,5096)"} true;
L14:

    // $t6 := $t3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:105:20+299
    assume {:print "$at(170,4807,5106)"} true;
    $t6 := $t3;

    // label L16 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:105:20+299
L16:

    // trace_local[name#433]($t6) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:105:13+4
    assume {:print "$at(170,4800,4804)"} true;
    assume {:print "$track_local(69,6,17):", $t6} $t6 == $t6;

    // assume Identical($t79, global<object::ObjectCore>(signer::$address_of($t61))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:167:9+65
    assume {:print "$at(133,6354,6419)"} true;
    assume ($t79 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t61)));

    // $t80 := object::new_event_handle<token::MutationEvent>($t61) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:120:30+40
    assume {:print "$at(170,5269,5309)"} true;
    call $t80 := $1_object_new_event_handle'$4_token_MutationEvent'($t61);
    if ($abort_flag) {
        assume {:print "$at(170,5269,5309)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // $t81 := pack token::Token($t63, $t68, $t2, $t6, $t5, $t80) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:114:21+191
    assume {:print "$at(170,5129,5320)"} true;
    $t81 := $4_token_Token($t63, $t68, $t2, $t6, $t5, $t80);

    // trace_local[token#434]($t81) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:114:13+5
    assume {:print "$track_local(69,6,23):", $t81} $t81 == $t81;

    // move_to<token::Token>($t81, $t61) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:122:9+7
    assume {:print "$at(170,5330,5337)"} true;
    if ($ResourceExists($4_token_Token_$memory, $t61->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_token_Token_$memory := $ResourceUpdate($4_token_Token_$memory, $t61->$addr, $t81);
    }
    if ($abort_flag) {
        assume {:print "$at(170,5330,5337)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // $t82 := copy($t21) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:124:29+8
    assume {:print "$at(170,5391,5399)"} true;
    $t82 := $t21;

    // $t83 := opaque begin: option::is_some<royalty::Royalty>($t82) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:124:13+25

    // assume WellFormed($t83) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:124:13+25
    assume $IsValid'bool'($t83);

    // assume Eq<bool>($t83, option::spec_is_some<royalty::Royalty>($t82)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:124:13+25
    assume $IsEqual'bool'($t83, $1_option_spec_is_some'$4_royalty_Royalty'($t82));

    // $t83 := opaque end: option::is_some<royalty::Royalty>($t82) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:124:13+25

    // if ($t83) goto L18 else goto L17 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:124:9+116
    if ($t83) { goto L18; } else { goto L17; }

    // label L18 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:27+15
    assume {:print "$at(170,5430,5445)"} true;
L18:

    // $t84 := borrow_local($t21) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:60+12
    assume {:print "$at(170,5463,5475)"} true;
    $t84 := $Mutation($Local(21), EmptyVec(), $t21);

    // $t85 := opaque begin: option::extract<royalty::Royalty>($t84) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29

    // $t86 := read_ref($t84) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
    $t86 := $Dereference($t84);

    // assume Identical($t87, option::spec_is_none<royalty::Royalty>($t84)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
    assume ($t87 == $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t84)));

    // if ($t87) goto L27 else goto L30 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
    if ($t87) { goto L27; } else { goto L30; }

    // label L27 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
L27:

    // assume And(option::spec_is_none<royalty::Royalty>($t84), Eq(262145, $t26)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
    assume {:print "$at(170,5447,5476)"} true;
    assume ($1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t84)) && $IsEqual'num'(262145, $t26));

    // trace_abort($t26) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
    assume {:print "$at(170,5447,5476)"} true;
    assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;

    // goto L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
    goto L21;

    // label L26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
L26:

    // $t84 := havoc[mut]() at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
    assume {:print "$at(170,5447,5476)"} true;
    havoc $temp_0'$1_option_Option'$4_royalty_Royalty'';
    $t84 := $UpdateMutation($t84, $temp_0'$1_option_Option'$4_royalty_Royalty'');

    // assume And(WellFormed($t84), Le(Len<royalty::Royalty>(select option::Option.vec($t84)), 1)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($Dereference($t84)) && (LenVec($Dereference($t84)->$vec) <= 1));

    // assume WellFormed($t85) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
    assume $IsValid'$4_royalty_Royalty'($t85);

    // assume Eq<royalty::Royalty>($t85, option::spec_borrow<royalty::Royalty>($t86)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
    assume $IsEqual'$4_royalty_Royalty'($t85, $1_option_spec_borrow'$4_royalty_Royalty'($t86));

    // assume option::spec_is_none<royalty::Royalty>($t84) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
    assume $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t84));

    // $t85 := opaque end: option::extract<royalty::Royalty>($t84) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29

    // pack_ref_deep($t84) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29

    // write_back[LocalRoot($t21)@]($t84) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
    $t21 := $Dereference($t84);

    // trace_local[royalty#425]($t21) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:44+29
    assume {:print "$track_local(69,6,21):", $t21} $t21 == $t21;

    // royalty::init($t30, $t85) on_abort goto L21 with $t26 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:13+61
    call $4_royalty_init($t30, $t85);
    if ($abort_flag) {
        assume {:print "$at(170,5416,5477)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(69,6):", $t26} $t26 == $t26;
        goto L21;
    }

    // goto L19 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:125:13+61
    goto L19;

    // label L17 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:124:9+116
    assume {:print "$at(170,5371,5487)"} true;
L17:

    // label L19 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:180:9+15
    assume {:print "$at(170,7794,7809)"} true;
L19:

    // trace_return[0]($t30) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:180:9+15
    assume {:print "$at(170,7794,7809)"} true;
    assume {:print "$track_return(69,6,0):", $t30} $t30 == $t30;

    // label L20 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:181:5+1
    assume {:print "$at(170,7814,7815)"} true;
L20:

    // return $t30 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:181:5+1
    assume {:print "$at(170,7814,7815)"} true;
    $ret0 := $t30;
    return;

    // label L21 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:181:5+1
L21:

    // abort($t26) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:181:5+1
    assume {:print "$at(170,7814,7815)"} true;
    $abort_code := $t26;
    $abort_flag := true;
    return;

    // label L28 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L28:

    // destroy($t73) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L25 at <internal>:1:1+10
    goto L25;

    // label L29 at <internal>:1:1+10
L29:

    // destroy($t74) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L24 at <internal>:1:1+10
    goto L24;

    // label L30 at <internal>:1:1+10
L30:

    // destroy($t84) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L26 at <internal>:1:1+10
    goto L26;

}

// fun token::create_token_seed [baseline] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:206:5+350
procedure {:inline 1} $4_token_create_token_seed(_$t0: $1_string_String, _$t1: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t2: Vec (int);
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation (Vec (int));
    var $t10: Vec (int);
    var $t11: $Mutation (Vec (int));
    var $t12: Vec (int);
    var $t13: Vec (int);
    var $t0: $1_string_String;
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[collection]($t0) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:206:5+1
    assume {:print "$at(170,8899,8900)"} true;
    assume {:print "$track_local(69,9,0):", $t0} $t0 == $t0;

    // trace_local[name]($t1) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:206:5+1
    assume {:print "$track_local(69,9,1):", $t1} $t1 == $t1;

    // $t3 := string::length($t1) on_abort goto L4 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:207:17+20
    assume {:print "$at(170,8994,9014)"} true;
    call $t3 := $1_string_length($t1);
    if ($abort_flag) {
        assume {:print "$at(170,8994,9014)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(69,9):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t5 := 128 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:207:41+21
    $t5 := 128;
    assume $IsValid'u64'($t5);

    // $t6 := <=($t3, $t5) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:207:38+2
    call $t6 := $Le($t3, $t5);

    // if ($t6) goto L1 else goto L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:207:9+97
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:207:9+97
L1:

    // goto L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:207:9+97
    assume {:print "$at(170,8986,9083)"} true;
    goto L2;

    // label L0 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:207:9+97
L0:

    // $t7 := 4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:207:84+20
    assume {:print "$at(170,9061,9081)"} true;
    $t7 := 4;
    assume $IsValid'u64'($t7);

    // $t8 := error::out_of_range($t7) on_abort goto L4 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:207:64+41
    call $t8 := $1_error_out_of_range($t7);
    if ($abort_flag) {
        assume {:print "$at(170,9041,9082)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(69,9):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_abort($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:207:9+97
    assume {:print "$at(170,8986,9083)"} true;
    assume {:print "$track_abort(69,9):", $t8} $t8 == $t8;

    // $t4 := move($t8) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:207:9+97
    $t4 := $t8;

    // goto L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:207:9+97
    goto L4;

    // label L2 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:208:35+10
    assume {:print "$at(170,9119,9129)"} true;
L2:

    // $t2 := string::bytes($t0) on_abort goto L4 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:208:21+25
    assume {:print "$at(170,9105,9130)"} true;
    call $t2 := $1_string_bytes($t0);
    if ($abort_flag) {
        assume {:print "$at(170,9105,9130)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(69,9):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_local[seed]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:208:13+4
    assume {:print "$track_local(69,9,2):", $t2} $t2 == $t2;

    // $t9 := borrow_local($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:209:24+9
    assume {:print "$at(170,9155,9164)"} true;
    $t9 := $Mutation($Local(2), EmptyVec(), $t2);

    // $t10 := [58, 58] at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:209:35+5
    $t10 := MakeVec2(58, 58);
    assume $IsValid'vec'u8''($t10);

    // vector::append<u8>($t9, $t10) on_abort goto L4 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:209:9+32
    call $t9 := $1_vector_append'u8'($t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(170,9140,9172)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(69,9):", $t4} $t4 == $t4;
        goto L4;
    }

    // write_back[LocalRoot($t2)@]($t9) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:209:9+32
    $t2 := $Dereference($t9);

    // trace_local[seed]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:209:9+32
    assume {:print "$track_local(69,9,2):", $t2} $t2 == $t2;

    // $t11 := borrow_local($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:210:24+9
    assume {:print "$at(170,9197,9206)"} true;
    $t11 := $Mutation($Local(2), EmptyVec(), $t2);

    // $t12 := string::bytes($t1) on_abort goto L4 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:210:36+19
    call $t12 := $1_string_bytes($t1);
    if ($abort_flag) {
        assume {:print "$at(170,9209,9228)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(69,9):", $t4} $t4 == $t4;
        goto L4;
    }

    // vector::append<u8>($t11, $t12) on_abort goto L4 with $t4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:210:9+47
    call $t11 := $1_vector_append'u8'($t11, $t12);
    if ($abort_flag) {
        assume {:print "$at(170,9182,9229)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(69,9):", $t4} $t4 == $t4;
        goto L4;
    }

    // write_back[LocalRoot($t2)@]($t11) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:210:9+47
    $t2 := $Dereference($t11);

    // trace_local[seed]($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:210:9+47
    assume {:print "$track_local(69,9,2):", $t2} $t2 == $t2;

    // $t13 := move($t2) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:211:9+4
    assume {:print "$at(170,9239,9243)"} true;
    $t13 := $t2;

    // trace_return[0]($t13) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:211:9+4
    assume {:print "$track_return(69,9,0):", $t13} $t13 == $t13;

    // label L3 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:212:5+1
    assume {:print "$at(170,9248,9249)"} true;
L3:

    // return $t13 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:212:5+1
    assume {:print "$at(170,9248,9249)"} true;
    $ret0 := $t13;
    return;

    // label L4 at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:212:5+1
L4:

    // abort($t4) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-token-objects/sources/token.move:212:5+1
    assume {:print "$at(170,9248,9249)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// struct OGProfilesTest2::ClaimUsernameEvent at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:56:5+139
datatype $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent($owner: int, $username: $1_string_String, $timestamp_seconds: int)
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'_owner(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent, x: int): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent(x, s->$username, s->$timestamp_seconds)
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'_username(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent, x: $1_string_String): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent(s->$owner, x, s->$timestamp_seconds)
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'_timestamp_seconds(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent, x: int): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent(s->$owner, s->$username, x)
}
function $IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent): bool {
    $IsValid'address'(s->$owner)
      && $IsValid'$1_string_String'(s->$username)
      && $IsValid'u64'(s->$timestamp_seconds)
}
function {:inline} $IsEqual'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'(s1: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent, s2: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent): bool {
    $IsEqual'address'(s1->$owner, s2->$owner)
    && $IsEqual'$1_string_String'(s1->$username, s2->$username)
    && $IsEqual'u64'(s1->$timestamp_seconds, s2->$timestamp_seconds)}

// struct OGProfilesTest2::Profile at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:41:5+51
datatype $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile($name: $1_string_String)
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'_name(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile, x: $1_string_String): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile(x)
}
function $IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile): bool {
    $IsValid'$1_string_String'(s->$name)
}
function {:inline} $IsEqual'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'(s1: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile, s2: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile): bool {
    $IsEqual'$1_string_String'(s1->$name, s2->$name)}
var $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile_$memory: $Memory $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile;

// struct OGProfilesTest2::ProfileMintEvent at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:62:5+219
datatype $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent($owner: int, $profile_address: int, $timestamp_seconds: int)
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'_owner(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent, x: int): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent(x, s->$profile_address, s->$timestamp_seconds)
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'_profile_address(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent, x: int): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent(s->$owner, x, s->$timestamp_seconds)
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'_timestamp_seconds(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent, x: int): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent(s->$owner, s->$profile_address, x)
}
function $IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent): bool {
    $IsValid'address'(s->$owner)
      && $IsValid'address'(s->$profile_address)
      && $IsValid'u64'(s->$timestamp_seconds)
}
function {:inline} $IsEqual'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'(s1: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent, s2: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent): bool {
    s1 == s2
}

// struct OGProfilesTest2::State at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:45:5+374
datatype $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State($claimed_usernames: Table int ($1_string_String), $minted_nfts: Table int (int), $signer_capability: $1_account_SignerCapability, $claim_username_event: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent', $collection_address: int, $minted_profiles: int, $profile_mint_event: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent')
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'_claimed_usernames(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State, x: Table int ($1_string_String)): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State(x, s->$minted_nfts, s->$signer_capability, s->$claim_username_event, s->$collection_address, s->$minted_profiles, s->$profile_mint_event)
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'_minted_nfts(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State, x: Table int (int)): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State(s->$claimed_usernames, x, s->$signer_capability, s->$claim_username_event, s->$collection_address, s->$minted_profiles, s->$profile_mint_event)
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'_signer_capability(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State, x: $1_account_SignerCapability): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State(s->$claimed_usernames, s->$minted_nfts, x, s->$claim_username_event, s->$collection_address, s->$minted_profiles, s->$profile_mint_event)
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'_claim_username_event(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State, x: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State(s->$claimed_usernames, s->$minted_nfts, s->$signer_capability, x, s->$collection_address, s->$minted_profiles, s->$profile_mint_event)
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'_collection_address(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State, x: int): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State(s->$claimed_usernames, s->$minted_nfts, s->$signer_capability, s->$claim_username_event, x, s->$minted_profiles, s->$profile_mint_event)
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'_minted_profiles(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State, x: int): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State(s->$claimed_usernames, s->$minted_nfts, s->$signer_capability, s->$claim_username_event, s->$collection_address, x, s->$profile_mint_event)
}
function {:inline} $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'_profile_mint_event(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State, x: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'): $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State {
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State(s->$claimed_usernames, s->$minted_nfts, s->$signer_capability, s->$claim_username_event, s->$collection_address, s->$minted_profiles, x)
}
function $IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'(s: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State): bool {
    $IsValid'$1_simple_map_SimpleMap'address_$1_string_String''(s->$claimed_usernames)
      && $IsValid'$1_simple_map_SimpleMap'address_address''(s->$minted_nfts)
      && $IsValid'$1_account_SignerCapability'(s->$signer_capability)
      && $IsValid'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''(s->$claim_username_event)
      && $IsValid'address'(s->$collection_address)
      && $IsValid'u64'(s->$minted_profiles)
      && $IsValid'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''(s->$profile_mint_event)
}
function {:inline} $IsEqual'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'(s1: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State, s2: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State): bool {
    $IsEqual'$1_simple_map_SimpleMap'address_$1_string_String''(s1->$claimed_usernames, s2->$claimed_usernames)
    && $IsEqual'$1_simple_map_SimpleMap'address_address''(s1->$minted_nfts, s2->$minted_nfts)
    && $IsEqual'$1_account_SignerCapability'(s1->$signer_capability, s2->$signer_capability)
    && $IsEqual'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent''(s1->$claim_username_event, s2->$claim_username_event)
    && $IsEqual'address'(s1->$collection_address, s2->$collection_address)
    && $IsEqual'u64'(s1->$minted_profiles, s2->$minted_profiles)
    && $IsEqual'$1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent''(s1->$profile_mint_event, s2->$profile_mint_event)}
var $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory: $Memory $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State;

// fun OGProfilesTest2::claim_username [verification] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:104:5+617
procedure {:timeLimit 40} $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_claim_username$verify(_$t0: $signer, _$t1: $1_string_String) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $1_string_String;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation ($1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent');
    var $t8: int;
    var $t9: $Mutation ($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State);
    var $t10: $1_string_String;
    var $t11: Vec ($1_string_String);
    var $t12: int;
    var $t13: Vec (int);
    var $t14: int;
    var $t15: int;
    var $t16: Vec (int);
    var $t17: int;
    var $t18: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State;
    var $t19: int;
    var $t20: Table int ($1_string_String);
    var $t21: Vec ($1_string_String);
    var $t22: bool;
    var $t23: bool;
    var $t24: int;
    var $t25: $Mutation ($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State);
    var $t26: $Mutation (Table int ($1_string_String));
    var $t27: int;
    var $t28: $Mutation ($1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent');
    var $t29: int;
    var $t30: int;
    var $t31: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State': $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'$1_string_String'': Vec ($1_string_String);
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:104:5+1
    assume {:print "$at(2,3480,3481)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:104:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume forall $rsc: chain_status::GenesisEndMarker: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:104:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: timestamp::CurrentTimeMicroseconds: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:104:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: reconfiguration::Configuration: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:104:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: OGProfilesTest2::State: ResourceDomain<OGProfilesTest2::State>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:104:5+1
    assume (forall $a_0: int :: {$ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $a_0)}(var $rsc := $ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $a_0);
    ($IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:104:5+617
    // global invariant at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:104:5+617
    // global invariant at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[claimer]($t0) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:104:5+1
    assume {:print "$track_local(70,0,0):", $t0} $t0 == $t0;

    // trace_local[username]($t1) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:104:5+1
    assume {:print "$track_local(70,0,1):", $t1} $t1 == $t1;

    // $t12 := 0xb43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:108:66+5
    assume {:print "$at(2,3653,3658)"} true;
    $t12 := 81523806860991193134851957672313584890308673380912250647690667343267930350852;
    assume $IsValid'address'($t12);

    // $t13 := [111, 103, 32, 112, 114, 111, 102, 105, 108, 101, 115] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:108:73+4
    $t13 := ConcatVec(ConcatVec(MakeVec4(111, 103, 32, 112), MakeVec4(114, 111, 102, 105)), MakeVec3(108, 101, 115));
    assume $IsValid'vec'u8''($t13);

    // $t14 := opaque begin: account::create_resource_address($t12, $t13) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:108:32+46

    // assume WellFormed($t14) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:108:32+46
    assume $IsValid'address'($t14);

    // assume Eq<address>($t14, account::spec_create_resource_address($t12, $t13)) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:108:32+46
    assume $IsEqual'address'($t14, $1_account_spec_create_resource_address($t12, $t13));

    // $t14 := opaque end: account::create_resource_address($t12, $t13) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:108:32+46

    // trace_local[resource_address]($t14) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:108:13+16
    assume {:print "$track_local(70,0,8):", $t14} $t14 == $t14;

    // trace_local[username#464]($t1) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:165:42+8
    assume {:print "$at(2,5718,5726)"} true;
    assume {:print "$track_local(70,0,10):", $t1} $t1 == $t1;

    // $t15 := 0xb43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:166:66+5
    assume {:print "$at(2,5818,5823)"} true;
    $t15 := 81523806860991193134851957672313584890308673380912250647690667343267930350852;
    assume $IsValid'address'($t15);

    // $t16 := [111, 103, 32, 112, 114, 111, 102, 105, 108, 101, 115] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:166:73+4
    $t16 := ConcatVec(ConcatVec(MakeVec4(111, 103, 32, 112), MakeVec4(114, 111, 102, 105)), MakeVec3(108, 101, 115));
    assume $IsValid'vec'u8''($t16);

    // $t17 := opaque begin: account::create_resource_address($t15, $t16) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:166:32+46

    // assume WellFormed($t17) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:166:32+46
    assume $IsValid'address'($t17);

    // assume Eq<address>($t17, account::spec_create_resource_address($t15, $t16)) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:166:32+46
    assume $IsEqual'address'($t17, $1_account_spec_create_resource_address($t15, $t16));

    // $t17 := opaque end: account::create_resource_address($t15, $t16) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:166:32+46

    // $t18 := get_global<OGProfilesTest2::State>($t17) on_abort goto L4 with $t19 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:167:21+13
    assume {:print "$at(2,5852,5865)"} true;
    if (!$ResourceExists($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $t17)) {
        call $ExecFailureAbort();
    } else {
        $t18 := $ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $t17);
    }
    if ($abort_flag) {
        assume {:print "$at(2,5852,5865)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(70,0):", $t19} $t19 == $t19;
        goto L4;
    }

    // $t20 := get_field<OGProfilesTest2::State>.claimed_usernames($t18) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:169:41+24
    assume {:print "$at(2,5933,5957)"} true;
    $t20 := $t18->$claimed_usernames;

    // $t21 := simple_map::values<address, string::String>($t20) on_abort goto L4 with $t19 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:169:22+44
    call $t21 := $1_simple_map_values'address_$1_string_String'($t20);
    if ($abort_flag) {
        assume {:print "$at(2,5914,5958)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(70,0):", $t19} $t19 == $t19;
        goto L4;
    }

    // trace_local[values#467]($t21) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:169:13+6
    assume {:print "$track_local(70,0,11):", $t21} $t21 == $t21;

    // $t22 := vector::contains<string::String>($t21, $t1) on_abort goto L4 with $t19 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:170:18+36
    assume {:print "$at(2,5977,6013)"} true;
    call $t22 := $1_vector_contains'$1_string_String'($t21, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,5977,6013)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(70,0):", $t19} $t19 == $t19;
        goto L4;
    }

    // $t23 := !($t22) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:170:17+1
    call $t23 := $Not($t22);

    // if ($t23) goto L1 else goto L0 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:170:9+63
    if ($t23) { goto L1; } else { goto L0; }

    // label L1 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:170:9+63
L1:

    // goto L2 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:170:9+63
    assume {:print "$at(2,5968,6031)"} true;
    goto L2;

    // label L0 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:170:9+63
L0:

    // $t24 := 1 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:170:56+15
    assume {:print "$at(2,6015,6030)"} true;
    $t24 := 1;
    assume $IsValid'u64'($t24);

    // trace_abort($t24) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:170:9+63
    assume {:print "$at(2,5968,6031)"} true;
    assume {:print "$track_abort(70,0):", $t24} $t24 == $t24;

    // $t19 := move($t24) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:170:9+63
    $t19 := $t24;

    // goto L4 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:170:9+63
    goto L4;

    // label L2 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:111:46+16
    assume {:print "$at(2,3758,3774)"} true;
L2:

    // $t25 := borrow_global<OGProfilesTest2::State>($t14) on_abort goto L4 with $t19 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:111:21+17
    assume {:print "$at(2,3733,3750)"} true;
    if (!$ResourceExists($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $t14)) {
        call $ExecFailureAbort();
    } else {
        $t25 := $Mutation($Global($t14), EmptyVec(), $ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $t14));
    }
    if ($abort_flag) {
        assume {:print "$at(2,3733,3750)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(70,0):", $t19} $t19 == $t19;
        goto L4;
    }

    // trace_local[state]($t25) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:111:13+5
    $temp_0'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State' := $Dereference($t25);
    assume {:print "$track_local(70,0,9):", $temp_0'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'} $temp_0'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State' == $temp_0'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State';

    // $t26 := borrow_field<OGProfilesTest2::State>.claimed_usernames($t25) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:114:25+28
    assume {:print "$at(2,3803,3831)"} true;
    $t26 := $ChildMutation($t25, 0, $Dereference($t25)->$claimed_usernames);

    // $t27 := signer::address_of($t0) on_abort goto L4 with $t19 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:114:55+27
    call $t27 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,3833,3860)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(70,0):", $t19} $t19 == $t19;
        goto L4;
    }

    // simple_map::add<address, string::String>($t26, $t27, $t1) on_abort goto L4 with $t19 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:114:9+84
    call $t26 := $1_simple_map_add'address_$1_string_String'($t26, $t27, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,3787,3871)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(70,0):", $t19} $t19 == $t19;
        goto L4;
    }

    // write_back[Reference($t25).claimed_usernames (simple_map::SimpleMap<address, string::String>)]($t26) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:114:9+84
    $t25 := $UpdateMutation($t25, $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'_claimed_usernames($Dereference($t25), $Dereference($t26)));

    // $t28 := borrow_field<OGProfilesTest2::State>.claim_username_event($t25) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:116:27+31
    assume {:print "$at(2,3900,3931)"} true;
    $t28 := $ChildMutation($t25, 3, $Dereference($t25)->$claim_username_event);

    // $t29 := signer::address_of($t0) on_abort goto L4 with $t19 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:118:20+27
    assume {:print "$at(2,3994,4021)"} true;
    call $t29 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,3994,4021)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(70,0):", $t19} $t19 == $t19;
        goto L4;
    }

    // $t30 := timestamp::now_seconds() on_abort goto L4 with $t19 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:119:32+24
    assume {:print "$at(2,4054,4078)"} true;
    call $t30 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,4054,4078)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(70,0):", $t19} $t19 == $t19;
        goto L4;
    }

    // $t31 := pack OGProfilesTest2::ClaimUsernameEvent($t29, $t1, $t30) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:116:60+156
    assume {:print "$at(2,3933,4089)"} true;
    $t31 := $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent($t29, $t1, $t30);

    // opaque begin: event::emit_event<OGProfilesTest2::ClaimUsernameEvent>($t28, $t31) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:116:9+208

    // opaque end: event::emit_event<OGProfilesTest2::ClaimUsernameEvent>($t28, $t31) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:116:9+208

    // write_back[Reference($t25).claim_username_event (event::EventHandle<OGProfilesTest2::ClaimUsernameEvent>)]($t28) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:116:9+208
    $t25 := $UpdateMutation($t25, $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'_claim_username_event($Dereference($t25), $Dereference($t28)));

    // write_back[OGProfilesTest2::State@]($t25) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:116:9+208
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory := $ResourceUpdate($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $GlobalLocationAddress($t25),
        $Dereference($t25));

    // label L3 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:121:5+1
    assume {:print "$at(2,4096,4097)"} true;
L3:

    // return () at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:121:5+1
    assume {:print "$at(2,4096,4097)"} true;
    return;

    // label L4 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:121:5+1
L4:

    // abort($t19) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:121:5+1
    assume {:print "$at(2,4096,4097)"} true;
    $abort_code := $t19;
    $abort_flag := true;
    return;

}

// fun OGProfilesTest2::get_claimed_username [verification] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:185:5+337
procedure {:timeLimit 40} $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_get_claimed_username$verify(_$t0: $signer) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: Table int ($1_string_String);
    var $t4: int;
    var $t5: Vec (int);
    var $t6: int;
    var $t7: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State;
    var $t8: int;
    var $t9: Table int ($1_string_String);
    var $t10: int;
    var $t11: $1_string_String;
    var $t0: $signer;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:185:5+1
    assume {:print "$at(2,6395,6396)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: OGProfilesTest2::State: ResourceDomain<OGProfilesTest2::State>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:185:5+1
    assume (forall $a_0: int :: {$ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $a_0)}(var $rsc := $ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $a_0);
    ($IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'($rsc))));

    // trace_local[claimer]($t0) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:185:5+1
    assume {:print "$track_local(70,1,0):", $t0} $t0 == $t0;

    // $t4 := 0xb43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:186:66+5
    assume {:print "$at(2,6536,6541)"} true;
    $t4 := 81523806860991193134851957672313584890308673380912250647690667343267930350852;
    assume $IsValid'address'($t4);

    // $t5 := [111, 103, 32, 112, 114, 111, 102, 105, 108, 101, 115] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:186:73+4
    $t5 := ConcatVec(ConcatVec(MakeVec4(111, 103, 32, 112), MakeVec4(114, 111, 102, 105)), MakeVec3(108, 101, 115));
    assume $IsValid'vec'u8''($t5);

    // $t6 := opaque begin: account::create_resource_address($t4, $t5) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:186:32+46

    // assume WellFormed($t6) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:186:32+46
    assume $IsValid'address'($t6);

    // assume Eq<address>($t6, account::spec_create_resource_address($t4, $t5)) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:186:32+46
    assume $IsEqual'address'($t6, $1_account_spec_create_resource_address($t4, $t5));

    // $t6 := opaque end: account::create_resource_address($t4, $t5) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:186:32+46

    // $t7 := get_global<OGProfilesTest2::State>($t6) on_abort goto L2 with $t8 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:187:21+13
    assume {:print "$at(2,6570,6583)"} true;
    if (!$ResourceExists($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $t6);
    }
    if ($abort_flag) {
        assume {:print "$at(2,6570,6583)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(70,1):", $t8} $t8 == $t8;
        goto L2;
    }

    // $t9 := get_field<OGProfilesTest2::State>.claimed_usernames($t7) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:188:43+24
    assume {:print "$at(2,6652,6676)"} true;
    $t9 := $t7->$claimed_usernames;

    // $t10 := signer::address_of($t0) on_abort goto L2 with $t8 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:188:70+27
    call $t10 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,6679,6706)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(70,1):", $t8} $t8 == $t8;
        goto L2;
    }

    // $t11 := simple_map::borrow<address, string::String>($t9, $t10) on_abort goto L2 with $t8 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:188:24+74
    call $t11 := $1_simple_map_borrow'address_$1_string_String'($t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(2,6633,6707)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(70,1):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_return[0]($t11) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:189:9+9
    assume {:print "$at(2,6717,6726)"} true;
    assume {:print "$track_return(70,1,0):", $t11} $t11 == $t11;

    // label L1 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:190:5+1
    assume {:print "$at(2,6731,6732)"} true;
L1:

    // return $t11 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:190:5+1
    assume {:print "$at(2,6731,6732)"} true;
    $ret0 := $t11;
    return;

    // label L2 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:190:5+1
L2:

    // abort($t8) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:190:5+1
    assume {:print "$at(2,6731,6732)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun OGProfilesTest2::get_claimed_usernames [verification] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:177:5+257
procedure {:timeLimit 40} $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_get_claimed_usernames$verify() returns ($ret0: Table int ($1_string_String))
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: Vec (int);
    var $t3: int;
    var $t4: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State;
    var $t5: int;
    var $t6: Table int ($1_string_String);
    var $temp_0'$1_simple_map_SimpleMap'address_$1_string_String'': Table int ($1_string_String);

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume forall $rsc: OGProfilesTest2::State: ResourceDomain<OGProfilesTest2::State>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:177:5+1
    assume {:print "$at(2,6092,6093)"} true;
    assume (forall $a_0: int :: {$ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $a_0)}(var $rsc := $ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $a_0);
    ($IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'($rsc))));

    // $t1 := 0xb43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:178:66+5
    assume {:print "$at(2,6238,6243)"} true;
    $t1 := 81523806860991193134851957672313584890308673380912250647690667343267930350852;
    assume $IsValid'address'($t1);

    // $t2 := [111, 103, 32, 112, 114, 111, 102, 105, 108, 101, 115] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:178:73+4
    $t2 := ConcatVec(ConcatVec(MakeVec4(111, 103, 32, 112), MakeVec4(114, 111, 102, 105)), MakeVec3(108, 101, 115));
    assume $IsValid'vec'u8''($t2);

    // $t3 := opaque begin: account::create_resource_address($t1, $t2) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:178:32+46

    // assume WellFormed($t3) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:178:32+46
    assume $IsValid'address'($t3);

    // assume Eq<address>($t3, account::spec_create_resource_address($t1, $t2)) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:178:32+46
    assume $IsEqual'address'($t3, $1_account_spec_create_resource_address($t1, $t2));

    // $t3 := opaque end: account::create_resource_address($t1, $t2) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:178:32+46

    // $t4 := get_global<OGProfilesTest2::State>($t3) on_abort goto L2 with $t5 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:179:21+13
    assume {:print "$at(2,6272,6285)"} true;
    if (!$ResourceExists($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(2,6272,6285)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,2):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := get_field<OGProfilesTest2::State>.claimed_usernames($t4) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:180:9+23
    assume {:print "$at(2,6320,6343)"} true;
    $t6 := $t4->$claimed_usernames;

    // trace_return[0]($t6) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:180:9+23
    assume {:print "$track_return(70,2,0):", $t6} $t6 == $t6;

    // label L1 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:181:5+1
    assume {:print "$at(2,6348,6349)"} true;
L1:

    // return $t6 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:181:5+1
    assume {:print "$at(2,6348,6349)"} true;
    $ret0 := $t6;
    return;

    // label L2 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:181:5+1
L2:

    // abort($t5) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:181:5+1
    assume {:print "$at(2,6348,6349)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun OGProfilesTest2::init_module [verification] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1052
procedure {:timeLimit 40} $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_init_module$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: $1_string_String;
    var $t2: Table int (int);
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_SignerCapability;
    var $t6: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent';
    var $t7: Table int ($1_string_String);
    var $t8: int;
    var $t9: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent';
    var $t10: int;
    var $t11: $signer;
    var $t12: $1_account_SignerCapability;
    var $t13: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State;
    var $t14: Vec (int);
    var $t15: int;
    var $t16: int;
    var $t17: $1_account_Account;
    var $t18: Vec (int);
    var $t19: $signer;
    var $t20: $1_account_SignerCapability;
    var $t21: int;
    var $t22: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t23: int;
    var $t24: $1_account_Account;
    var $t25: Vec (int);
    var $t26: $1_string_String;
    var $t27: Vec (int);
    var $t28: $1_string_String;
    var $t29: $1_option_Option'$4_royalty_Royalty';
    var $t30: Vec (int);
    var $t31: $1_string_String;
    var $t32: $1_object_ConstructorRef;
    var $t33: int;
    var $t34: Vec (int);
    var $t35: $1_string_String;
    var $t36: int;
    var $t37: int;
    var $t38: $1_account_Account;
    var $t39: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent';
    var $t40: Table int ($1_string_String);
    var $t41: int;
    var $t42: $1_account_Account;
    var $t43: $1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent';
    var $t44: Table int (int);
    var $t45: int;
    var $t46: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State;
    var $t0: $signer;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State': $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume {:print "$at(2,2422,2423)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: account::Account: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($rsc->$rotation_capability_offer->$for->$vec) <= 1) && (LenVec($rsc->$signer_capability_offer->$for->$vec) <= 1))))));

    // assume forall $rsc: coin::CoinInfo<aptos_coin::AptosCoin>: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: coin::CoinStore<aptos_coin::AptosCoin>: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: coin::Ghost$supply<aptos_coin::AptosCoin>: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: royalty::Royalty: ResourceDomain<royalty::Royalty>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: collection::Collection: ResourceDomain<collection::Collection>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_Collection_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_Collection_$memory, $a_0);
    ($IsValid'$4_collection_Collection'($rsc))));

    // assume forall $rsc: collection::UnlimitedSupply: ResourceDomain<collection::UnlimitedSupply>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: OGProfilesTest2::State: ResourceDomain<OGProfilesTest2::State>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume (forall $a_0: int :: {$ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $a_0)}(var $rsc := $ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $a_0);
    ($IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'($rsc))));

    // trace_local[admin]($t0) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:77:5+1
    assume {:print "$track_local(70,3,0):", $t0} $t0 == $t0;

    // $t14 := [111, 103, 32, 112, 114, 111, 102, 105, 108, 101, 115] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:78:92+4
    assume {:print "$at(2,2547,2551)"} true;
    $t14 := ConcatVec(ConcatVec(MakeVec4(111, 103, 32, 112), MakeVec4(114, 111, 102, 105)), MakeVec3(108, 101, 115));
    assume $IsValid'vec'u8''($t14);

    // assume Identical($t15, signer::$address_of($t0)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+45
    assume {:print "$at(81,21096,21141)"} true;
    assume ($t15 == $1_signer_$address_of($t0));

    // assume Identical($t16, account::spec_create_resource_address($t15, $t14)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:431:9+68
    assume {:print "$at(81,21150,21218)"} true;
    assume ($t16 == $1_account_spec_create_resource_address($t15, $t14));

    // assume Identical($t17, global<account::Account>($t16)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:501:9+45
    assume {:print "$at(81,23907,23952)"} true;
    assume ($t17 == $ResourceValue($1_account_Account_$memory, $t16));

    // assume Identical($t18, bcs::$to_bytes<address>($t16)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:56:9+45
    assume {:print "$at(81,2309,2354)"} true;
    assume ($t18 == $1_bcs_$to_bytes'address'($t16));

    // ($t19, $t20) := account::create_resource_account($t0, $t14) on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:78:52+45
    assume {:print "$at(2,2507,2552)"} true;
    call $t19,$t20 := $1_account_create_resource_account($t0, $t14);
    if ($abort_flag) {
        assume {:print "$at(2,2507,2552)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // trace_local[signer_capability]($t20) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:78:31+17
    assume {:print "$track_local(70,3,12):", $t20} $t20 == $t20;

    // trace_local[resource_signer]($t19) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:78:14+15
    assume {:print "$track_local(70,3,11):", $t19} $t19 == $t19;

    // assume Identical($t22, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(104,1664,1763)"} true;
    assume ($t22 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // assume Identical($t23, signer::$address_of($t19)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:356:9+47
    assume {:print "$at(104,15253,15300)"} true;
    assume ($t23 == $1_signer_$address_of($t19));

    // assume Identical($t24, global<account::Account>($t23)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/coin.spec.move:357:9+49
    assume {:print "$at(104,15309,15358)"} true;
    assume ($t24 == $ResourceValue($1_account_Account_$memory, $t23));

    // coin::register<aptos_coin::AptosCoin>($t19) on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:79:9+43
    assume {:print "$at(2,2562,2605)"} true;
    call $1_coin_register'$1_aptos_coin_AptosCoin'($t19);
    if ($abort_flag) {
        assume {:print "$at(2,2562,2605)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // $t25 := [67, 111, 108, 108, 101, 99, 116, 105, 111, 110, 32, 111, 102, 32, 75, 97, 100, 101, 47, 78, 101, 116, 119, 111, 114, 107, 39, 115, 32, 79, 71, 32, 80, 114, 111, 102, 105, 108, 101, 115] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:83:26+22
    assume {:print "$at(2,2712,2734)"} true;
    $t25 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(67, 111, 108, 108), MakeVec4(101, 99, 116, 105)), MakeVec4(111, 110, 32, 111)), MakeVec4(102, 32, 75, 97)), MakeVec4(100, 101, 47, 78)), MakeVec4(101, 116, 119, 111)), MakeVec4(114, 107, 39, 115)), MakeVec4(32, 79, 71, 32)), MakeVec4(80, 114, 111, 102)), MakeVec4(105, 108, 101, 115));
    assume $IsValid'vec'u8''($t25);

    // $t26 := string::utf8($t25) on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:83:13+36
    call $t26 := $1_string_utf8($t25);
    if ($abort_flag) {
        assume {:print "$at(2,2699,2735)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // $t27 := [79, 71, 32, 80, 114, 111, 102, 105, 108, 101, 115, 32, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:84:26+15
    assume {:print "$at(2,2762,2777)"} true;
    $t27 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(79, 71, 32, 80), MakeVec4(114, 111, 102, 105)), MakeVec4(108, 101, 115, 32)), MakeVec4(67, 111, 108, 108)), MakeVec4(101, 99, 116, 105)), MakeVec2(111, 110));
    assume $IsValid'vec'u8''($t27);

    // $t28 := string::utf8($t27) on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:84:13+29
    call $t28 := $1_string_utf8($t27);
    if ($abort_flag) {
        assume {:print "$at(2,2749,2778)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // $t29 := opaque begin: option::none<royalty::Royalty>() at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:85:13+14
    assume {:print "$at(2,2792,2806)"} true;

    // assume And(WellFormed($t29), Le(Len<royalty::Royalty>(select option::Option.vec($t29)), 1)) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:85:13+14
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t29) && (LenVec($t29->$vec) <= 1));

    // assume Eq<option::Option<royalty::Royalty>>($t29, option::spec_none<royalty::Royalty>()) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:85:13+14
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t29, $1_option_spec_none'$4_royalty_Royalty'());

    // $t29 := opaque end: option::none<royalty::Royalty>() at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:85:13+14

    // $t30 := [99, 111, 108, 108, 101, 99, 116, 105, 111, 110, 32, 85, 82, 73] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:86:26+14
    assume {:print "$at(2,2833,2847)"} true;
    $t30 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(99, 111, 108, 108), MakeVec4(101, 99, 116, 105)), MakeVec4(111, 110, 32, 85)), MakeVec2(82, 73));
    assume $IsValid'vec'u8''($t30);

    // $t31 := string::utf8($t30) on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:86:13+28
    call $t31 := $1_string_utf8($t30);
    if ($abort_flag) {
        assume {:print "$at(2,2820,2848)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // $t32 := collection::create_unlimited_collection($t19, $t26, $t28, $t29, $t31) on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:81:9+242
    assume {:print "$at(2,2616,2858)"} true;
    call $t32 := $4_collection_create_unlimited_collection($t19, $t26, $t28, $t29, $t31);
    if ($abort_flag) {
        assume {:print "$at(2,2616,2858)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // destroy($t32) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:81:9+242

    // $t33 := signer::address_of($t19) on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:89:73+36
    assume {:print "$at(2,2933,2969)"} true;
    call $t33 := $1_signer_address_of($t19);
    if ($abort_flag) {
        assume {:print "$at(2,2933,2969)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // $t34 := [79, 71, 32, 80, 114, 111, 102, 105, 108, 101, 115, 32, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:89:125+15
    $t34 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(79, 71, 32, 80), MakeVec4(114, 111, 102, 105)), MakeVec4(108, 101, 115, 32)), MakeVec4(67, 111, 108, 108)), MakeVec4(101, 99, 116, 105)), MakeVec2(111, 110));
    assume $IsValid'vec'u8''($t34);

    // $t35 := string::utf8($t34) on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:89:112+29
    call $t35 := $1_string_utf8($t34);
    if ($abort_flag) {
        assume {:print "$at(2,2972,3001)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // $t36 := collection::create_collection_address($t33, $t35) on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:89:34+108
    call $t36 := $4_collection_create_collection_address($t33, $t35);
    if ($abort_flag) {
        assume {:print "$at(2,2894,3002)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // trace_local[collection_address]($t36) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:89:13+18
    assume {:print "$track_local(70,3,10):", $t36} $t36 == $t36;

    // assume Identical($t37, signer::$address_of($t19)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:481:9+39
    assume {:print "$at(81,23153,23192)"} true;
    assume ($t37 == $1_signer_$address_of($t19));

    // assume Identical($t38, global<account::Account>($t37)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:482:9+36
    assume {:print "$at(81,23201,23237)"} true;
    assume ($t38 == $ResourceValue($1_account_Account_$memory, $t37));

    // $t39 := account::new_event_handle<OGProfilesTest2::ClaimUsernameEvent>($t19) on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:93:35+63
    assume {:print "$at(2,3098,3161)"} true;
    call $t39 := $1_account_new_event_handle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ClaimUsernameEvent'($t19);
    if ($abort_flag) {
        assume {:print "$at(2,3098,3161)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // $t40 := simple_map::new<address, string::String>() on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:94:32+17
    assume {:print "$at(2,3194,3211)"} true;
    call $t40 := $1_simple_map_new'address_$1_string_String'();
    if ($abort_flag) {
        assume {:print "$at(2,3194,3211)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // assume Identical($t41, signer::$address_of($t19)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:481:9+39
    assume {:print "$at(81,23153,23192)"} true;
    assume ($t41 == $1_signer_$address_of($t19));

    // assume Identical($t42, global<account::Account>($t41)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:482:9+36
    assume {:print "$at(81,23201,23237)"} true;
    assume ($t42 == $ResourceValue($1_account_Account_$memory, $t41));

    // $t43 := account::new_event_handle<OGProfilesTest2::ProfileMintEvent>($t19) on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:96:33+61
    assume {:print "$at(2,3277,3338)"} true;
    call $t43 := $1_account_new_event_handle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent'($t19);
    if ($abort_flag) {
        assume {:print "$at(2,3277,3338)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // $t44 := simple_map::new<address, address>() on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:98:26+17
    assume {:print "$at(2,3397,3414)"} true;
    call $t44 := $1_simple_map_new'address_address'();
    if ($abort_flag) {
        assume {:print "$at(2,3397,3414)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // $t45 := 0 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:97:30+1
    assume {:print "$at(2,3369,3370)"} true;
    $t45 := 0;
    assume $IsValid'u64'($t45);

    // $t46 := pack OGProfilesTest2::State($t40, $t44, $t20, $t39, $t36, $t45, $t43) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:91:21+400
    assume {:print "$at(2,3025,3425)"} true;
    $t46 := $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State($t40, $t44, $t20, $t39, $t36, $t45, $t43);

    // trace_local[state]($t46) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:91:13+5
    assume {:print "$track_local(70,3,13):", $t46} $t46 == $t46;

    // move_to<OGProfilesTest2::State>($t46, $t19) on_abort goto L2 with $t21 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:101:9+7
    assume {:print "$at(2,3436,3443)"} true;
    if ($ResourceExists($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $t19->$addr)) {
        call $ExecFailureAbort();
    } else {
        $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory := $ResourceUpdate($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $t19->$addr, $t46);
    }
    if ($abort_flag) {
        assume {:print "$at(2,3436,3443)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(70,3):", $t21} $t21 == $t21;
        goto L2;
    }

    // label L1 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:102:5+1
    assume {:print "$at(2,3473,3474)"} true;
L1:

    // return () at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:102:5+1
    assume {:print "$at(2,3473,3474)"} true;
    return;

    // label L2 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:102:5+1
L2:

    // abort($t21) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:102:5+1
    assume {:print "$at(2,3473,3474)"} true;
    $abort_code := $t21;
    $abort_flag := true;
    return;

}

// fun OGProfilesTest2::mint_profile_nft [verification] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1501
procedure {:timeLimit 40} $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_mint_profile_nft$verify(_$t0: $signer, _$t1: $1_string_String) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: Table int ($1_string_String);
    var $t5: Vec (int);
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent');
    var $t10: $1_string_String;
    var $t11: $1_object_ConstructorRef;
    var $t12: int;
    var $t13: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile;
    var $t14: $1_string_String;
    var $t15: $signer;
    var $t16: $Mutation ($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State);
    var $t17: $1_string_String;
    var $t18: int;
    var $t19: Vec (int);
    var $t20: int;
    var $t21: $Mutation ($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State);
    var $t22: int;
    var $t23: $1_account_SignerCapability;
    var $t24: int;
    var $t25: $signer;
    var $t26: Table int ($1_string_String);
    var $t27: int;
    var $t28: $1_string_String;
    var $t29: int;
    var $t30: $1_string_String;
    var $t31: Vec (int);
    var $t32: $1_string_String;
    var $t33: Vec (int);
    var $t34: $1_string_String;
    var $t35: Vec (int);
    var $t36: $1_string_String;
    var $t37: $1_option_Option'$4_royalty_Royalty';
    var $t38: $1_object_ConstructorRef;
    var $t39: int;
    var $t40: $Mutation (Table int (int));
    var $t41: int;
    var $t42: int;
    var $t43: int;
    var $t44: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile;
    var $t45: $Mutation ($1_event_EventHandle'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent');
    var $t46: int;
    var $t47: int;
    var $t48: $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile': $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile;
    var $temp_0'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State': $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume {:print "$at(2,4174,4175)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume forall $rsc: chain_status::GenesisEndMarker: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: timestamp::CurrentTimeMicroseconds: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: reconfiguration::Configuration: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: royalty::Royalty: ResourceDomain<royalty::Royalty>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: collection::FixedSupply: ResourceDomain<collection::FixedSupply>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_FixedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_FixedSupply_$memory, $a_0);
    ($IsValid'$4_collection_FixedSupply'($rsc))));

    // assume forall $rsc: collection::UnlimitedSupply: ResourceDomain<collection::UnlimitedSupply>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: token::Token: ResourceDomain<token::Token>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_Token_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_Token_$memory, $a_0);
    ($IsValid'$4_token_Token'($rsc))));

    // assume forall $rsc: OGProfilesTest2::Profile: ResourceDomain<OGProfilesTest2::Profile>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile_$memory, $a_0)}(var $rsc := $ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile_$memory, $a_0);
    ($IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile'($rsc))));

    // assume forall $rsc: OGProfilesTest2::State: ResourceDomain<OGProfilesTest2::State>(): WellFormed($rsc) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $a_0)}(var $rsc := $ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $a_0);
    ($IsValid'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1501
    // global invariant at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1501
    // global invariant at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[claimer]($t0) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume {:print "$track_local(70,4,0):", $t0} $t0 == $t0;

    // trace_local[metadata_uri]($t1) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:124:5+1
    assume {:print "$track_local(70,4,1):", $t1} $t1 == $t1;

    // $t18 := 0xb43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:125:66+5
    assume {:print "$at(2,4330,4335)"} true;
    $t18 := 81523806860991193134851957672313584890308673380912250647690667343267930350852;
    assume $IsValid'address'($t18);

    // $t19 := [111, 103, 32, 112, 114, 111, 102, 105, 108, 101, 115] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:125:73+4
    $t19 := ConcatVec(ConcatVec(MakeVec4(111, 103, 32, 112), MakeVec4(114, 111, 102, 105)), MakeVec3(108, 101, 115));
    assume $IsValid'vec'u8''($t19);

    // $t20 := opaque begin: account::create_resource_address($t18, $t19) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:125:32+46

    // assume WellFormed($t20) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:125:32+46
    assume $IsValid'address'($t20);

    // assume Eq<address>($t20, account::spec_create_resource_address($t18, $t19)) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:125:32+46
    assume $IsEqual'address'($t20, $1_account_spec_create_resource_address($t18, $t19));

    // $t20 := opaque end: account::create_resource_address($t18, $t19) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:125:32+46

    // $t21 := borrow_global<OGProfilesTest2::State>($t20) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:126:21+17
    assume {:print "$at(2,4364,4381)"} true;
    if (!$ResourceExists($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $t20)) {
        call $ExecFailureAbort();
    } else {
        $t21 := $Mutation($Global($t20), EmptyVec(), $ResourceValue($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $t20));
    }
    if ($abort_flag) {
        assume {:print "$at(2,4364,4381)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // trace_local[state]($t21) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:126:13+5
    $temp_0'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State' := $Dereference($t21);
    assume {:print "$track_local(70,4,16):", $temp_0'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'} $temp_0'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State' == $temp_0'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State';

    // $t23 := get_field<OGProfilesTest2::State>.signer_capability($t21) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:127:61+24
    assume {:print "$at(2,4468,4492)"} true;
    $t23 := $Dereference($t21)->$signer_capability;

    // assume Identical($t24, select account::SignerCapability.account($t23)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:495:9+30
    assume {:print "$at(81,23729,23759)"} true;
    assume ($t24 == $t23->$account);

    // $t25 := account::create_signer_with_capability($t23) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:127:31+55
    assume {:print "$at(2,4438,4493)"} true;
    call $t25 := $1_account_create_signer_with_capability($t23);
    if ($abort_flag) {
        assume {:print "$at(2,4438,4493)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // trace_local[resource_signer]($t25) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:127:13+15
    assume {:print "$track_local(70,4,15):", $t25} $t25 == $t25;

    // $t26 := get_field<OGProfilesTest2::State>.claimed_usernames($t21) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:128:44+24
    assume {:print "$at(2,4538,4562)"} true;
    $t26 := $Dereference($t21)->$claimed_usernames;

    // $t27 := signer::address_of($t0) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:128:71+27
    call $t27 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,4565,4592)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // $t28 := simple_map::borrow<address, string::String>($t26, $t27) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:128:25+74
    call $t28 := $1_simple_map_borrow'address_$1_string_String'($t26, $t27);
    if ($abort_flag) {
        assume {:print "$at(2,4519,4593)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // trace_local[username]($t28) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:128:13+8
    assume {:print "$track_local(70,4,17):", $t28} $t28 == $t28;

    // $t29 := get_field<OGProfilesTest2::State>.minted_profiles($t21) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:129:45+22
    assume {:print "$at(2,4639,4661)"} true;
    $t29 := $Dereference($t21)->$minted_profiles;

    // $t30 := string_utils::to_string<u64>($t29) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:129:21+47
    call $t30 := $1_string_utils_to_string'u64'($t29);
    if ($abort_flag) {
        assume {:print "$at(2,4615,4662)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // trace_local[count]($t30) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:129:13+5
    assume {:print "$track_local(70,4,10):", $t30} $t30 == $t30;

    // $t31 := [80, 114, 111, 102, 105, 108, 101, 32, 35, 123, 125, 32, 58, 32, 123, 125] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:131:51+19
    assume {:print "$at(2,4715,4734)"} true;
    $t31 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(80, 114, 111, 102), MakeVec4(105, 108, 101, 32)), MakeVec4(35, 123, 125, 32)), MakeVec4(58, 32, 123, 125));
    assume $IsValid'vec'u8''($t31);

    // $t32 := string_utils::format2<string::String, string::String>($t31, $t30, $t28) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:131:28+59
    call $t32 := $1_string_utils_format2'$1_string_String_$1_string_String'($t31, $t30, $t28);
    if ($abort_flag) {
        assume {:print "$at(2,4692,4751)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // trace_local[profile_name]($t32) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:131:13+12
    assume {:print "$track_local(70,4,14):", $t32} $t32 == $t32;

    // $t33 := [79, 71, 32, 80, 114, 111, 102, 105, 108, 101, 115, 32, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:135:26+15
    assume {:print "$at(2,4854,4869)"} true;
    $t33 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(79, 71, 32, 80), MakeVec4(114, 111, 102, 105)), MakeVec4(108, 101, 115, 32)), MakeVec4(67, 111, 108, 108)), MakeVec4(101, 99, 116, 105)), MakeVec2(111, 110));
    assume $IsValid'vec'u8''($t33);

    // $t34 := string::utf8($t33) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:135:13+29
    call $t34 := $1_string_utf8($t33);
    if ($abort_flag) {
        assume {:print "$at(2,4841,4870)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // $t35 := [80, 82, 79, 70, 73, 76, 69, 32, 77, 73, 78, 84] at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:136:26+15
    assume {:print "$at(2,4897,4912)"} true;
    $t35 := ConcatVec(ConcatVec(MakeVec4(80, 82, 79, 70), MakeVec4(73, 76, 69, 32)), MakeVec4(77, 73, 78, 84));
    assume $IsValid'vec'u8''($t35);

    // $t36 := string::utf8($t35) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:136:13+29
    call $t36 := $1_string_utf8($t35);
    if ($abort_flag) {
        assume {:print "$at(2,4884,4913)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // $t37 := opaque begin: option::none<royalty::Royalty>() at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:138:13+14
    assume {:print "$at(2,4953,4967)"} true;

    // assume And(WellFormed($t37), Le(Len<royalty::Royalty>(select option::Option.vec($t37)), 1)) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:138:13+14
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t37) && (LenVec($t37->$vec) <= 1));

    // assume Eq<option::Option<royalty::Royalty>>($t37, option::spec_none<royalty::Royalty>()) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:138:13+14
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t37, $1_option_spec_none'$4_royalty_Royalty'());

    // $t37 := opaque end: option::none<royalty::Royalty>() at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:138:13+14

    // $t38 := token::create_named_token($t25, $t34, $t36, $t32, $t37, $t1) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:133:19+231
    assume {:print "$at(2,4772,5003)"} true;
    call $t38 := $4_token_create_named_token($t25, $t34, $t36, $t32, $t37, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,4772,5003)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // trace_local[nft]($t38) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:133:13+3
    assume {:print "$track_local(70,4,11):", $t38} $t38 == $t38;

    // $t39 := object::address_from_constructor_ref($t38) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:144:27+42
    assume {:print "$at(2,5034,5076)"} true;
    call $t39 := $1_object_address_from_constructor_ref($t38);
    if ($abort_flag) {
        assume {:print "$at(2,5034,5076)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // trace_local[nft_address]($t39) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:144:13+11
    assume {:print "$track_local(70,4,12):", $t39} $t39 == $t39;

    // $t40 := borrow_field<OGProfilesTest2::State>.minted_nfts($t21) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:147:25+22
    assume {:print "$at(2,5162,5184)"} true;
    $t40 := $ChildMutation($t21, 1, $Dereference($t21)->$minted_nfts);

    // $t41 := signer::address_of($t0) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:147:49+27
    call $t41 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,5186,5213)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // simple_map::add<address, address>($t40, $t41, $t39) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:147:9+81
    call $t40 := $1_simple_map_add'address_address'($t40, $t41, $t39);
    if ($abort_flag) {
        assume {:print "$at(2,5146,5227)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // write_back[Reference($t21).minted_nfts (simple_map::SimpleMap<address, address>)]($t40) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:147:9+81
    $t21 := $UpdateMutation($t21, $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'_minted_nfts($Dereference($t21), $Dereference($t40)));

    // $t42 := signer::address_of($t0) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:149:61+27
    assume {:print "$at(2,5290,5317)"} true;
    call $t42 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,5290,5317)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // assume Identical($t43, signer::$address_of($t25)) at /Users/don/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:226:9+46
    assume {:print "$at(133,8288,8334)"} true;
    assume ($t43 == $1_signer_$address_of($t25));

    // object::transfer_raw($t25, $t39, $t42) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:149:9+80
    assume {:print "$at(2,5238,5318)"} true;
    call $1_object_transfer_raw($t25, $t39, $t42);
    if ($abort_flag) {
        assume {:print "$at(2,5238,5318)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // $t44 := pack OGProfilesTest2::Profile($t32) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:151:23+51
    assume {:print "$at(2,5343,5394)"} true;
    $t44 := $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile($t32);

    // trace_local[profile]($t44) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:151:13+7
    assume {:print "$track_local(70,4,13):", $t44} $t44 == $t44;

    // move_to<OGProfilesTest2::Profile>($t44, $t0) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:155:9+7
    assume {:print "$at(2,5405,5412)"} true;
    if ($ResourceExists($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile_$memory := $ResourceUpdate($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_Profile_$memory, $t0->$addr, $t44);
    }
    if ($abort_flag) {
        assume {:print "$at(2,5405,5412)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // $t45 := borrow_field<OGProfilesTest2::State>.profile_mint_event($t21) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:157:20+29
    assume {:print "$at(2,5461,5490)"} true;
    $t45 := $ChildMutation($t21, 6, $Dereference($t21)->$profile_mint_event);

    // $t46 := timestamp::now_seconds() on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:158:32+24
    assume {:print "$at(2,5541,5565)"} true;
    call $t46 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,5541,5565)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // $t47 := signer::address_of($t0) on_abort goto L2 with $t22 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:159:20+27
    assume {:print "$at(2,5586,5613)"} true;
    call $t47 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,5586,5613)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(70,4):", $t22} $t22 == $t22;
        goto L2;
    }

    // $t48 := pack OGProfilesTest2::ProfileMintEvent($t47, $t39, $t46) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:157:51+174
    assume {:print "$at(2,5492,5666)"} true;
    $t48 := $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_ProfileMintEvent($t47, $t39, $t46);

    // opaque begin: event::emit_event<OGProfilesTest2::ProfileMintEvent>($t45, $t48) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:157:9+217

    // opaque end: event::emit_event<OGProfilesTest2::ProfileMintEvent>($t45, $t48) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:157:9+217

    // write_back[Reference($t21).profile_mint_event (event::EventHandle<OGProfilesTest2::ProfileMintEvent>)]($t45) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:157:9+217
    $t21 := $UpdateMutation($t21, $Update'$b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State'_profile_mint_event($Dereference($t21), $Dereference($t45)));

    // write_back[OGProfilesTest2::State@]($t21) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:157:9+217
    $b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory := $ResourceUpdate($b43cd6ea5cc7840b9e02fe98eaf8a4abeec8d515372f57bcd39bcec42824a504_OGProfilesTest2_State_$memory, $GlobalLocationAddress($t21),
        $Dereference($t21));

    // label L1 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:163:5+1
    assume {:print "$at(2,5674,5675)"} true;
L1:

    // return () at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:163:5+1
    assume {:print "$at(2,5674,5675)"} true;
    return;

    // label L2 at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:163:5+1
L2:

    // abort($t22) at /Users/don/Documents/dev/startups/kade-smartcontracts/sources/og-profiles.move:163:5+1
    assume {:print "$at(2,5674,5675)"} true;
    $abort_code := $t22;
    $abort_flag := true;
    return;

}
